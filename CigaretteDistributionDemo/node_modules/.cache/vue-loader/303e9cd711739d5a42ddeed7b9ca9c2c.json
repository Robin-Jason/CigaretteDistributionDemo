{"remainingRequest":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/src/components/DataTable.vue?vue&type=template&id=1bcc6778&scoped=true","dependencies":[{"path":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/src/components/DataTable.vue","mtime":1757584896370},{"path":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1757585542841},{"path":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/node_modules/cache-loader/dist/cjs.js","mtime":1757585542421},{"path":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/index.js","mtime":1757585542667}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iZGF0YS10YWJsZS1jb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0idGFibGUtaGVhZGVyIj4KICAgICAgPGgzPuWNt+eDn+aKleaUvuaVsOaNrue7n+iuoeihqDwvaDM+CiAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1hY3Rpb25zIj4KICAgICAgICA8ZWwtYnV0dG9uIHR5cGU9InByaW1hcnkiIHNpemU9InNtYWxsIiBAY2xpY2s9ImhhbmRsZVJlZnJlc2giPgogICAgICAgICAgPGVsLWljb24+PFJlZnJlc2ggLz48L2VsLWljb24+CiAgICAgICAgICDliLfmlrAKICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICA8ZWwtYnV0dG9uIAogICAgICAgICAgdHlwZT0ic3VjY2VzcyIgCiAgICAgICAgICBzaXplPSJzbWFsbCIgCiAgICAgICAgICBAY2xpY2s9ImhhbmRsZUV4cG9ydCIKICAgICAgICAgIDpsb2FkaW5nPSJleHBvcnRMb2FkaW5nIgogICAgICAgICAgOmRpc2FibGVkPSJ0YWJsZURhdGEubGVuZ3RoID09PSAwIgogICAgICAgID4KICAgICAgICAgIDxlbC1pY29uPjxEb3dubG9hZCAvPjwvZWwtaWNvbj4KICAgICAgICAgIHt7IGV4cG9ydExvYWRpbmcgPyAn5a+85Ye65LitLi4uJyA6ICflr7zlh7pFeGNlbCcgfX0KICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0idGFibGUtY29udGVudCIgdi1pZj0idGFibGVEYXRhLmxlbmd0aCA+IDAiPgogICAgICA8ZWwtdGFibGUKICAgICAgICA6ZGF0YT0idGFibGVEYXRhIgogICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwJSIKICAgICAgICBoZWlnaHQ9IjEwMCUiCiAgICAgICAgYm9yZGVyCiAgICAgICAgc3RyaXBlCiAgICAgICAgc2l6ZT0iZGVmYXVsdCIKICAgICAgICA6aGVhZGVyLWNlbGwtc3R5bGU9InsgYmFja2dyb3VuZDogJyNmNWY3ZmEnLCBjb2xvcjogJyM2MDYyNjYnIH0iCiAgICAgICAgOnJvdy1jbGFzcy1uYW1lPSJnZXRSb3dDbGFzc05hbWUiCiAgICAgICAgQHJvdy1jbGljaz0iaGFuZGxlUm93Q2xpY2siCiAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgdi1sb2FkaW5nPSJsb2FkaW5nIgogICAgICAgIGVsZW1lbnQtbG9hZGluZy10ZXh0PSLmraPlnKjliqDovb3mlbDmja4uLi4iCiAgICAgID4KICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9ImNpZ0NvZGUiIGxhYmVsPSLljbfng5/ku6PnoIEiIHdpZHRoPSIxMDAiIGFsaWduPSJjZW50ZXIiIC8+CiAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJjaWdOYW1lIiBsYWJlbD0i5Y2354Of5ZCN56ewIiB3aWR0aD0iMTgwIiAvPgogICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0iZGF0ZURpc3BsYXkiIGxhYmVsPSLml6XmnJ8iIHdpZHRoPSIxNTAiIGFsaWduPSJjZW50ZXIiIC8+CiAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJkZWxpdmVyeUFyZWEiIGxhYmVsPSLmipXmlL7ljLrln58iIHdpZHRoPSIyMDAiIC8+CiAgICAgICAgCiAgICAgICAgPCEtLSAzMOS4quaho+S9jeWIl++8jOS7jjMw5qGj5byA5aeL5YiwMeahoyAtLT4KICAgICAgICA8ZWwtdGFibGUtY29sdW1uIAogICAgICAgICAgdi1mb3I9InBvc2l0aW9uIGluIHJldmVyc2VkUG9zaXRpb25zIiAKICAgICAgICAgIDprZXk9ImBkJHtwb3NpdGlvbn1gIiAKICAgICAgICAgIDpwcm9wPSJgZCR7cG9zaXRpb259YCIgCiAgICAgICAgICA6bGFiZWw9ImAke3Bvc2l0aW9ufeaho2AiIAogICAgICAgICAgd2lkdGg9IjUwIiAKICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgPgogICAgICAgICAgPHRlbXBsYXRlICNkZWZhdWx0PSJzY29wZSI+CiAgICAgICAgICAgIDxzcGFuIDpjbGFzcz0iZ2V0Q2VsbENsYXNzKHNjb3BlLnJvd1tgZCR7cG9zaXRpb259YF0pIj4KICAgICAgICAgICAgICB7eyBzY29wZS5yb3dbYGQke3Bvc2l0aW9ufWBdIHx8IDAgfX0KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAKICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InJlbWFyayIgbGFiZWw9IuWkh+azqCIgbWluLXdpZHRoPSIxMjAiIC8+CiAgICAgIDwvZWwtdGFibGU+CiAgICA8L2Rpdj4KICAgIDxkaXYgdi1lbHNlIGNsYXNzPSJuby1kYXRhLXRpcCI+CiAgICAgIDxlbC1lbXB0eSBkZXNjcmlwdGlvbj0i5pqC5peg5pWw5o2uIiA6aW1hZ2Utc2l6ZT0iMTAwIj4KICAgICAgICA8dGVtcGxhdGUgI2Rlc2NyaXB0aW9uPgogICAgICAgICAgPHNwYW4+6K+35YWI6L6T5YWl5p+l6K+i5p2h5Lu26L+b6KGM5p+l6K+iPC9zcGFuPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtZW1wdHk+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/src/components/DataTable.vue"],"names":[],"mappings":"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AAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/robin/school learning/whu/semester 1/PrecisionCigaretteDistributionModel/demo/CigaretteDistributionDemo/src/components/DataTable.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"data-table-container\">\n    <div class=\"table-header\">\n      <h3>卷烟投放数据统计表</h3>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" size=\"small\" @click=\"handleRefresh\">\n          <el-icon><Refresh /></el-icon>\n          刷新\n        </el-button>\n        <el-button \n          type=\"success\" \n          size=\"small\" \n          @click=\"handleExport\"\n          :loading=\"exportLoading\"\n          :disabled=\"tableData.length === 0\"\n        >\n          <el-icon><Download /></el-icon>\n          {{ exportLoading ? '导出中...' : '导出Excel' }}\n        </el-button>\n      </div>\n    </div>\n    \n    <div class=\"table-content\" v-if=\"tableData.length > 0\">\n      <el-table\n        :data=\"tableData\"\n        style=\"width: 100%\"\n        height=\"100%\"\n        border\n        stripe\n        size=\"default\"\n        :header-cell-style=\"{ background: '#f5f7fa', color: '#606266' }\"\n        :row-class-name=\"getRowClassName\"\n        @row-click=\"handleRowClick\"\n        highlight-current-row\n        v-loading=\"loading\"\n        element-loading-text=\"正在加载数据...\"\n      >\n        <el-table-column prop=\"cigCode\" label=\"卷烟代码\" width=\"100\" align=\"center\" />\n        <el-table-column prop=\"cigName\" label=\"卷烟名称\" width=\"180\" />\n        <el-table-column prop=\"dateDisplay\" label=\"日期\" width=\"150\" align=\"center\" />\n        <el-table-column prop=\"deliveryArea\" label=\"投放区域\" width=\"200\" />\n        \n        <!-- 30个档位列，从30档开始到1档 -->\n        <el-table-column \n          v-for=\"position in reversedPositions\" \n          :key=\"`d${position}`\" \n          :prop=\"`d${position}`\" \n          :label=\"`${position}档`\" \n          width=\"50\" \n          align=\"center\"\n        >\n          <template #default=\"scope\">\n            <span :class=\"getCellClass(scope.row[`d${position}`])\">\n              {{ scope.row[`d${position}`] || 0 }}\n            </span>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"remark\" label=\"备注\" min-width=\"120\" />\n      </el-table>\n    </div>\n    <div v-else class=\"no-data-tip\">\n      <el-empty description=\"暂无数据\" :image-size=\"100\">\n        <template #description>\n          <span>请先输入查询条件进行查询</span>\n        </template>\n      </el-empty>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Download, Refresh } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\nimport { cigaretteDistributionAPI } from '../services/api'\nimport { ExcelExporter } from '../utils/excelExport'\n\nexport default {\n  name: 'DataTable',\n  components: {\n    Download,\n    Refresh\n  },\n  props: {\n    searchParams: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['row-selected', 'data-loaded'],\n  data() {\n    return {\n      selectedRow: null,\n      tableData: [],\n      loading: false,\n      total: 0,\n      originalTotal: 0,\n      exportLoading: false\n    }\n  },\n  computed: {\n    reversedPositions() {\n      // 从30档到1档的顺序\n      return Array.from({length: 30}, (_, i) => 30 - i)\n    }\n  },\n  watch: {\n    searchParams: {\n      handler(newParams) {\n        if (newParams && Object.keys(newParams).length > 0) {\n          this.loadData(newParams)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    async loadData(params) {\n      // 检查必要的查询参数\n      if (!params.year || !params.month || !params.weekSeq) {\n        return\n      }\n      \n      this.loading = true\n      try {\n        const response = await cigaretteDistributionAPI.queryDistribution({\n          year: params.year,\n          month: params.month,\n          weekSeq: params.weekSeq\n        })\n        \n        if (response.data.success) {\n          let rawData = response.data.data || []\n          this.total = response.data.total || 0\n          this.originalTotal = response.data.originalTotal || 0\n          \n          // 为每条数据添加日期显示字段\n          rawData = rawData.map(item => ({\n            ...item,\n            dateDisplay: this.formatDate(item.year, item.month, item.weekSeq)\n          }))\n          \n          // 对数据进行分组排序，使同一卷烟同一日期的记录聚集在一起\n          this.tableData = this.sortDataForGrouping(rawData)\n          \n          ElMessage.success(`查询成功，共找到 ${this.total} 条记录（原始记录：${this.originalTotal} 条）`)\n          this.$emit('data-loaded', this.tableData)\n          \n          // 如果有数据且只有一条记录，自动选中该记录并显示投放量信息\n          if (this.tableData.length === 1) {\n            this.handleRowClick(this.tableData[0])\n            ElMessage.info('已自动选中唯一记录')\n          }\n        } else {\n          ElMessage.error(response.data.message || '查询失败')\n        }\n      } catch (error) {\n        console.error('查询数据失败:', error)\n        ElMessage.error('查询数据失败，请检查网络连接')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    getCellClass(value) {\n      if (!value || value === 0) return ''\n      if (value > 30) return 'high-value'\n      if (value > 10) return 'medium-value'\n      return 'low-value'\n    },\n    \n    getRowClassName({ row, rowIndex }) {\n      let className = ''\n      \n      // 如果是同一卷烟同一日期的记录，使用统一的高亮样式\n      if (this.selectedRow) {\n        // 更安全的比较逻辑\n        const selectedCigCode = String(this.selectedRow.cigCode || '').trim()\n        const rowCigCode = String(row.cigCode || '').trim()\n        const selectedYear = parseInt(this.selectedRow.year) || 0\n        const rowYear = parseInt(row.year) || 0\n        const selectedMonth = parseInt(this.selectedRow.month) || 0\n        const rowMonth = parseInt(row.month) || 0\n        const selectedWeekSeq = parseInt(this.selectedRow.weekSeq) || 0\n        const rowWeekSeq = parseInt(row.weekSeq) || 0\n        \n        const isSameGroup = (\n          selectedCigCode === rowCigCode &&\n          selectedYear === rowYear &&\n          selectedMonth === rowMonth &&\n          selectedWeekSeq === rowWeekSeq\n        )\n        \n        \n        if (isSameGroup) {\n          className += 'selected-group-row '\n          \n          // 如果是当前精确选中的行，添加额外的选中标识\n          const selectedArea = String(this.selectedRow.deliveryArea || '').trim()\n          const rowArea = String(row.deliveryArea || '').trim()\n          if (selectedArea === rowArea) {\n            className += 'current-selected '\n          }\n        }\n      }\n      \n      // 检查是否是分组的第一行（用于添加上边距分隔）\n      if (this.isGroupFirstRow(row, rowIndex)) {\n        className += 'group-first-row '\n      }\n      \n      return className.trim()\n    },\n    \n    handleRowClick(row) {\n      // 确保selectedRow保存的是原始行数据的完整副本\n      this.selectedRow = { ...row }\n      \n      \n      // 确保传递完整的记录信息，包括投放相关信息\n      const selectedRecord = {\n        ...row,\n        // 保持原有的字段映射\n        cigCode: row.cigCode,\n        cigName: row.cigName,\n        year: row.year,\n        month: row.month,\n        weekSeq: row.weekSeq,\n        // 添加投放量信息\n        advAmount: row.advAmount,\n        actualDelivery: row.actualDelivery,\n        // 修正字段名：使用deliveryArea（根据实际API返回）\n        deliveryArea: row.deliveryArea,\n        // 添加投放类型信息\n        deliveryMethod: row.deliveryMethod,\n        deliveryEtype: row.deliveryEtype,\n        remark: row.remark\n      }\n      \n      // 滚动到选中的行组区域\n      this.scrollToSelectedGroup()\n      \n      console.log('选中行详细信息:', {\n        selectedRow: this.selectedRow,\n        selectedRecord: selectedRecord\n      })\n      this.$emit('row-selected', selectedRecord)\n    },\n    \n    handleRefresh() {\n      if (this.searchParams && Object.keys(this.searchParams).length > 0) {\n        this.loadData(this.searchParams)\n      } else {\n        ElMessage.warning('请先设置查询条件')\n      }\n    },\n    \n    handleExport() {\n      if (this.tableData.length === 0) {\n        ElMessage.warning('暂无数据可导出')\n        return\n      }\n      \n      this.exportLoading = true\n      \n      try {\n        // 调用Excel导出工具类\n        const result = ExcelExporter.exportCigaretteData(\n          this.tableData, \n          this.searchParams\n        )\n        \n        if (result.success) {\n          ElMessage.success(`Excel文件导出成功：${result.filename}`)\n        } else {\n          ElMessage.error(result.message)\n        }\n      } catch (error) {\n        console.error('导出失败:', error)\n        ElMessage.error('导出失败，请稍后重试')\n      } finally {\n        this.exportLoading = false\n      }\n    },\n    \n    formatDate(year, month, weekSeq) {\n      // 格式化日期显示：××年××月第×周\n      if (year && month && weekSeq) {\n        return `${year}年${month}月第${weekSeq}周`\n      }\n      return ''\n    },\n    \n    sortDataForGrouping(data) {\n      // 对数据进行分组排序，使同一卷烟同一日期的记录聚集在一起\n      return data.sort((a, b) => {\n        // 首先按卷烟名称排序\n        if (a.cigName !== b.cigName) {\n          return a.cigName.localeCompare(b.cigName, 'zh-CN')\n        }\n        \n        // 然后按年份排序\n        if (a.year !== b.year) {\n          return a.year - b.year\n        }\n        \n        // 然后按月份排序\n        if (a.month !== b.month) {\n          return a.month - b.month\n        }\n        \n        // 然后按周序号排序\n        if (a.weekSeq !== b.weekSeq) {\n          return a.weekSeq - b.weekSeq\n        }\n        \n        // 最后按投放区域排序，确保同组内的顺序稳定\n        return (a.deliveryArea || '').localeCompare(b.deliveryArea || '', 'zh-CN')\n      })\n    },\n    \n    isGroupFirstRow(row, rowIndex) {\n      // 第一行肯定是分组第一行\n      if (rowIndex === 0) return true\n      \n      // 检查当前行与前一行是否属于不同的分组\n      const prevRow = this.tableData[rowIndex - 1]\n      if (!prevRow) return true\n      \n      // 比较分组关键字段：卷烟名称、年份、月份、周序号（使用严格类型比较）\n      return (\n        String(row.cigName || '') !== String(prevRow.cigName || '') ||\n        Number(row.year) !== Number(prevRow.year) ||\n        Number(row.month) !== Number(prevRow.month) ||\n        Number(row.weekSeq) !== Number(prevRow.weekSeq)\n      )\n    },\n    \n    scrollToSelectedGroup() {\n      // 延迟执行，确保DOM更新完成\n      this.$nextTick(() => {\n        // 查找第一个选中组的行\n        const selectedGroupRow = document.querySelector('.selected-group-row')\n        if (selectedGroupRow) {\n          // 平滑滚动到该行\n          selectedGroupRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center'\n          })\n        }\n      })\n    },\n    \n    // 外部调用的方法，用于从搜索选中时滚动\n    scrollToSelectedRecord(record) {\n      // 确保selectedRow保存的是记录的完整副本\n      this.selectedRow = { ...record }\n      this.scrollToSelectedGroup()\n    },\n    \n    // 更新档位数据的方法\n    updatePositionData(cigCode, year, month, weekSeq, positionData) {\n      const itemIndex = this.tableData.findIndex(row => \n        row.cigCode === cigCode && \n        row.year === year && \n        row.month === month && \n        row.weekSeq === weekSeq\n      )\n      \n      if (itemIndex !== -1) {\n        // 创建新的数据对象，确保响应式更新\n        const updatedItem = { ...this.tableData[itemIndex] }\n        \n        // 更新档位数据，将position格式转换为d格式\n        Object.keys(positionData).forEach(key => {\n          if (key.startsWith('position')) {\n            const positionNum = key.replace('position', '')\n            const dKey = `d${positionNum}`\n            updatedItem[dKey] = positionData[key]\n          }\n        })\n        \n        // 使用Vue 3的响应式方式更新数组元素\n        this.tableData.splice(itemIndex, 1, updatedItem)\n        \n        console.log(`表格数据已更新: ${cigCode}`, updatedItem)\n        ElMessage.success('档位数据更新成功')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-table-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.table-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #e4e7ed;\n}\n\n.table-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.header-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.table-content {\n  flex: 1;\n  overflow: hidden;\n  max-height: calc(35vh - 100px);\n}\n\n.no-data-tip {\n  text-align: center;\n  color: #909399;\n  padding: 40px;\n  font-size: 14px;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:deep(.el-table) {\n  font-size: 11px;\n}\n\n:deep(.el-table th) {\n  padding: 8px 0;\n}\n\n:deep(.el-table td) {\n  padding: 4px 0;\n}\n\n.high-value {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.medium-value {\n  color: #409eff;\n}\n\n.low-value {\n  color: #909399;\n}\n\n/* 高亮行样式 */\n:deep(.highlight-row) {\n  background-color: #e6f3ff !important;\n}\n\n:deep(.highlight-row:hover) {\n  background-color: #cce7ff !important;\n}\n\n/* 选中组行样式（同一卷烟同一日期的所有记录统一背景） */\n:deep(.el-table .el-table__row.selected-group-row) {\n  background-color: #e6f3ff !important;\n  border-left: 3px solid #409eff !important;\n}\n\n:deep(.el-table .el-table__row.selected-group-row:hover) {\n  background-color: #d6edff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row) {\n  background-color: #e6f3ff !important;\n  border-left: 3px solid #409eff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row:hover) {\n  background-color: #d6edff !important;\n}\n\n/* 当前精确选中的行样式（在组内突出显示） */\n:deep(.el-table .el-table__row.selected-group-row.current-selected) {\n  background-color: #cce7ff !important;\n  border-left: 5px solid #1976d2 !important;\n  font-weight: 600;\n}\n\n:deep(.el-table .el-table__row.selected-group-row.current-selected:hover) {\n  background-color: #b3d9ff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row.current-selected) {\n  background-color: #cce7ff !important;\n  border-left: 5px solid #1976d2 !important;\n  font-weight: 600;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row.current-selected:hover) {\n  background-color: #b3d9ff !important;\n}\n\n/* 分组第一行样式（添加上边距分隔） */\n:deep(.group-first-row) {\n  border-top: 2px solid #e4e7ed !important;\n}\n\n/* 如果分组第一行同时是选中组，则使用蓝色分隔线 */\n:deep(.selected-group-row.group-first-row) {\n  border-top: 2px solid #409eff !important;\n}\n\n/* 强制覆盖Element Plus表格的默认背景样式 */\n:deep(.el-table__body-wrapper .el-table__body .selected-group-row td) {\n  background-color: #e6f3ff !important;\n}\n\n:deep(.el-table__body-wrapper .el-table__body .selected-group-row.current-selected td) {\n  background-color: #cce7ff !important;\n}\n</style>"]}]}