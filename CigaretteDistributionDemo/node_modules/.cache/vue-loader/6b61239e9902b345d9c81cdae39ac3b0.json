{"remainingRequest":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/robin/Desktop/20250904/CigaretteDistributionDemo/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css","dependencies":[{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/src/views/Home.vue","mtime":1757415038981},{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sYXlvdXQtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGhlaWdodDogMTAwdmg7Cn0KCi5zaWRlYmFyIHsKICB3aWR0aDogMjQwcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzM0NDk1ZSAwJSwgIzJjM2U1MCAxMDAlKTsKICBjb2xvcjogd2hpdGU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9Cgouc2lkZWJhci1oZWFkZXIgewogIHBhZGRpbmc6IDIwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzQ0OTVlOwp9Cgouc2lkZWJhci1oZWFkZXIgaDIgewogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogNTAwOwogIG1hcmdpbjogMDsKfQoKLnNpZGViYXItbWVudSB7CiAgZmxleDogMTsKICBib3JkZXI6IG5vbmU7Cn0KCi5zaWRlYmFyLW1lbnUgLmVsLW1lbnUtaXRlbSB7CiAgaGVpZ2h0OiA1MHB4OwogIGxpbmUtaGVpZ2h0OiA1MHB4Owp9CgoubWFpbi1jb250ZW50IHsKICBmbGV4OiAxOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBiYWNrZ3JvdW5kOiAjZjVmN2ZhOwogIG92ZXJmbG93OiBhdXRvOwogIHBhZGRpbmc6IDE1cHg7CiAgZ2FwOiAxNXB4OwogIGhlaWdodDogY2FsYygxMDB2aCAtIDBweCk7Cn0KCi8qIOWvvOWFpeWKn+iDveWMuuWfn+agt+W8jyAqLwouaW1wb3J0LXNlY3Rpb24gewogIGZsZXg6IDAgMCBhdXRvOwp9CgouaW1wb3J0LWJ1dHRvbnMtcm93IHsKICBkaXNwbGF5OiBmbGV4OwogIGdhcDogMTVweDsKICBwYWRkaW5nOiAxNXB4OwogIGJhY2tncm91bmQ6ICNmZmZmZmY7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjNDA5ZWZmOwp9CgouaW1wb3J0LWJ1dHRvbnMtcm93IC5lbC1idXR0b24gewogIGhlaWdodDogNDBweDsKICBwYWRkaW5nOiAwIDIwcHg7CiAgZm9udC1zaXplOiAxNHB4OwogIGZvbnQtd2VpZ2h0OiA1MDA7Cn0KCi8qIOWvueivneahhuagt+W8jyAqLwoudXBsb2FkLXRpcCB7CiAgbWFyZ2luLXRvcDogOHB4OwogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogIzkwOTM5OTsKfQoKLmRpYWxvZy1mb290ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICBnYXA6IDEwcHg7Cn0KCi8qIOeUn+aIkOWIhumFjeaWueahiOWvueivneahhuagt+W8jyAqLwouZ2VuZXJhdGUtcGxhbi1jb250ZW50IHsKICBwYWRkaW5nOiAwOwp9CgoucGxhbi1kZXNjcmlwdGlvbiB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLnBsYW4tZGVzY3JpcHRpb24gcCB7CiAgbWFyZ2luOiA4cHggMDsKICBmb250LXNpemU6IDE0cHg7CiAgbGluZS1oZWlnaHQ6IDEuNTsKfQoKLmdlbmVyYXRlLXRpcHMgewogIG1hcmdpbi10b3A6IDE1cHg7Cn0KCi5nZW5lcmF0ZS10aXBzIC5lbC1hbGVydCB7CiAgbWFyZ2luOiAxMHB4IDA7Cn0KCi5kYXRhLXRhYmxlLXNlY3Rpb24gewogIGZsZXg6IDEuMjsKICBtaW4taGVpZ2h0OiAyODBweDsKICBtYXgtaGVpZ2h0OiAzMnZoOwogIHBhZGRpbmc6IDEycHg7CiAgYmFja2dyb3VuZDogd2hpdGU7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmZvcm0tc2VjdGlvbiB7CiAgZmxleDogMCAwIGF1dG87CiAgcGFkZGluZzogMTJweDsKICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICBib3JkZXItcmFkaXVzOiA4cHg7CiAgYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKTsKfQo="},{"version":3,"sources":["/Users/robin/Desktop/20250904/CigaretteDistributionDemo/src/views/Home.vue"],"names":[],"mappings":"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","file":"/Users/robin/Desktop/20250904/CigaretteDistributionDemo/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"layout-container\">\n    <!-- 左侧菜单栏 -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-header\">\n        <h2>卷烟投放管理系统</h2>\n      </div>\n      <el-menu\n        default-active=\"1\"\n        class=\"sidebar-menu\"\n        background-color=\"#2c3e50\"\n        text-color=\"#ffffff\"\n        active-text-color=\"#409EFF\"\n      >\n        <el-menu-item index=\"1\">\n          <el-icon><Grid /></el-icon>\n          <span>模型投放</span>\n        </el-menu-item>\n      </el-menu>\n    </aside>\n\n     <!-- 主内容区域 -->\n     <main class=\"main-content\">\n       <!-- 数据导入功能区域 -->\n       <section class=\"import-section\">\n         <div class=\"import-buttons-row\">\n           <el-button \n             type=\"primary\" \n             size=\"default\"\n             @click=\"showBasicInfoImportDialog\"\n           >\n             <el-icon><DocumentAdd /></el-icon>\n             导入卷烟投放基本信息\n           </el-button>\n           <el-button \n             type=\"success\" \n             size=\"default\"\n             @click=\"showCustomerDataImportDialog\"\n           >\n             <el-icon><DataAnalysis /></el-icon>\n             导入区域客户数\n           </el-button>\n           <el-button \n             type=\"warning\" \n             size=\"default\"\n             @click=\"showGeneratePlanDialog\"\n           >\n             <el-icon><Cpu /></el-icon>\n             生成分配方案\n           </el-button>\n         </div>\n       </section>\n       \n       <!-- 上方数据表格区域 -->\n       <section class=\"data-table-section\">\n        <DataTable \n          ref=\"dataTable\"\n          :search-params=\"searchParams\"\n          @row-selected=\"handleRowSelected\"\n          @data-loaded=\"handleDataLoaded\"\n        />\n      </section>\n\n      <!-- 中间表单区域 -->\n      <section class=\"form-section\">\n        <SearchForm \n          :selected-record=\"selectedRecord\"\n          :table-data=\"tableData\"\n          @search=\"handleSearch\"\n          @search-next=\"handleSearchNext\"\n          @reset=\"handleReset\"\n          @export=\"handleExport\"\n          @cigarette-name-matched=\"handleCigaretteNameMatched\"\n          @position-updated=\"handlePositionUpdated\"\n          @area-added=\"handleAreaAdded\"\n          @areas-deleted=\"handleAreasDeleted\"\n        />\n      </section>\n\n    </main>\n    \n    <!-- 卷烟投放基本信息导入对话框 -->\n    <el-dialog\n      v-model=\"basicInfoImportDialogVisible\"\n      title=\"导入卷烟投放基本信息\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"basicInfoTimeForm\" label-width=\"80px\">\n        <el-form-item label=\"年份\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.year\" \n            placeholder=\"选择年份\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"year in yearOptions\" \n              :key=\"year\" \n              :label=\"year\" \n              :value=\"year\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"月份\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.month\" \n            placeholder=\"选择月份\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"month in monthOptions\" \n              :key=\"month\" \n              :label=\"`${month}月`\" \n              :value=\"month\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"周序号\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.weekSeq\" \n            placeholder=\"选择周序号\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"week in weekOptions\" \n              :key=\"week\" \n              :label=\"`第${week}周`\" \n              :value=\"week\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"选择文件\" required>\n          <el-upload\n            ref=\"basicInfoUpload\"\n            class=\"basic-info-upload\"\n            :auto-upload=\"false\"\n            :show-file-list=\"true\"\n            accept=\".xlsx,.xls\"\n            :limit=\"1\"\n            :file-list=\"basicInfoFileList\"\n            :before-upload=\"handleBasicInfoBeforeUpload\"\n            :on-remove=\"handleBasicInfoRemove\"\n          >\n            <el-button type=\"primary\">\n              <el-icon><Plus /></el-icon>\n              选择Excel文件\n            </el-button>\n          </el-upload>\n          <div class=\"upload-tip\">支持Excel格式(.xlsx, .xls)，文件大小不超过10MB</div>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"basicInfoImportDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleBasicInfoImport\"\n            :loading=\"basicInfoImporting\"\n            :disabled=\"!canImportBasicInfo\"\n          >\n            确定导入\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 区域客户数导入对话框 -->\n    <el-dialog\n      v-model=\"customerDataImportDialogVisible\"\n      title=\"导入区域客户数\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"customerImportForm\" label-width=\"120px\">\n        <el-form-item label=\"投放类型\" required>\n          <el-select\n            v-model=\"customerImportForm.distributionType\"\n            placeholder=\"请选择投放类型\"\n            style=\"width: 100%\"\n            @change=\"handleCustomerImportTypeChange\"\n          >\n            <el-option label=\"按档位统一投放\" value=\"按档位统一投放\" />\n            <el-option label=\"按档位扩展投放\" value=\"按档位扩展投放\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item \n          v-if=\"customerImportForm.distributionType === '按档位扩展投放'\" \n          label=\"扩展投放类型\" \n          required\n        >\n          <el-select\n            v-model=\"customerImportForm.extendedType\"\n            placeholder=\"请选择扩展投放类型\"\n            style=\"width: 100%\"\n          >\n            <el-option label=\"档位+区县\" value=\"档位+区县\" />\n            <el-option label=\"档位+城乡分类代码\" value=\"档位+城乡分类代码\" />\n            <el-option label=\"档位+市场类型\" value=\"档位+市场类型\" />\n            <el-option label=\"档位+业态\" value=\"档位+业态\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"选择文件\" required>\n          <el-upload\n            ref=\"customerDataUpload\"\n            class=\"customer-data-upload\"\n            :auto-upload=\"false\"\n            :show-file-list=\"true\"\n            accept=\".xlsx,.xls\"\n            :limit=\"1\"\n            :file-list=\"customerDataFileList\"\n            :before-upload=\"handleCustomerDataBeforeUpload\"\n            :on-remove=\"handleCustomerDataRemove\"\n          >\n            <el-button type=\"primary\">\n              <el-icon><Plus /></el-icon>\n              选择Excel文件\n            </el-button>\n          </el-upload>\n          <div class=\"upload-tip\">支持Excel格式(.xlsx, .xls)，文件大小不超过10MB</div>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"customerDataImportDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleCustomerDataImport\"\n            :loading=\"customerDataImporting\"\n            :disabled=\"!canImportCustomerData\"\n          >\n            确定导入\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 生成分配方案对话框 -->\n    <el-dialog\n      v-model=\"generatePlanDialogVisible\"\n      title=\"生成分配方案\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"generate-plan-content\">\n        <div class=\"plan-description\">\n          <el-alert\n            title=\"分配方案生成说明\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n          >\n            <template #default>\n              <p>系统将根据选定时间的卷烟投放基本信息和区域客户数据，自动计算生成各卷烟的档位分配方案。</p>\n              <p>请选择需要生成分配方案的时间范围：</p>\n            </template>\n          </el-alert>\n        </div>\n        \n        <el-divider />\n        \n        <el-form :model=\"generatePlanForm\" label-width=\"80px\">\n          <el-form-item label=\"年份\" required>\n            <el-select \n              v-model=\"generatePlanForm.year\" \n              placeholder=\"选择年份\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"year in yearOptions\" \n                :key=\"year\" \n                :label=\"year\" \n                :value=\"year\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"月份\" required>\n            <el-select \n              v-model=\"generatePlanForm.month\" \n              placeholder=\"选择月份\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"month in monthOptions\" \n                :key=\"month\" \n                :label=\"`${month}月`\" \n                :value=\"month\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"周序号\" required>\n            <el-select \n              v-model=\"generatePlanForm.weekSeq\" \n              placeholder=\"选择周序号\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"week in weekOptions\" \n                :key=\"week\" \n                :label=\"`第${week}周`\" \n                :value=\"week\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n        \n        <div class=\"generate-tips\">\n          <el-alert\n            v-if=\"!isGeneratePlanTimeComplete\"\n            title=\"请选择完整的时间信息后再生成分配方案\"\n            type=\"warning\"\n            :closable=\"false\"\n            show-icon\n          />\n          <el-alert\n            v-else\n            :title=\"`将为 ${generatePlanForm.year}年${generatePlanForm.month}月第${generatePlanForm.weekSeq}周 生成分配方案`\"\n            type=\"success\"\n            :closable=\"false\"\n            show-icon\n          />\n        </div>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"generatePlanDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleGeneratePlan\"\n            :loading=\"generatingPlan\"\n            :disabled=\"!canGeneratePlan\"\n          >\n            {{ generatingPlan ? '生成中...' : '确定生成' }}\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { Grid, DocumentAdd, DataAnalysis, Plus, Cpu } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\nimport DataTable from '../components/DataTable.vue'\nimport SearchForm from '../components/SearchForm.vue'\nimport { cigaretteDistributionAPI } from '../services/api'\n\nexport default {\n  name: 'Home',\n  components: {\n    Grid,\n    DataTable,\n    SearchForm,\n    DocumentAdd,\n    DataAnalysis,\n    Plus,\n    Cpu\n  },\n  data() {\n    return {\n      searchParams: {},\n      selectedCigaretteName: '',\n      currentPositionData: {},\n      selectedRecord: null,\n      tableData: [],\n      \n      // 卷烟投放基本信息导入\n      basicInfoImportDialogVisible: false,\n      basicInfoFileList: [],\n      basicInfoImporting: false,\n      basicInfoTimeForm: {\n        year: null,\n        month: null,\n        weekSeq: null\n      },\n      \n      // 区域客户数导入\n      customerDataImportDialogVisible: false,\n      customerDataFileList: [],\n      customerDataImporting: false,\n      customerImportForm: {\n        distributionType: '',\n        extendedType: ''\n      },\n      \n      // 生成分配方案\n      generatePlanDialogVisible: false,\n      generatePlanForm: {\n        year: null,\n        month: null,\n        weekSeq: null\n      },\n      generatingPlan: false\n    }\n  },\n  computed: {\n    // 年份选项\n    yearOptions() {\n      const currentYear = new Date().getFullYear()\n      const years = []\n      for (let year = currentYear - 2; year <= currentYear + 2; year++) {\n        years.push(year)\n      }\n      return years\n    },\n    \n    // 月份选项\n    monthOptions() {\n      return Array.from({ length: 12 }, (_, i) => i + 1)\n    },\n    \n    // 周序号选项\n    weekOptions() {\n      return [1, 2, 3, 4, 5]\n    },\n    \n    // 基本信息时间表单是否完整\n    isBasicInfoTimeComplete() {\n      return this.basicInfoTimeForm.year && \n             this.basicInfoTimeForm.month && \n             this.basicInfoTimeForm.weekSeq\n    },\n    \n    // 是否可以导入基本信息\n    canImportBasicInfo() {\n      return this.basicInfoFileList.length > 0 && \n             this.isBasicInfoTimeComplete &&\n             !this.basicInfoImporting\n    },\n    \n    // 是否可以导入客户数据\n    canImportCustomerData() {\n      const hasFile = this.customerDataFileList.length > 0\n      const hasDistributionType = this.customerImportForm.distributionType\n      const hasExtendedType = this.customerImportForm.distributionType !== '按档位扩展投放' || \n                              this.customerImportForm.extendedType\n      \n      return hasFile && hasDistributionType && hasExtendedType && !this.customerDataImporting\n    },\n    \n    // 生成分配方案时间表单是否完整\n    isGeneratePlanTimeComplete() {\n      return this.generatePlanForm.year && \n             this.generatePlanForm.month && \n             this.generatePlanForm.weekSeq\n    },\n    \n    // 是否可以生成分配方案\n    canGeneratePlan() {\n      return this.isGeneratePlanTimeComplete && !this.generatingPlan\n    }\n  },\n  methods: {\n    handleSearch(searchForm) {\n      console.log('搜索参数:', searchForm)\n      \n      // 更新搜索参数，触发表格和档位设置的更新\n      this.searchParams = { \n        year: searchForm.year,\n        month: searchForm.month,\n        weekSeq: searchForm.week\n      }\n      \n      ElMessage.success(`已查询：${searchForm.year}年${searchForm.month}月第${searchForm.week}周`)\n    },\n    \n    handleDataLoaded(data) {\n      // 当表格数据加载完成时\n      this.tableData = data\n      console.log('表格数据已加载:', data)\n      \n      // 注意：不在这里清除选中状态，让DataTable组件处理自动选中逻辑\n    },\n    \n    handleRowSelected(row) {\n      // 行被选中时，查找该卷烟在当前日期的所有投放记录\n      const relatedRecords = this.tableData.filter(record => \n        record.cigName === row.cigName &&\n        record.year === row.year &&\n        record.month === row.month &&\n        record.weekSeq === row.weekSeq\n      )\n      \n      // 收集所有投放区域\n      const allAreas = relatedRecords.map(record => record.deliveryArea).filter(area => area)\n      \n      // 更新选中的卷烟名称和记录\n      this.selectedCigaretteName = row.cigName\n      \n      // 创建包含所有区域信息的选中记录\n      this.selectedRecord = {\n        ...row,\n        allAreas: allAreas,\n        totalRecords: relatedRecords.length\n      }\n      \n      \n      console.log('选中行及相关记录:', {\n        selectedRow: row,\n        relatedRecords: relatedRecords,\n        allAreas: allAreas\n      })\n      \n      ElMessage.info(`已选中：${row.cigName}，该日期共有 ${relatedRecords.length} 个投放区域`)\n    },\n    \n    \n    handleReset() {\n      // 重置所有搜索条件和状态\n      this.searchParams = {}\n      this.selectedCigaretteName = ''\n      this.currentPositionData = {}\n      this.selectedRecord = null\n      this.tableData = []\n      \n      // 通知DataTable组件清除选中状态\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.selectedRow = null\n      }\n      \n      ElMessage.info('已重置查询条件')\n    },\n    \n    handleExport(searchForm) {\n      console.log('导出参数:', searchForm)\n      \n      // 检查是否有数据可导出\n      if (!this.tableData || this.tableData.length === 0) {\n        ElMessage.warning('暂无数据可导出，请先查询数据')\n        return\n      }\n      \n      // 调用DataTable组件的导出功能\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.handleExport()\n      } else {\n        ElMessage.error('导出组件未找到')\n      }\n    },\n    \n    handleSearchNext() {\n      // 调用DataTable组件的searchNext方法\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.searchNext()\n      }\n    },\n    \n    handleCigaretteNameMatched(matchedRecords) {\n      // 当卷烟名称搜索匹配到记录时，处理多个记录\n      console.log('卷烟名称匹配到记录:', matchedRecords)\n      \n      if (Array.isArray(matchedRecords) && matchedRecords.length > 0) {\n        // 取第一个记录作为主要记录\n        const primaryRecord = matchedRecords[0]\n        \n        // 收集所有投放区域\n        const allAreas = matchedRecords.map(record => record.deliveryArea).filter(area => area)\n        \n        // 更新选中的卷烟名称\n        this.selectedCigaretteName = primaryRecord.cigName\n        \n        // 创建包含所有区域信息的选中记录\n        this.selectedRecord = {\n          ...primaryRecord,\n          allAreas: allAreas,\n          totalRecords: matchedRecords.length\n        }\n        \n        \n        // 同步更新DataTable的选中状态（选中第一个记录）\n        if (this.$refs.dataTable) {\n          this.$refs.dataTable.scrollToSelectedRecord(primaryRecord)\n        }\n        \n        console.log('搜索匹配选中记录:', {\n          primaryRecord: primaryRecord,\n          allMatchedRecords: matchedRecords,\n          allAreas: allAreas\n        })\n      }\n    },\n    \n    // 处理档位设置更新\n    async handlePositionUpdated(updateInfo) {\n      console.log('档位设置已更新:', updateInfo)\n      \n      try {\n        // 刷新表格数据以显示更新后的结果\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 保持当前选中状态\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === updateInfo.cigCode) {\n              // 找到更新后的记录并重新选中\n              const updatedRecord = this.tableData.find(record => \n                record.cigCode === updateInfo.cigCode &&\n                record.year === updateInfo.updateData.year &&\n                record.month === updateInfo.updateData.month &&\n                record.weekSeq === updateInfo.updateData.weekSeq\n              )\n              \n              if (updatedRecord) {\n                this.handleRowSelected(updatedRecord)\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success('表格数据已刷新，显示最新的档位设置')\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('档位设置已保存，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // 处理新增投放区域\n    async handleAreaAdded(addInfo) {\n      console.log('新增投放区域:', addInfo)\n      \n      try {\n        // 刷新表格数据以显示新增的记录\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 等待表格数据更新后，重新选中该卷烟的所有记录\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === addInfo.cigCode) {\n              // 找到该卷烟在当前日期的所有记录（包括新增的）\n              const allRecordsForCigarette = this.tableData.filter(record => \n                record.cigCode === addInfo.cigCode &&\n                record.year === this.selectedRecord.year &&\n                record.month === this.selectedRecord.month &&\n                record.weekSeq === this.selectedRecord.weekSeq\n              )\n              \n              if (allRecordsForCigarette.length > 0) {\n                // 选中第一个记录，这会触发所有相关记录的高亮显示\n                this.handleRowSelected(allRecordsForCigarette[0])\n                \n                // 滚动到选中的记录组\n                if (this.$refs.dataTable) {\n                  this.$refs.dataTable.scrollToSelectedRecord(allRecordsForCigarette[0])\n                }\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success(`表格已刷新，新增的投放区域记录已显示并集中相邻排列`)\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('投放区域已新增，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // 处理删除投放区域\n    async handleAreasDeleted(deleteInfo) {\n      console.log('删除投放区域:', deleteInfo)\n      \n      try {\n        // 刷新表格数据以移除删除的记录\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 等待表格数据更新后，重新选中该卷烟的剩余记录\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === deleteInfo.cigCode) {\n              // 找到该卷烟在当前日期的剩余记录\n              const remainingRecordsForCigarette = this.tableData.filter(record => \n                record.cigCode === deleteInfo.cigCode &&\n                record.year === this.selectedRecord.year &&\n                record.month === this.selectedRecord.month &&\n                record.weekSeq === this.selectedRecord.weekSeq\n              )\n              \n              if (remainingRecordsForCigarette.length > 0) {\n                // 选中第一个剩余记录，这会触发所有相关记录的高亮显示\n                this.handleRowSelected(remainingRecordsForCigarette[0])\n                \n                // 滚动到选中的记录组\n                if (this.$refs.dataTable) {\n                  this.$refs.dataTable.scrollToSelectedRecord(remainingRecordsForCigarette[0])\n                }\n              } else {\n                // 如果没有剩余记录，清除选中状态\n                this.selectedRecord = null\n                this.selectedCigaretteName = ''\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success(`表格已刷新，已删除的投放区域记录已移除`)\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('投放区域已删除，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // =================== 导入功能方法 ===================\n    \n    // 显示基本信息导入对话框\n    showBasicInfoImportDialog() {\n      this.basicInfoImportDialogVisible = true\n    },\n    \n    // 显示客户数据导入对话框\n    showCustomerDataImportDialog() {\n      this.customerDataImportDialogVisible = true\n    },\n    \n    // 基本信息文件上传前检查\n    handleBasicInfoBeforeUpload(file) {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                      file.type === 'application/vnd.ms-excel'\n      const isLt10M = file.size / 1024 / 1024 < 10\n      \n      if (!isExcel) {\n        ElMessage.error('只能上传Excel文件!')\n        return false\n      }\n      if (!isLt10M) {\n        ElMessage.error('文件大小不能超过10MB!')\n        return false\n      }\n      \n      this.basicInfoFileList = [file]\n      return false // 阻止自动上传\n    },\n    \n    // 移除基本信息文件\n    handleBasicInfoRemove() {\n      this.basicInfoFileList = []\n    },\n    \n    // 导入基本信息\n    async handleBasicInfoImport() {\n      if (!this.canImportBasicInfo) {\n        ElMessage.warning('请检查文件和时间选择')\n        return\n      }\n      \n      this.basicInfoImporting = true\n      \n      try {\n        const formData = new FormData()\n        formData.append('file', this.basicInfoFileList[0])\n        formData.append('year', this.basicInfoTimeForm.year)\n        formData.append('month', this.basicInfoTimeForm.month)\n        formData.append('weekSeq', this.basicInfoTimeForm.weekSeq)\n        \n        // 调用后端导入接口\n        const response = await cigaretteDistributionAPI.importBasicInfo(formData)\n        \n        if (response.data.success) {\n          ElMessage.success(`基本信息导入成功！共导入 ${response.data.importCount} 条记录`)\n          \n          // 关闭对话框并清理文件\n          this.basicInfoImportDialogVisible = false\n          this.basicInfoFileList = []\n          this.basicInfoTimeForm = { year: null, month: null, weekSeq: null }\n          \n          // 刷新表格数据\n          if (this.$refs.dataTable) {\n            this.$refs.dataTable.handleRefresh()\n          }\n        } else {\n          throw new Error(response.data.message || '导入失败')\n        }\n      } catch (error) {\n        console.error('导入基本信息失败:', error)\n        ElMessage.error(`导入失败: ${error.message}`)\n      } finally {\n        this.basicInfoImporting = false\n      }\n    },\n    \n    // 客户数据投放类型变化\n    handleCustomerImportTypeChange(value) {\n      this.customerImportForm.extendedType = ''\n    },\n    \n    // 客户数据文件上传前检查\n    handleCustomerDataBeforeUpload(file) {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                      file.type === 'application/vnd.ms-excel'\n      const isLt10M = file.size / 1024 / 1024 < 10\n      \n      if (!isExcel) {\n        ElMessage.error('只能上传Excel文件!')\n        return false\n      }\n      if (!isLt10M) {\n        ElMessage.error('文件大小不能超过10MB!')\n        return false\n      }\n      \n      this.customerDataFileList = [file]\n      return false // 阻止自动上传\n    },\n    \n    // 移除客户数据文件\n    handleCustomerDataRemove() {\n      this.customerDataFileList = []\n    },\n    \n    // 导入客户数据\n    async handleCustomerDataImport() {\n      if (!this.canImportCustomerData) {\n        ElMessage.warning('请检查文件和投放类型选择')\n        return\n      }\n      \n      this.customerDataImporting = true\n      \n      try {\n        const formData = new FormData()\n        formData.append('file', this.customerDataFileList[0])\n        formData.append('distributionType', this.customerImportForm.distributionType)\n        if (this.customerImportForm.extendedType) {\n          formData.append('extendedType', this.customerImportForm.extendedType)\n        }\n        \n        // 调用后端导入接口\n        const response = await cigaretteDistributionAPI.importCustomerData(formData)\n        \n        if (response.data.success) {\n          ElMessage.success(`客户数据导入成功！共导入 ${response.data.importCount} 条记录`)\n          \n          // 关闭对话框并清理文件\n          this.customerDataImportDialogVisible = false\n          this.customerDataFileList = []\n          this.customerImportForm.distributionType = ''\n          this.customerImportForm.extendedType = ''\n          \n          // 刷新表格数据\n          if (this.$refs.dataTable) {\n            this.$refs.dataTable.handleRefresh()\n          }\n        } else {\n          throw new Error(response.data.message || '导入失败')\n        }\n      } catch (error) {\n        console.error('导入客户数据失败:', error)\n        ElMessage.error(`导入失败: ${error.message}`)\n      } finally {\n        this.customerDataImporting = false\n      }\n    },\n    \n    // =================== 生成分配方案功能方法 ===================\n    \n    // 显示生成分配方案对话框\n    showGeneratePlanDialog() {\n      this.generatePlanDialogVisible = true\n    },\n    \n    // 生成分配方案\n    async handleGeneratePlan() {\n      if (!this.canGeneratePlan) {\n        ElMessage.warning('请选择年份、月份和周序号')\n        return\n      }\n      \n      this.generatingPlan = true\n      \n      try {\n        const requestData = {\n          year: this.generatePlanForm.year,\n          month: this.generatePlanForm.month,\n          weekSeq: this.generatePlanForm.weekSeq\n        }\n        \n        console.log('生成分配方案请求数据:', requestData)\n        \n        // 调用后端生成分配方案接口\n        const response = await cigaretteDistributionAPI.generateDistributionPlan(requestData)\n        \n        if (response.data.success) {\n          ElMessage.success({\n            message: `分配方案生成成功！共处理 ${response.data.processedCount || 0} 条卷烟记录`,\n            duration: 3000\n          })\n          \n          // 关闭对话框并清理表单\n          this.generatePlanDialogVisible = false\n          this.generatePlanForm = { year: null, month: null, weekSeq: null }\n          \n          // 刷新表格数据\n          if (this.$refs.dataTable) {\n            this.$refs.dataTable.handleRefresh()\n          }\n        } else {\n          throw new Error(response.data.message || '生成分配方案失败')\n        }\n      } catch (error) {\n        console.error('生成分配方案失败:', error)\n        ElMessage.error(`生成失败: ${error.message}`)\n      } finally {\n        this.generatingPlan = false\n      }\n    }\n  },\n  \n  beforeUnmount() {\n    // 清理定时器\n    if (this.updateTimer) {\n      clearTimeout(this.updateTimer)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n.sidebar {\n  width: 240px;\n  background: linear-gradient(180deg, #34495e 0%, #2c3e50 100%);\n  color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.sidebar-header {\n  padding: 20px;\n  text-align: center;\n  border-bottom: 1px solid #34495e;\n}\n\n.sidebar-header h2 {\n  font-size: 18px;\n  font-weight: 500;\n  margin: 0;\n}\n\n.sidebar-menu {\n  flex: 1;\n  border: none;\n}\n\n.sidebar-menu .el-menu-item {\n  height: 50px;\n  line-height: 50px;\n}\n\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #f5f7fa;\n  overflow: auto;\n  padding: 15px;\n  gap: 15px;\n  height: calc(100vh - 0px);\n}\n\n/* 导入功能区域样式 */\n.import-section {\n  flex: 0 0 auto;\n}\n\n.import-buttons-row {\n  display: flex;\n  gap: 15px;\n  padding: 15px;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-left: 4px solid #409eff;\n}\n\n.import-buttons-row .el-button {\n  height: 40px;\n  padding: 0 20px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n/* 对话框样式 */\n.upload-tip {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n/* 生成分配方案对话框样式 */\n.generate-plan-content {\n  padding: 0;\n}\n\n.plan-description {\n  margin-bottom: 15px;\n}\n\n.plan-description p {\n  margin: 8px 0;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.generate-tips {\n  margin-top: 15px;\n}\n\n.generate-tips .el-alert {\n  margin: 10px 0;\n}\n\n.data-table-section {\n  flex: 1.2;\n  min-height: 280px;\n  max-height: 32vh;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.form-section {\n  flex: 0 0 auto;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n</style>"]}]}