{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/DataTable.vue?b69d","webpack:///./src/components/ImportTable.vue?da62","webpack:///./src/components/SearchForm.vue?9fa2","webpack:///./src/App.vue","webpack:///./src/App.vue?6697","webpack:///./src/views/Home.vue","webpack:///./src/components/DataTable.vue","webpack:///./src/services/api.js","webpack:///./src/utils/excelExport.js","webpack:///./src/components/DataTable.vue?3d43","webpack:///./src/components/SearchForm.vue","webpack:///./src/components/Position3DChart.vue","webpack:///./src/components/Position3DChart.vue?6f74","webpack:///./src/components/SearchForm.vue?cb08","webpack:///./src/components/ImportTable.vue","webpack:///./src/components/ImportTable.vue?b0f4","webpack:///./src/views/Home.vue?378f","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d807","webpack:///./src/components/Position3DChart.vue?fefa","webpack:///./src/views/Home.vue?9940"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","__exports__","render","class","default-active","background-color","text-color","active-text-color","index","handleImportSuccess","handleDataRefresh","ref","search-params","searchParams","handleRowSelected","handleDataLoaded","selected-record","selectedRecord","table-data","tableData","handleSearch","handleSearchNext","handleReset","handleExport","handleCigaretteNameMatched","handlePositionUpdated","handleAreaAdded","handleAreasDeleted","handleRefreshBeforeFilter","type","size","handleRefresh","loading","exportLoading","disabled","style","height","border","stripe","header-cell-style","background","color","row-class-name","getRowClassName","handleRowClick","highlight-current-row","element-loading-text","prop","label","width","align","default","scope","row","content","decodedExpression","placement","encodedExpression","reversedPositions","position","getCellClass","min-width","description","image-size","createApiInstance","baseURL","backendBaseUrl","VUE_APP_API_BASE_URL","instance","axios","timeout","interceptors","request","use","config","console","log","method","toUpperCase","url","params","error","Promise","reject","response","dataApi","commonApi","calculateApi","importApi","cigaretteDistributionAPI","post","headers","year","month","weekSeq","undefined","urbanRatio","ruralRatio","formData","warn","this","queryDistribution","updateCigaretteInfo","Error","filename","Array","isArray","timestamp","Date","toISOString","replace","defaultFilename","finalFilename","generateHeaders","prepareTableData","workbook","book_new","worksheet","aoa_to_sheet","setColumnWidths","setWorksheetStyles","book_append_sheet","keys","addSearchInfoSheet","excelBuffer","bookType","blob","Blob","success","message","baseHeaders","positionHeaders","remarkHeader","forEach","item","cigCode","cigName","deliveryArea","advAmount","actualDelivery","dKey","remark","columnWidths","header","colKey","encode_col","w","includes","dataRowCount","range","decode_range","col","e","headerCell","font","bold","rgb","fill","fgColor","alignment","horizontal","vertical","top","bottom","left","right","cell","infoData","toLocaleString","infoWorksheet","positionData","cigaretteInfo","positionTableData","preparePositionTableData","positionKey","unshift","components","Download","Refresh","props","emits","selectedRow","total","originalTotal","computed","from","_","watch","newParams","loadData","deep","immediate","methods","rawData","map","dateDisplay","formatDate","sortDataForGrouping","$emit","info","rowIndex","className","selectedCigCode","String","trim","rowCigCode","selectedYear","parseInt","rowYear","selectedMonth","rowMonth","selectedWeekSeq","rowWeekSeq","isSameGroup","selectedArea","rowArea","isGroupFirstRow","deliveryMethod","deliveryEtype","scrollToSelectedGroup","warning","exportCigaretteData","sort","a","b","localeCompare","prevRow","Number","$nextTick","selectedGroupRow","document","querySelector","scrollIntoView","behavior","block","record","itemIndex","findIndex","updatedItem","startsWith","positionNum","model","searchForm","inline","placeholder","clearable","yearOptions","week","min","max","cigaretteName","cigaretteNamePlaceholder","isDateComplete","handleCigaretteNameInput","handleCigaretteNameChange","prefix","distributionType","isFormDisabled","handleDistributionTypeChange","extendedType","handleExtendedTypeChange","distributionArea","areaPlaceholder","multiple","collapse-tags","collapse-tags-tooltip","handleDistributionAreaChange","deliveryAreaOptions","option","formatQuantity","readonly","suffix-icon","content-position","positionViewMode","switchPositionView","hasChartData","precision","step","handlePositionChange","show3DChart","title","destroy-on-close","close-on-click-modal","close-on-press-escape","show-close","draggable","handleDialogOpened","footer","exportChart","encodedExpressionInput","rows","isEncodingDisabled","handleEncodedExpressionInput","handleEncodedExpressionChange","resize","handleUpdateFromEncodedExpression","updatingFromEncoded","isEncodedExpressionChanged","encodedExpressionValidation","isValid","resetEditMode","closable","show-icon","decodedExpressionDisplay","encodedExpressionHint","editMode","handleSavePositions","savingPositions","isPositionDataValid","handleResetPositions","handleAddNewArea","canAddNewArea","handleDeleteAreas","canDeleteAreas","allAreas","areasToDelete","area","handleFilterLargeDeviation","filteringDeviation","largeDeviationRecords","currentDeviationIndex","hasData","uniqueAmounts","amount","colorMap","chart","chartData","Map","filter","updateChartData","setTimeout","initChart","dispose","$refs","chartContainer","container","clientWidth","clientHeight","echarts","addEventListener","handleResize","processData","renderChart","areas","Set","amounts","cigaretteData","add","positionValue","areaList","generateColorMap","fromEntries","clear","warmColors","coolColors","colorIndex","Math","floor","set","positions","text","textStyle","fontSize","fontWeight","tooltip","trigger","formatter","legend","show","xAxis3D","nameTextStyle","axisLabel","interval","rotate","yAxis3D","zAxis3D","grid3D","boxWidth","boxDepth","boxHeight","alpha","beta","viewControl","projection","autoRotate","rotateSensitivity","zoomSensitivity","panSensitivity","distance","light","main","intensity","ambient","environment","series","shading","barGap","barCategoryGap","emphasis","itemStyle","opacity","borderWidth","borderColor","setOption","Search","RefreshLeft","ArrowDown","LocationInformation","Setting","Check","Plus","Delete","Document","DataBoard","TrendCharts","Filter","Position3DChart","areaOptions","originalEncodedExpression","originalFormState","isConsistencyCheckEnabled","currentYear","getFullYear","years","some","val","relatedRecords","getRelatedRecords","decodedExpressions","generateRecordDecodedExpression","join","decoded","positionSummary","getPositionSummary","validation","validateEncodedExpressions","warnings","errors","hasOtherFormChanges","lines","split","line","lineCount","hasPositionChanges","hasDeliverySettingsChanges","hasDeliveryMethodChange","hasExtendedTypeChange","currentAreas","originalAreas","hasAreaChanges","JSON","stringify","changes","deliveryChanges","newRecord","loadPositionData","loadEncodedExpression","saveOriginalFormState","form","setEditMode","open3DChart","position3DChart","reinitChart","resolve","deviationRecords","parseFloat","deviation","abs","currentRecord","toFixed","duration","dangerouslyUseHTMLString","matchedRecords","numValue","isNaN","idx","needsConsistencyCheck","checkResult","performConsistencyCheck","passed","updateData","distribution","updatedRecords","selectedAreas","newAreas","confirm","confirmButtonText","cancelButtonText","addPromises","addData","responses","all","successCount","res","areasToDeleteList","remainingAreas","deleteData","deleteDeliveryAreas","deletedAreas","groupedExpressions","generateAggregatedExpressions","multiLineExpressions","relatedRecordsCount","groupedExpressionsCount","Boolean","records","expressions","expression","generateRecordEncodedExpression","typeCode","getDeliveryTypeCode","areaCode","getAreaCode","positionCode","generatePositionCode","code","areaMapping","mapping","charAt","positionGroups","currentValue","currentCount","group","endsWith","grouped","positionValues","errorMessage","batchUpdateData","encodedExpressions","batchUpdateFromExpressions","successMessage","operation","deletedRecords","createdRecords","updatedAreas","updateType","operationType","parsedEncoding","parseEncodedExpression","inconsistencies","checkConsistency","showConsistencyDialog","encoded","parsed","deliveryType","deliveryTypeCode","extendedTypeCode","areaCodes","areaNames","positionCoding","trimmed","firstChar","secondChar","regex","match","areaCodeStr","positionCodeStr","areaResult","parseAreaCodes","positionResult","parsePositionCoding","codes","segments","seg","totalPositions","segment","positionCount","deliveryAmount","currentIndex","parsedExpressions","deliveryTypes","allAreaCodes","current","inconsistencyText","customClass","beforeClose","action","done","confirmButtonLoading","forced","showBasicInfoImportDialog","showCustomerDataImportDialog","showGeneratePlanDialog","basicInfoImportDialogVisible","handleBasicInfoImport","basicInfoImporting","canImportBasicInfo","basicInfoTimeForm","label-width","required","monthOptions","weekOptions","auto-upload","show-file-list","accept","limit","file-list","basicInfoFileList","before-upload","handleBasicInfoBeforeUpload","on-change","handleBasicInfoChange","on-remove","handleBasicInfoRemove","customerDataImportDialogVisible","handleCustomerDataImport","customerDataImporting","canImportCustomerData","customerImportForm","handleCustomerImportTypeChange","isBiWeeklyFloat","customerDataFileList","handleCustomerDataBeforeUpload","handleCustomerDataChange","handleCustomerDataRemove","generatePlanDialogVisible","handleGeneratePlan","generatingPlan","canGeneratePlan","generatePlanForm","handleUrbanRatioChange","suffix","handleRuralRatioChange","ratioValidationMessage","ratioValidationType","isGeneratePlanTimeComplete","DocumentAdd","DataAnalysis","Cpu","QuestionFilled","isBasicInfoTimeComplete","hasFile","hasDeliveryMethod","hasYear","hasMonth","hasValidDeliveryType","isRatioValid","file","isExcel","toLowerCase","isLt10M","isFile","File","fileName","fileType","fileSize","fileList","originalFile","raw","requiredColumns","optionalColumns","maxSize","valid","validTypes","hasValidExtension","hasValidMimeType","totalRequiredColumns","note","structureCheck","checkBasicInfoStructure","FormData","append","toString","entries","importBasicInfo","insertedCount","importCount","totalColumns","dColumns","fileForCheck","checkCustomerDataStructure","importCustomerData","errorMessages","values","requestData","generateDistributionPlan","statisticsDetails","totalCigarettes","successfulAllocations","processedCount","processingTime","messageHtml","detail","Grid","DataTable","SearchForm","ImportTable","selectedCigaretteName","currentPositionData","totalRecords","dataTable","searchNext","primaryRecord","scrollToSelectedRecord","allMatchedRecords","updateInfo","updatedRecord","find","addInfo","allRecordsForCigarette","deleteInfo","remainingRecordsForCigarette","event","updateSearchForm","updateTimer","clearTimeout","routes","path","component","Home","router","history","app","App","mount"],"mappings":"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","file":"js/app.a55768b7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DataTable.vue?vue&type=style&index=0&id=09666fb2&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ImportTable.vue?vue&type=style&index=0&id=5d9fde14&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./SearchForm.vue?vue&type=style&index=0&id=a26b7134&scoped=true&lang=css\"","<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#app {\n  font-family: 'Microsoft YaHei', Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height: 100vh;\n  overflow: hidden;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=318347f8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=318347f8&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"layout-container\">\n    <!-- 左侧菜单栏 -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-header\">\n        <h2>卷烟投放管理系统</h2>\n      </div>\n      <el-menu\n        default-active=\"1\"\n        class=\"sidebar-menu\"\n        background-color=\"#2c3e50\"\n        text-color=\"#ffffff\"\n        active-text-color=\"#409EFF\"\n      >\n        <el-menu-item index=\"1\">\n          <el-icon><Grid /></el-icon>\n          <span>模型投放</span>\n        </el-menu-item>\n      </el-menu>\n    </aside>\n\n     <!-- 主内容区域 -->\n     <main class=\"main-content\">\n       <!-- 数据导入功能区域 -->\n       <section class=\"import-section\">\n         <ImportTable \n           @import-success=\"handleImportSuccess\"\n           @data-refresh=\"handleDataRefresh\"\n         />\n       </section>\n       \n       <!-- 上方数据表格区域 -->\n       <section class=\"data-table-section\">\n        <DataTable \n          ref=\"dataTable\"\n          :search-params=\"searchParams\"\n          @row-selected=\"handleRowSelected\"\n          @data-loaded=\"handleDataLoaded\"\n        />\n      </section>\n\n      <!-- 中间表单区域 -->\n      <section class=\"form-section\">\n        <SearchForm \n          ref=\"searchForm\"\n          :selected-record=\"selectedRecord\"\n          :table-data=\"tableData\"\n          @search=\"handleSearch\"\n          @search-next=\"handleSearchNext\"\n          @reset=\"handleReset\"\n          @export=\"handleExport\"\n          @cigarette-name-matched=\"handleCigaretteNameMatched\"\n          @position-updated=\"handlePositionUpdated\"\n          @area-added=\"handleAreaAdded\"\n          @areas-deleted=\"handleAreasDeleted\"\n          @refresh-before-filter=\"handleRefreshBeforeFilter\"\n        />\n      </section>\n\n    </main>\n    \n  </div>\n</template>\n\n<script>\nimport { Grid } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\nimport DataTable from '../components/DataTable.vue'\nimport SearchForm from '../components/SearchForm.vue'\nimport ImportTable from '../components/ImportTable.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    Grid,\n    DataTable,\n    SearchForm,\n    ImportTable\n  },\n  data() {\n    return {\n      searchParams: {},\n      selectedCigaretteName: '',\n      currentPositionData: {},\n      selectedRecord: null,\n      tableData: []\n    }\n  },\n  computed: {},\n  methods: {\n    handleSearch(searchForm) {\n      console.log('搜索参数:', searchForm)\n      \n      // 更新搜索参数，触发表格和档位设置的更新\n      this.searchParams = { \n        year: searchForm.year,\n        month: searchForm.month,\n        weekSeq: searchForm.week\n      }\n      \n      ElMessage.success(`已查询：${searchForm.year}年${searchForm.month}月第${searchForm.week}周`)\n    },\n    \n    handleDataLoaded(data) {\n      // 当表格数据加载完成时\n      this.tableData = data\n      console.log('表格数据已加载:', data)\n      \n      // 注意：不在这里清除选中状态，让DataTable组件处理自动选中逻辑\n    },\n    \n    handleRowSelected(row) {\n      // 行被选中时，查找该卷烟在当前日期的所有投放记录\n      const relatedRecords = this.tableData.filter(record => \n        record.cigName === row.cigName &&\n        record.year === row.year &&\n        record.month === row.month &&\n        record.weekSeq === row.weekSeq\n      )\n      \n      // 收集所有投放区域\n      const allAreas = relatedRecords.map(record => record.deliveryArea).filter(area => area)\n      \n      // 更新选中的卷烟名称和记录\n      this.selectedCigaretteName = row.cigName\n      \n      // 创建包含所有区域信息的选中记录\n      this.selectedRecord = {\n        ...row,\n        allAreas: allAreas,\n        totalRecords: relatedRecords.length\n      }\n      \n      \n      console.log('选中行及相关记录:', {\n        selectedRow: row,\n        relatedRecords: relatedRecords,\n        allAreas: allAreas\n      })\n      \n      ElMessage.info(`已选中：${row.cigName}，该日期共有 ${relatedRecords.length} 个投放区域`)\n    },\n    \n    \n    handleReset() {\n      // 重置所有搜索条件和状态\n      this.searchParams = {}\n      this.selectedCigaretteName = ''\n      this.currentPositionData = {}\n      this.selectedRecord = null\n      this.tableData = []\n      \n      // 通知DataTable组件清除选中状态\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.selectedRow = null\n      }\n      \n      ElMessage.info('已重置查询条件')\n    },\n    \n    handleExport(searchForm) {\n      console.log('导出参数:', searchForm)\n      \n      // 检查是否有数据可导出\n      if (!this.tableData || this.tableData.length === 0) {\n        ElMessage.warning('暂无数据可导出，请先查询数据')\n        return\n      }\n      \n      // 调用DataTable组件的导出功能\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.handleExport()\n      } else {\n        ElMessage.error('导出组件未找到')\n      }\n    },\n    \n    handleSearchNext() {\n      // 调用DataTable组件的searchNext方法\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.searchNext()\n      }\n    },\n    \n    handleCigaretteNameMatched(matchedRecords) {\n      // 当卷烟名称搜索匹配到记录时，处理多个记录\n      console.log('卷烟名称匹配到记录:', matchedRecords)\n      \n      if (Array.isArray(matchedRecords) && matchedRecords.length > 0) {\n        // 取第一个记录作为主要记录\n        const primaryRecord = matchedRecords[0]\n        \n        // 收集所有投放区域\n        const allAreas = matchedRecords.map(record => record.deliveryArea).filter(area => area)\n        \n        // 更新选中的卷烟名称\n        this.selectedCigaretteName = primaryRecord.cigName\n        \n        // 创建包含所有区域信息的选中记录\n        this.selectedRecord = {\n          ...primaryRecord,\n          allAreas: allAreas,\n          totalRecords: matchedRecords.length\n        }\n        \n        \n        // 同步更新DataTable的选中状态（选中第一个记录）\n        if (this.$refs.dataTable) {\n          this.$refs.dataTable.scrollToSelectedRecord(primaryRecord)\n        }\n        \n        console.log('搜索匹配选中记录:', {\n          primaryRecord: primaryRecord,\n          allMatchedRecords: matchedRecords,\n          allAreas: allAreas\n        })\n      }\n    },\n    \n    // 处理档位设置更新\n    async handlePositionUpdated(updateInfo) {\n      console.log('档位设置已更新:', updateInfo)\n      \n      try {\n        // 刷新表格数据以显示更新后的结果\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 保持当前选中状态\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === updateInfo.cigCode) {\n              // 找到更新后的记录并重新选中\n              const updatedRecord = this.tableData.find(record => \n                record.cigCode === updateInfo.cigCode &&\n                record.year === updateInfo.updateData.year &&\n                record.month === updateInfo.updateData.month &&\n                record.weekSeq === updateInfo.updateData.weekSeq\n              )\n              \n              if (updatedRecord) {\n                this.handleRowSelected(updatedRecord)\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success('表格数据已刷新，显示最新的档位设置')\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('档位设置已保存，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // 处理新增投放区域\n    async handleAreaAdded(addInfo) {\n      console.log('新增投放区域:', addInfo)\n      \n      try {\n        // 刷新表格数据以显示新增的记录\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 等待表格数据更新后，重新选中该卷烟的所有记录\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === addInfo.cigCode) {\n              // 找到该卷烟在当前日期的所有记录（包括新增的）\n              const allRecordsForCigarette = this.tableData.filter(record => \n                record.cigCode === addInfo.cigCode &&\n                record.year === this.selectedRecord.year &&\n                record.month === this.selectedRecord.month &&\n                record.weekSeq === this.selectedRecord.weekSeq\n              )\n              \n              if (allRecordsForCigarette.length > 0) {\n                // 选中第一个记录，这会触发所有相关记录的高亮显示\n                this.handleRowSelected(allRecordsForCigarette[0])\n                \n                // 滚动到选中的记录组\n                if (this.$refs.dataTable) {\n                  this.$refs.dataTable.scrollToSelectedRecord(allRecordsForCigarette[0])\n                }\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success(`表格已刷新，新增的投放区域记录已显示并集中相邻排列`)\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('投放区域已新增，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // 处理删除投放区域\n    async handleAreasDeleted(deleteInfo) {\n      console.log('删除投放区域:', deleteInfo)\n      \n      try {\n        // 刷新表格数据以移除删除的记录\n        if (this.$refs.dataTable) {\n          await this.$refs.dataTable.handleRefresh()\n          \n          // 等待表格数据更新后，重新选中该卷烟的剩余记录\n          setTimeout(() => {\n            if (this.selectedRecord && this.selectedRecord.cigCode === deleteInfo.cigCode) {\n              // 找到该卷烟在当前日期的剩余记录\n              const remainingRecordsForCigarette = this.tableData.filter(record => \n                record.cigCode === deleteInfo.cigCode &&\n                record.year === this.selectedRecord.year &&\n                record.month === this.selectedRecord.month &&\n                record.weekSeq === this.selectedRecord.weekSeq\n              )\n              \n              if (remainingRecordsForCigarette.length > 0) {\n                // 选中第一个剩余记录，这会触发所有相关记录的高亮显示\n                this.handleRowSelected(remainingRecordsForCigarette[0])\n                \n                // 滚动到选中的记录组\n                if (this.$refs.dataTable) {\n                  this.$refs.dataTable.scrollToSelectedRecord(remainingRecordsForCigarette[0])\n                }\n              } else {\n                // 如果没有剩余记录，清除选中状态\n                this.selectedRecord = null\n                this.selectedCigaretteName = ''\n              }\n            }\n          }, 500)\n        }\n        \n        ElMessage.success(`表格已刷新，已删除的投放区域记录已移除`)\n      } catch (error) {\n        console.error('刷新表格数据失败:', error)\n        ElMessage.warning('投放区域已删除，但表格刷新失败，请手动刷新')\n      }\n    },\n    \n    // =================== 导入组件事件处理 ===================\n    \n    // 处理导入成功事件\n    handleImportSuccess(event) {\n      console.log('导入成功事件:', event)\n      \n      if (event.type === 'generate-plan' && event.searchParams) {\n        // 如果是生成分配方案，自动刷新数据并设置搜索条件\n          setTimeout(() => {\n            console.log('自动刷新卷烟投放数据统计表，使用生成方案的时间范围...')\n            \n            const searchParams = {\n            year: event.searchParams.year,\n            month: event.searchParams.month,\n            week: event.searchParams.weekSeq\n            }\n            \n            console.log('搜索参数:', searchParams)\n            \n            // 更新SearchForm组件的搜索条件，确保界面显示正确的时间范围\n            if (this.$refs.searchForm && this.$refs.searchForm.updateSearchForm) {\n              this.$refs.searchForm.updateSearchForm(searchParams)\n            }\n            \n            this.handleSearch(searchParams)\n            \n            // 同时直接刷新DataTable组件作为备用方案\n            setTimeout(() => {\n              if (this.$refs.dataTable && this.$refs.dataTable.handleRefresh) {\n                console.log('直接刷新DataTable组件...')\n                this.$refs.dataTable.handleRefresh()\n                \n                // 显示数据刷新完成的提示\n                ElMessage.info({\n                  message: '数据已自动刷新，显示最新的分配方案',\n                  duration: 2000\n                })\n              }\n            }, 200) // 在搜索后再等200ms刷新表格\n            \n          }, 1000) // 增加到1秒，确保后端数据已保存\n      }\n    },\n    \n    // 处理数据刷新事件\n    handleDataRefresh() {\n      console.log('数据刷新事件')\n      \n      // 刷新表格数据\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.handleRefresh()\n      }\n    },\n    \n    // 处理筛选误差前的刷新事件\n    handleRefreshBeforeFilter() {\n      console.log('筛选误差前刷新数据')\n      \n      // 刷新表格数据以获取最新的实际投放量（用户可能修改了档位）\n      if (this.$refs.dataTable) {\n        this.$refs.dataTable.handleRefresh()\n      }\n    }\n  },\n  \n  beforeUnmount() {\n    // 清理定时器\n    if (this.updateTimer) {\n      clearTimeout(this.updateTimer)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n.sidebar {\n  width: 240px;\n  background: linear-gradient(180deg, #34495e 0%, #2c3e50 100%);\n  color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.sidebar-header {\n  padding: 20px;\n  text-align: center;\n  border-bottom: 1px solid #34495e;\n}\n\n.sidebar-header h2 {\n  font-size: 18px;\n  font-weight: 500;\n  margin: 0;\n}\n\n.sidebar-menu {\n  flex: 1;\n  border: none;\n}\n\n.sidebar-menu .el-menu-item {\n  height: 50px;\n  line-height: 50px;\n}\n\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #f5f7fa;\n  overflow: auto;\n  padding: 15px;\n  gap: 15px;\n  height: calc(100vh - 0px);\n}\n\n/* 导入功能区域样式 */\n.import-section {\n  flex: 0 0 auto;\n}\n\n.data-table-section {\n  flex: 1;\n  min-height: 200px;\n  max-height: 25vh;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.form-section {\n  flex: 1.5;\n  min-height: 300px;\n  max-height: 60vh;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  overflow-y: auto;\n}\n\n</style>","<template>\n  <div class=\"data-table-container\">\n    <div class=\"table-header\">\n      <h3>卷烟投放数据统计表</h3>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" size=\"small\" @click=\"handleRefresh\">\n          <el-icon><Refresh /></el-icon>\n          刷新\n        </el-button>\n        <el-button \n          type=\"success\" \n          size=\"small\" \n          @click=\"handleExport\"\n          :loading=\"exportLoading\"\n          :disabled=\"tableData.length === 0\"\n        >\n          <el-icon><Download /></el-icon>\n          {{ exportLoading ? '导出中...' : '导出Excel' }}\n        </el-button>\n      </div>\n    </div>\n    \n    <div class=\"table-content\" v-if=\"tableData.length > 0\">\n      <el-table\n        :data=\"tableData\"\n        style=\"width: 100%\"\n        height=\"100%\"\n        border\n        stripe\n        size=\"default\"\n        :header-cell-style=\"{ background: '#f5f7fa', color: '#606266' }\"\n        :row-class-name=\"getRowClassName\"\n        @row-click=\"handleRowClick\"\n        highlight-current-row\n        v-loading=\"loading\"\n        element-loading-text=\"正在加载数据...\"\n      >\n        <el-table-column prop=\"cigCode\" label=\"卷烟代码\" width=\"100\" align=\"center\" />\n        <el-table-column prop=\"cigName\" label=\"卷烟名称\" width=\"180\" />\n        <el-table-column prop=\"dateDisplay\" label=\"日期\" width=\"150\" align=\"center\" />\n        <el-table-column prop=\"encodedExpression\" label=\"编码表达\" width=\"200\" align=\"center\">\n          <template #default=\"scope\">\n            <el-tooltip v-if=\"scope.row.encodedExpression\" :content=\"scope.row.decodedExpression || '暂无解码信息'\" placement=\"top\">\n              <span class=\"encoded-expression\">{{ scope.row.encodedExpression }}</span>\n            </el-tooltip>\n            <span v-else class=\"no-encoding\">-</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deliveryArea\" label=\"投放区域\" width=\"200\" />\n        \n        <!-- 30个档位列，从30档开始到1档 -->\n        <el-table-column \n          v-for=\"position in reversedPositions\" \n          :key=\"`d${position}`\" \n          :prop=\"`d${position}`\" \n          :label=\"`${position}档`\" \n          width=\"50\" \n          align=\"center\"\n        >\n          <template #default=\"scope\">\n            <span :class=\"getCellClass(scope.row[`d${position}`])\">\n              {{ scope.row[`d${position}`] || 0 }}\n            </span>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"remark\" label=\"备注\" min-width=\"120\" />\n      </el-table>\n    </div>\n    <div v-else class=\"no-data-tip\">\n      <el-empty description=\"暂无数据\" :image-size=\"100\">\n        <template #description>\n          <span>请先输入查询条件进行查询</span>\n        </template>\n      </el-empty>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Download, Refresh } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\nimport { cigaretteDistributionAPI } from '../services/api'\nimport { ExcelExporter } from '../utils/excelExport'\n\nexport default {\n  name: 'DataTable',\n  components: {\n    Download,\n    Refresh\n  },\n  props: {\n    searchParams: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['row-selected', 'data-loaded'],\n  data() {\n    return {\n      selectedRow: null,\n      tableData: [],\n      loading: false,\n      total: 0,\n      originalTotal: 0,\n      exportLoading: false\n    }\n  },\n  computed: {\n    reversedPositions() {\n      // 从30档到1档的顺序\n      return Array.from({length: 30}, (_, i) => 30 - i)\n    }\n  },\n  watch: {\n    searchParams: {\n      handler(newParams) {\n        if (newParams && Object.keys(newParams).length > 0) {\n          this.loadData(newParams)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    async loadData(params) {\n      // 检查必要的查询参数\n      if (!params.year || !params.month || !params.weekSeq) {\n        return\n      }\n      \n      this.loading = true\n      try {\n        const response = await cigaretteDistributionAPI.queryDistribution({\n          year: params.year,\n          month: params.month,\n          weekSeq: params.weekSeq\n        })\n        \n        if (response.data.success) {\n          let rawData = response.data.data || []\n          this.total = response.data.total || 0\n          this.originalTotal = response.data.originalTotal || 0\n          \n          // 为每条数据添加日期显示字段\n          rawData = rawData.map(item => ({\n            ...item,\n            dateDisplay: this.formatDate(item.year, item.month, item.weekSeq)\n          }))\n          \n          // 对数据进行分组排序，使同一卷烟同一日期的记录聚集在一起\n          this.tableData = this.sortDataForGrouping(rawData)\n          \n          ElMessage.success(`查询成功，共找到 ${this.total} 条记录（原始记录：${this.originalTotal} 条）`)\n          this.$emit('data-loaded', this.tableData)\n          \n          // 如果有数据且只有一条记录，自动选中该记录并显示投放量信息\n          if (this.tableData.length === 1) {\n            this.handleRowClick(this.tableData[0])\n            ElMessage.info('已自动选中唯一记录')\n          }\n        } else {\n          ElMessage.error(response.data.message || '查询失败')\n        }\n      } catch (error) {\n        console.error('查询数据失败:', error)\n        ElMessage.error('查询数据失败，请检查网络连接')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    getCellClass(value) {\n      if (!value || value === 0) return ''\n      if (value > 30) return 'high-value'\n      if (value > 10) return 'medium-value'\n      return 'low-value'\n    },\n    \n    getRowClassName({ row, rowIndex }) {\n      let className = ''\n      \n      // 如果是同一卷烟同一日期的记录，使用统一的高亮样式\n      if (this.selectedRow) {\n        // 更安全的比较逻辑\n        const selectedCigCode = String(this.selectedRow.cigCode || '').trim()\n        const rowCigCode = String(row.cigCode || '').trim()\n        const selectedYear = parseInt(this.selectedRow.year) || 0\n        const rowYear = parseInt(row.year) || 0\n        const selectedMonth = parseInt(this.selectedRow.month) || 0\n        const rowMonth = parseInt(row.month) || 0\n        const selectedWeekSeq = parseInt(this.selectedRow.weekSeq) || 0\n        const rowWeekSeq = parseInt(row.weekSeq) || 0\n        \n        const isSameGroup = (\n          selectedCigCode === rowCigCode &&\n          selectedYear === rowYear &&\n          selectedMonth === rowMonth &&\n          selectedWeekSeq === rowWeekSeq\n        )\n        \n        \n        if (isSameGroup) {\n          className += 'selected-group-row '\n          \n          // 如果是当前精确选中的行，添加额外的选中标识\n          const selectedArea = String(this.selectedRow.deliveryArea || '').trim()\n          const rowArea = String(row.deliveryArea || '').trim()\n          if (selectedArea === rowArea) {\n            className += 'current-selected '\n          }\n        }\n      }\n      \n      // 检查是否是分组的第一行（用于添加上边距分隔）\n      if (this.isGroupFirstRow(row, rowIndex)) {\n        className += 'group-first-row '\n      }\n      \n      return className.trim()\n    },\n    \n    handleRowClick(row) {\n      // 确保selectedRow保存的是原始行数据的完整副本\n      this.selectedRow = { ...row }\n      \n      \n      // 确保传递完整的记录信息，包括投放相关信息\n      const selectedRecord = {\n        ...row,\n        // 保持原有的字段映射\n        cigCode: row.cigCode,\n        cigName: row.cigName,\n        year: row.year,\n        month: row.month,\n        weekSeq: row.weekSeq,\n        // 添加投放量信息\n        advAmount: row.advAmount,\n        actualDelivery: row.actualDelivery,\n        // 修正字段名：使用deliveryArea（根据实际API返回）\n        deliveryArea: row.deliveryArea,\n        // 添加投放类型信息\n        deliveryMethod: row.deliveryMethod,\n        deliveryEtype: row.deliveryEtype,\n        remark: row.remark\n      }\n      \n      // 滚动到选中的行组区域\n      this.scrollToSelectedGroup()\n      \n      console.log('选中行详细信息:', {\n        selectedRow: this.selectedRow,\n        selectedRecord: selectedRecord\n      })\n      this.$emit('row-selected', selectedRecord)\n    },\n    \n    handleRefresh() {\n      if (this.searchParams && Object.keys(this.searchParams).length > 0) {\n        this.loadData(this.searchParams)\n      } else {\n        ElMessage.warning('请先设置查询条件')\n      }\n    },\n    \n    handleExport() {\n      if (this.tableData.length === 0) {\n        ElMessage.warning('暂无数据可导出')\n        return\n      }\n      \n      this.exportLoading = true\n      \n      try {\n        // 调用Excel导出工具类\n        const result = ExcelExporter.exportCigaretteData(\n          this.tableData, \n          this.searchParams\n        )\n        \n        if (result.success) {\n          ElMessage.success(`Excel文件导出成功：${result.filename}`)\n        } else {\n          ElMessage.error(result.message)\n        }\n      } catch (error) {\n        console.error('导出失败:', error)\n        ElMessage.error('导出失败，请稍后重试')\n      } finally {\n        this.exportLoading = false\n      }\n    },\n    \n    formatDate(year, month, weekSeq) {\n      // 格式化日期显示：××年××月第×周\n      if (year && month && weekSeq) {\n        return `${year}年${month}月第${weekSeq}周`\n      }\n      return ''\n    },\n    \n    sortDataForGrouping(data) {\n      // 对数据进行分组排序，使同一卷烟同一日期的记录聚集在一起\n      return data.sort((a, b) => {\n        // 首先按卷烟名称排序\n        if (a.cigName !== b.cigName) {\n          return a.cigName.localeCompare(b.cigName, 'zh-CN')\n        }\n        \n        // 然后按年份排序\n        if (a.year !== b.year) {\n          return a.year - b.year\n        }\n        \n        // 然后按月份排序\n        if (a.month !== b.month) {\n          return a.month - b.month\n        }\n        \n        // 然后按周序号排序\n        if (a.weekSeq !== b.weekSeq) {\n          return a.weekSeq - b.weekSeq\n        }\n        \n        // 最后按投放区域排序，确保同组内的顺序稳定\n        return (a.deliveryArea || '').localeCompare(b.deliveryArea || '', 'zh-CN')\n      })\n    },\n    \n    isGroupFirstRow(row, rowIndex) {\n      // 第一行肯定是分组第一行\n      if (rowIndex === 0) return true\n      \n      // 检查当前行与前一行是否属于不同的分组\n      const prevRow = this.tableData[rowIndex - 1]\n      if (!prevRow) return true\n      \n      // 比较分组关键字段：卷烟名称、年份、月份、周序号（使用严格类型比较）\n      return (\n        String(row.cigName || '') !== String(prevRow.cigName || '') ||\n        Number(row.year) !== Number(prevRow.year) ||\n        Number(row.month) !== Number(prevRow.month) ||\n        Number(row.weekSeq) !== Number(prevRow.weekSeq)\n      )\n    },\n    \n    scrollToSelectedGroup() {\n      // 延迟执行，确保DOM更新完成\n      this.$nextTick(() => {\n        // 查找第一个选中组的行\n        const selectedGroupRow = document.querySelector('.selected-group-row')\n        if (selectedGroupRow) {\n          // 平滑滚动到该行\n          selectedGroupRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center'\n          })\n        }\n      })\n    },\n    \n    // 外部调用的方法，用于从搜索选中时滚动\n    scrollToSelectedRecord(record) {\n      // 确保selectedRow保存的是记录的完整副本\n      this.selectedRow = { ...record }\n      this.scrollToSelectedGroup()\n    },\n    \n    // 更新档位数据的方法\n    updatePositionData(cigCode, year, month, weekSeq, positionData) {\n      const itemIndex = this.tableData.findIndex(row => \n        row.cigCode === cigCode && \n        row.year === year && \n        row.month === month && \n        row.weekSeq === weekSeq\n      )\n      \n      if (itemIndex !== -1) {\n        // 创建新的数据对象，确保响应式更新\n        const updatedItem = { ...this.tableData[itemIndex] }\n        \n        // 更新档位数据，将position格式转换为d格式\n        Object.keys(positionData).forEach(key => {\n          if (key.startsWith('position')) {\n            const positionNum = key.replace('position', '')\n            const dKey = `d${positionNum}`\n            updatedItem[dKey] = positionData[key]\n          }\n        })\n        \n        // 使用Vue 3的响应式方式更新数组元素\n        this.tableData.splice(itemIndex, 1, updatedItem)\n        \n        console.log(`表格数据已更新: ${cigCode}`, updatedItem)\n        ElMessage.success('档位数据更新成功')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-table-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.table-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #e4e7ed;\n}\n\n.table-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.header-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.table-content {\n  flex: 1;\n  overflow: hidden;\n  max-height: calc(35vh - 100px);\n}\n\n.no-data-tip {\n  text-align: center;\n  color: #909399;\n  padding: 40px;\n  font-size: 14px;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:deep(.el-table) {\n  font-size: 11px;\n}\n\n:deep(.el-table th) {\n  padding: 8px 0;\n}\n\n:deep(.el-table td) {\n  padding: 4px 0;\n}\n\n.high-value {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.medium-value {\n  color: #409eff;\n}\n\n.low-value {\n  color: #909399;\n}\n\n/* 高亮行样式 */\n:deep(.highlight-row) {\n  background-color: #e6f3ff !important;\n}\n\n:deep(.highlight-row:hover) {\n  background-color: #cce7ff !important;\n}\n\n/* 选中组行样式（同一卷烟同一日期的所有记录统一背景） */\n:deep(.el-table .el-table__row.selected-group-row) {\n  background-color: #e6f3ff !important;\n  border-left: 3px solid #409eff !important;\n}\n\n:deep(.el-table .el-table__row.selected-group-row:hover) {\n  background-color: #d6edff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row) {\n  background-color: #e6f3ff !important;\n  border-left: 3px solid #409eff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row:hover) {\n  background-color: #d6edff !important;\n}\n\n/* 当前精确选中的行样式（在组内突出显示） */\n:deep(.el-table .el-table__row.selected-group-row.current-selected) {\n  background-color: #cce7ff !important;\n  border-left: 5px solid #1976d2 !important;\n  font-weight: 600;\n}\n\n:deep(.el-table .el-table__row.selected-group-row.current-selected:hover) {\n  background-color: #b3d9ff !important;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row.current-selected) {\n  background-color: #cce7ff !important;\n  border-left: 5px solid #1976d2 !important;\n  font-weight: 600;\n}\n\n:deep(.el-table .el-table__row--striped.selected-group-row.current-selected:hover) {\n  background-color: #b3d9ff !important;\n}\n\n/* 分组第一行样式（添加上边距分隔） */\n:deep(.group-first-row) {\n  border-top: 2px solid #e4e7ed !important;\n}\n\n/* 如果分组第一行同时是选中组，则使用蓝色分隔线 */\n:deep(.selected-group-row.group-first-row) {\n  border-top: 2px solid #409eff !important;\n}\n\n/* 强制覆盖Element Plus表格的默认背景样式 */\n:deep(.el-table__body-wrapper .el-table__body .selected-group-row td) {\n  background-color: #e6f3ff !important;\n}\n\n:deep(.el-table__body-wrapper .el-table__body .selected-group-row.current-selected td) {\n  background-color: #cce7ff !important;\n}\n\n/* 编码表达列样式 */\n.encoded-expression {\n  font-family: 'Consolas', 'Monaco', 'Menlo', monospace;\n  font-size: 12px;\n  color: #409eff;\n  background: rgba(64, 158, 255, 0.1);\n  padding: 2px 6px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.encoded-expression:hover {\n  background: rgba(64, 158, 255, 0.2);\n  color: #1976d2;\n}\n\n.no-encoding {\n  color: #c0c4cc;\n  font-style: italic;\n}\n</style>","import axios from 'axios'\n\n// 创建axios实例 - 基础配置\nconst createApiInstance = (baseURL) => {\n  // 后端服务运行在28080端口\n  const backendBaseUrl = process.env.VUE_APP_API_BASE_URL || `http://localhost:28080${baseURL}`\n  const instance = axios.create({\n    baseURL: backendBaseUrl,\n    timeout: 10000\n    // 不设置默认Content-Type，让每个请求自己决定\n  })\n  \n  // 请求拦截器\n  instance.interceptors.request.use(\n    config => {\n      console.log('发送请求:', config.method && config.method.toUpperCase(), config.url, config.data || config.params)\n      return config\n    },\n    error => {\n      console.error('请求错误:', error)\n      return Promise.reject(error)\n    }\n  )\n\n  // 响应拦截器\n  instance.interceptors.response.use(\n    response => {\n      console.log('响应数据:', response.data)\n      return response\n    },\n    error => {\n      console.error('响应错误:', error)\n      return Promise.reject(error)\n    }\n  )\n  \n  return instance\n}\n\n// 创建各模块的API实例\nconst dataApi = createApiInstance('/api/data')        // 数据管理接口\nconst commonApi = createApiInstance('/api/common')    // 通用功能接口  \nconst calculateApi = createApiInstance('/api/calculate') // 分配计算接口\nconst importApi = createApiInstance('/api/import')    // 数据导入接口\n\n// 卷烟分配服务相关API（重构为多模块接口）\nexport const cigaretteDistributionAPI = {\n  // =================== 通用功能接口 (/api/common) ===================\n  \n  // 健康检查\n  healthCheck() {\n    return commonApi.get('/health')\n  },\n  \n  // =================== 数据管理接口 (/api/data) ===================\n  \n  // 查询卷烟分配数据\n  queryDistribution(params) {\n    return dataApi.post('/query', params, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  },\n  \n  // 更新卷烟信息（主要接口）\n  updateCigaretteInfo(data) {\n    return dataApi.post('/update-cigarette', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  },\n  \n  // 删除投放区域\n  deleteDeliveryAreas(data) {\n    return dataApi.post('/delete-delivery-areas', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  },\n  \n  // 基于编码表达式批量更新投放信息\n  batchUpdateFromExpressions(data) {\n    return dataApi.post('/batch-update-from-expressions', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  },\n  \n  // =================== 分配计算接口 (/api/calculate) ===================\n  \n  // 写回分配矩阵\n  writeBackDistribution(params) {\n    // 注意：后端接口使用URL参数\n    return calculateApi.post(`/write-back?year=${params.year}&month=${params.month}&weekSeq=${params.weekSeq}`)\n  },\n  \n  // 生成分配方案\n  generateDistributionPlan(params) {\n    // 注意：后端接口使用URL参数而非请求体\n    // 新增：城网和农网分配比例参数（需要转换为小数格式 0.0-1.0）\n    let url = `/generate-distribution-plan?year=${params.year}&month=${params.month}&weekSeq=${params.weekSeq}`\n    \n    // 如果传入了比例参数，需要转换为小数格式（API要求0.0-1.0）\n    if (params.urbanRatio !== undefined && params.ruralRatio !== undefined) {\n      const urbanRatio = params.urbanRatio / 100  // 40 -> 0.4\n      const ruralRatio = params.ruralRatio / 100  // 60 -> 0.6\n      url += `&urbanRatio=${urbanRatio}&ruralRatio=${ruralRatio}`\n    }\n    // 如果不传比例参数，后端使用默认值（城网0.4，农网0.6）\n    \n    return calculateApi.post(url)\n  },\n  \n  // 计算总实际投放量\n  calculateTotalActualDelivery(params) {\n    return calculateApi.post(`/total-actual-delivery?year=${params.year}&month=${params.month}&weekSeq=${params.weekSeq}`)\n  },\n  \n  // =================== 数据导入接口 (/api/import) ===================\n  \n  // 导入卷烟投放基础信息\n  importBasicInfo(formData) {\n    return importApi.post('/cigarette-info', formData, {\n      headers: {\n        // 不设置Content-Type，让浏览器自动设置multipart/form-data和boundary\n      }\n    })\n  },\n  \n  // 导入区域客户数表\n  importCustomerData(formData) {\n    return importApi.post('/region-clientnum', formData, {\n      headers: {\n        // 不设置Content-Type，让浏览器自动设置multipart/form-data和boundary\n      }\n    })\n  },\n  \n  // =================== 废弃的接口（向后兼容） ===================\n  \n  // 查询原始数据（如需要可联系后端添加）\n  queryRawData(params) {\n    console.warn('queryRawData 接口已废弃，请使用 queryDistribution')\n    return this.queryDistribution(params)\n  },\n  \n  // 更新卷烟分配（废弃，建议使用updateCigaretteInfo）\n  updateDistribution(data) {\n    console.warn('updateDistribution 接口已废弃，请使用 updateCigaretteInfo')\n    return this.updateCigaretteInfo(data)\n  },\n  \n  // 测试分配算法（如需要可联系后端添加）\n  testAlgorithm() {\n    console.warn('testAlgorithm 接口暂不可用，请联系后端开发')\n    return Promise.reject(new Error('接口暂不可用'))\n  }\n}\n\n// =================== 废弃的API模块（保留以兼容现有代码） ===================\n\n// 卷烟投放方案相关API（废弃，建议使用cigaretteDistributionAPI）\nexport const distributionPlanAPI = {\n  // 查询卷烟投放方案\n  queryPlan(params) {\n    console.warn('distributionPlanAPI.queryPlan 已废弃，请使用 cigaretteDistributionAPI.queryDistribution')\n    return cigaretteDistributionAPI.queryDistribution(params)\n  },\n  \n  // 保存档位设置\n  savePositions(data) {\n    console.warn('distributionPlanAPI.savePositions 已废弃，请使用 cigaretteDistributionAPI.updateCigaretteInfo')\n    return cigaretteDistributionAPI.updateCigaretteInfo(data)\n  },\n  \n  // 获取档位数据\n  getPositionData(cigaretteName, year, month, week) {\n    console.warn('distributionPlanAPI.getPositionData 已废弃，请使用 cigaretteDistributionAPI.queryDistribution 查询特定卷烟')\n    return cigaretteDistributionAPI.queryDistribution({ year, month, weekSeq: week })\n  }\n}\n\n// 卷烟数据相关API（暂未在后端接口文档中找到对应接口）\nexport const cigaretteAPI = {\n  // 获取卷烟列表\n  getCigaretteList() {\n    console.warn('cigaretteAPI.getCigaretteList 接口暂不可用，请联系后端开发')\n    return Promise.reject(new Error('接口暂不可用'))\n  },\n  \n  // 搜索卷烟\n  searchCigarettes(keyword) {\n    console.warn('cigaretteAPI.searchCigarettes 接口暂不可用，请联系后端开发')  \n    return Promise.reject(new Error('接口暂不可用'))\n  }\n}\n\n// =================== 导出配置 ===================\n\n// 导出主要的API实例和方法\nexport { dataApi, commonApi, calculateApi, importApi }\nexport default cigaretteDistributionAPI\n","import * as XLSX from 'xlsx'\nimport { saveAs } from 'file-saver'\n\n/**\n * Excel导出工具类\n * 支持卷烟投放数据和档位设置的Excel导出\n */\nexport class ExcelExporter {\n  /**\n   * 导出卷烟投放数据统计表\n   * @param {Array} data - 卷烟投放数据数组\n   * @param {Object} searchParams - 查询参数\n   * @param {string} filename - 文件名（可选）\n   */\n  static exportCigaretteData(data, searchParams = {}, filename = '') {\n    try {\n      // 验证数据\n      if (!data || !Array.isArray(data) || data.length === 0) {\n        throw new Error('没有可导出的数据')\n      }\n\n      // 生成文件名\n      const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-')\n      const defaultFilename = `卷烟投放数据统计表_${timestamp}.xlsx`\n      const finalFilename = filename || defaultFilename\n\n      // 准备表头数据\n      const headers = this.generateHeaders()\n      \n      // 准备表格数据\n      const tableData = this.prepareTableData(data, headers)\n      \n      // 创建工作簿\n      const workbook = XLSX.utils.book_new()\n      \n      // 创建工作表\n      const worksheet = XLSX.utils.aoa_to_sheet(tableData)\n      \n      // 设置列宽\n      this.setColumnWidths(worksheet, headers)\n      \n      // 设置样式\n      this.setWorksheetStyles(worksheet, tableData.length)\n      \n      // 添加工作表到工作簿\n      XLSX.utils.book_append_sheet(workbook, worksheet, '卷烟投放数据')\n      \n      // 添加查询条件信息\n      if (Object.keys(searchParams).length > 0) {\n        this.addSearchInfoSheet(workbook, searchParams)\n      }\n      \n      // 导出文件\n      const excelBuffer = XLSX.write(workbook, { \n        bookType: 'xlsx', \n        type: 'array' \n      })\n      \n      const blob = new Blob([excelBuffer], { \n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n      })\n      \n      saveAs(blob, finalFilename)\n      \n      return {\n        success: true,\n        message: 'Excel文件导出成功',\n        filename: finalFilename\n      }\n      \n    } catch (error) {\n      console.error('Excel导出失败:', error)\n      return {\n        success: false,\n        message: `导出失败: ${error.message}`,\n        error: error\n      }\n    }\n  }\n\n  /**\n   * 生成表头\n   * @returns {Array} 表头数组\n   */\n  static generateHeaders() {\n    const baseHeaders = [\n      '卷烟代码',\n      '卷烟名称', \n      '年份',\n      '月份',\n      '周序号',\n      '编码表达',\n      '解码表达',\n      '投放区域',\n      '预投放量',\n      '实际投放量'\n    ]\n    \n    // 添加30个档位列（从30档到1档）\n    const positionHeaders = []\n    for (let i = 30; i >= 1; i--) {\n      positionHeaders.push(`${i}档`)\n    }\n    \n    // 备注列放在最后\n    const remarkHeader = ['备注']\n    \n    return [...baseHeaders, ...positionHeaders, ...remarkHeader]\n  }\n\n  /**\n   * 准备表格数据\n   * @param {Array} data - 原始数据\n   * @param {Array} headers - 表头\n   * @returns {Array} 表格数据数组\n   */\n  static prepareTableData(data, headers) {\n    const tableData = []\n    \n    // 添加表头\n    tableData.push(headers)\n    \n    // 添加数据行\n    data.forEach(item => {\n      const row = [\n        item.cigCode || '',\n        item.cigName || '',\n        item.year || '',\n        item.month || '',\n        item.weekSeq || '',\n        item.encodedExpression || '',\n        item.decodedExpression || '',\n        item.deliveryArea || '',\n        item.advAmount || 0,\n        item.actualDelivery || 0\n      ]\n      \n      // 添加30个档位数据（从30档到1档）\n      for (let i = 30; i >= 1; i--) {\n        const dKey = `d${i}`\n        row.push(item[dKey] || 0)\n      }\n      \n      // 备注列放在最后\n      row.push(item.remark || '')\n      \n      tableData.push(row)\n    })\n    \n    return tableData\n  }\n\n  /**\n   * 设置列宽\n   * @param {Object} worksheet - 工作表对象\n   * @param {Array} headers - 表头数组\n   */\n  static setColumnWidths(worksheet, headers) {\n    const columnWidths = {\n      '卷烟代码': 12,\n      '卷烟名称': 25,\n      '年份': 8,\n      '月份': 8,\n      '周序号': 10,\n      '编码表达': 25,\n      '解码表达': 40,\n      '投放区域': 30,\n      '预投放量': 12,\n      '实际投放量': 12,\n      '备注': 20\n    }\n    \n    // 设置基础列宽\n    headers.forEach((header, index) => {\n      const colKey = XLSX.utils.encode_col(index)\n      if (columnWidths[header]) {\n        worksheet[`${colKey}1`] = { \n          ...worksheet[`${colKey}1`],\n          w: columnWidths[header]\n        }\n      } else if (header.includes('档')) {\n        // 档位列设置固定宽度\n        worksheet[`${colKey}1`] = { \n          ...worksheet[`${colKey}1`],\n          w: 8\n        }\n      }\n    })\n  }\n\n  /**\n   * 设置工作表样式\n   * @param {Object} worksheet - 工作表对象\n   * @param {number} dataRowCount - 数据行数\n   */\n  static setWorksheetStyles(worksheet, dataRowCount) {\n    const range = XLSX.utils.decode_range(worksheet['!ref'])\n    \n    // 设置表头样式\n    for (let col = range.s.c; col <= range.e.c; col++) {\n      const colKey = XLSX.utils.encode_col(col)\n      const headerCell = worksheet[`${colKey}1`]\n      \n      if (headerCell) {\n        headerCell.s = {\n          font: { bold: true, color: { rgb: 'FFFFFF' } },\n          fill: { fgColor: { rgb: '4472C4' } },\n          alignment: { horizontal: 'center', vertical: 'center' },\n          border: {\n            top: { style: 'thin' },\n            bottom: { style: 'thin' },\n            left: { style: 'thin' },\n            right: { style: 'thin' }\n          }\n        }\n      }\n    }\n    \n    // 设置数据行样式\n    for (let row = 2; row <= dataRowCount + 1; row++) {\n      for (let col = range.s.c; col <= range.e.c; col++) {\n        const colKey = XLSX.utils.encode_col(col)\n        const cell = worksheet[`${colKey}${row}`]\n        \n        if (cell) {\n          // 数值列居中对齐\n          if (col >= 10 && col <= 39) { // 档位列（从第11列到第40列，0-based索引，因为新增了2列编码表达）\n            cell.s = {\n              alignment: { horizontal: 'center', vertical: 'center' },\n              border: {\n                top: { style: 'thin' },\n                bottom: { style: 'thin' },\n                left: { style: 'thin' },\n                right: { style: 'thin' }\n              }\n            }\n          } else {\n            cell.s = {\n              border: {\n                top: { style: 'thin' },\n                bottom: { style: 'thin' },\n                left: { style: 'thin' },\n                right: { style: 'thin' }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * 添加查询条件信息工作表\n   * @param {Object} workbook - 工作簿对象\n   * @param {Object} searchParams - 查询参数\n   */\n  static addSearchInfoSheet(workbook, searchParams) {\n    const infoData = [\n      ['查询条件信息'],\n      [''],\n      ['查询时间', new Date().toLocaleString('zh-CN')],\n      ['年份', searchParams.year || '未指定'],\n      ['月份', searchParams.month || '未指定'],\n      ['周序号', searchParams.weekSeq || '未指定'],\n      [''],\n      ['导出说明'],\n      ['本文件包含卷烟投放数据统计表，包含30个档位的分配值'],\n      ['数据来源：系统查询结果'],\n      ['导出时间：' + new Date().toLocaleString('zh-CN')]\n    ]\n    \n    const infoWorksheet = XLSX.utils.aoa_to_sheet(infoData)\n    \n    // 设置列宽\n    infoWorksheet['A1'] = { ...infoWorksheet['A1'], w: 20 }\n    infoWorksheet['B1'] = { ...infoWorksheet['B1'], w: 30 }\n    \n    // 设置样式\n    infoWorksheet['A1'].s = {\n      font: { bold: true, size: 14, color: { rgb: '4472C4' } }\n    }\n    \n    XLSX.utils.book_append_sheet(workbook, infoWorksheet, '查询信息')\n  }\n\n  /**\n   * 导出档位设置数据\n   * @param {Object} positionData - 档位数据\n   * @param {Object} cigaretteInfo - 卷烟信息\n   * @param {string} filename - 文件名（可选）\n   */\n  static exportPositionData(positionData, cigaretteInfo = {}, filename = '') {\n    try {\n      if (!positionData || Object.keys(positionData).length === 0) {\n        throw new Error('没有可导出的档位数据')\n      }\n\n      const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-')\n      const defaultFilename = `档位设置_${cigaretteInfo.cigName || '卷烟'}_${timestamp}.xlsx`\n      const finalFilename = filename || defaultFilename\n\n      // 创建工作簿\n      const workbook = XLSX.utils.book_new()\n      \n      // 准备档位数据\n      const positionTableData = this.preparePositionTableData(positionData, cigaretteInfo)\n      \n      // 创建工作表\n      const worksheet = XLSX.utils.aoa_to_sheet(positionTableData)\n      \n      // 设置列宽\n      worksheet['A1'] = { ...worksheet['A1'], w: 15 }\n      worksheet['B1'] = { ...worksheet['B1'], w: 12 }\n      \n      // 设置样式\n      worksheet['A1'].s = {\n        font: { bold: true, color: { rgb: 'FFFFFF' } },\n        fill: { fgColor: { rgb: '4472C4' } },\n        alignment: { horizontal: 'center', vertical: 'center' }\n      }\n      \n      worksheet['B1'].s = {\n        font: { bold: true, color: { rgb: 'FFFFFF' } },\n        fill: { fgColor: { rgb: '4472C4' } },\n        alignment: { horizontal: 'center', vertical: 'center' }\n      }\n      \n      // 添加工作表到工作簿\n      XLSX.utils.book_append_sheet(workbook, worksheet, '档位设置')\n      \n      // 导出文件\n      const excelBuffer = XLSX.write(workbook, { \n        bookType: 'xlsx', \n        type: 'array' \n      })\n      \n      const blob = new Blob([excelBuffer], { \n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n      })\n      \n      saveAs(blob, finalFilename)\n      \n      return {\n        success: true,\n        message: '档位设置Excel文件导出成功',\n        filename: finalFilename\n      }\n      \n    } catch (error) {\n      console.error('档位设置Excel导出失败:', error)\n      return {\n        success: false,\n        message: `导出失败: ${error.message}`,\n        error: error\n      }\n    }\n  }\n\n  /**\n   * 准备档位设置表格数据\n   * @param {Object} positionData - 档位数据\n   * @param {Object} cigaretteInfo - 卷烟信息\n   * @returns {Array} 档位设置表格数据\n   */\n  static preparePositionTableData(positionData, cigaretteInfo) {\n    const tableData = [\n      ['档位', '分配值']\n    ]\n    \n    // 添加档位数据（从30档到1档）\n    for (let i = 30; i >= 1; i--) {\n      const positionKey = `position${i}`\n      const value = positionData[positionKey] || 0\n      tableData.push([`${i}档`, value])\n    }\n    \n    // 添加卷烟信息\n    if (cigaretteInfo.cigName) {\n      tableData.unshift(['卷烟名称', cigaretteInfo.cigName])\n      tableData.unshift([''])\n    }\n    \n    return tableData\n  }\n}\n\nexport default ExcelExporter\n","import { render } from \"./DataTable.vue?vue&type=template&id=09666fb2&scoped=true\"\nimport script from \"./DataTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataTable.vue?vue&type=script&lang=js\"\n\nimport \"./DataTable.vue?vue&type=style&index=0&id=09666fb2&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09666fb2\"]])\n\nexport default __exports__","<template>\n  <div class=\"search-form-container\">\n    <el-form :model=\"searchForm\" :inline=\"true\" class=\"search-form\">\n      <el-form-item label=\"年份\">\n        <el-select\n          v-model=\"searchForm.year\"\n          placeholder=\"请选择年份\"\n          style=\"width: 120px\"\n          clearable\n        >\n          <el-option \n            v-for=\"year in yearOptions\" \n            :key=\"year\" \n            :label=\"year\" \n            :value=\"year\"\n          />\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"月份\">\n        <el-select\n          v-model=\"searchForm.month\"\n          placeholder=\"请选择月份\"\n          style=\"width: 120px\"\n          clearable\n        >\n          <el-option v-for=\"month in 12\" :key=\"month\" :label=\"`${month}月`\" :value=\"month\" />\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"周序号\">\n        <el-input-number\n          v-model=\"searchForm.week\"\n          placeholder=\"请输入周序号\"\n          style=\"width: 120px\"\n          :min=\"1\"\n          :max=\"5\"\n          clearable\n        />\n      </el-form-item>\n      \n      <el-form-item label=\"卷烟名称\">\n        <el-input\n          v-model=\"searchForm.cigaretteName\"\n          :placeholder=\"cigaretteNamePlaceholder\"\n          style=\"width: 200px\"\n          clearable\n          :disabled=\"!isDateComplete\"\n          @input=\"handleCigaretteNameInput\"\n          @change=\"handleCigaretteNameChange\"\n        >\n          <template #prefix>\n            <el-icon><Search /></el-icon>\n          </template>\n        </el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"投放类型\">\n        <el-select\n          v-model=\"searchForm.distributionType\"\n          placeholder=\"请选择投放类型\"\n          style=\"width: 180px\"\n          clearable\n          :disabled=\"isFormDisabled\"\n          @change=\"handleDistributionTypeChange\"\n        >\n          <el-option label=\"按档位统一投放\" value=\"按档位统一投放\" />\n          <el-option label=\"按档位扩展投放\" value=\"按档位扩展投放\" />\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"扩展投放类型\" v-if=\"searchForm.distributionType === '按档位扩展投放'\">\n        <el-select\n          v-model=\"searchForm.extendedType\"\n          placeholder=\"请选择扩展类型\"\n          style=\"width: 160px\"\n          clearable\n          :disabled=\"isFormDisabled\"\n          @change=\"handleExtendedTypeChange\"\n        >\n          <el-option label=\"档位+区县\" value=\"档位+区县\" />\n          <el-option label=\"档位+市场类型\" value=\"档位+市场类型\" />\n          <el-option label=\"档位+城乡分类代码\" value=\"档位+城乡分类代码\" />\n          <el-option label=\"档位+业态\" value=\"档位+业态\" />\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"投放区域\">\n        <el-select\n          v-model=\"searchForm.distributionArea\"\n          :placeholder=\"areaPlaceholder\"\n          style=\"width: 300px\"\n          multiple\n          collapse-tags\n          collapse-tags-tooltip\n          clearable\n          :disabled=\"isFormDisabled\"\n          @change=\"handleDistributionAreaChange\"\n        >\n          <el-option\n            v-for=\"option in deliveryAreaOptions\"\n            :key=\"option.value\"\n            :label=\"option.label\"\n            :value=\"option.value\"\n          />\n        </el-select>\n      </el-form-item>\n      \n      <!-- 新增：预投放量和实际投放量显示框（仅在选中卷烟后显示） -->\n      <el-form-item label=\"预投放量\" v-if=\"selectedRecord && selectedRecord.cigCode\">\n        <el-input\n          :value=\"formatQuantity(selectedRecord.advAmount)\"\n          style=\"width: 150px\"\n          readonly\n          suffix-icon=\"el-icon-info\"\n        />\n      </el-form-item>\n      \n      <el-form-item label=\"实际投放量\" v-if=\"selectedRecord && selectedRecord.cigCode\">\n        <el-input\n          :value=\"formatQuantity(selectedRecord.actualDelivery)\"\n          style=\"width: 150px\"\n          readonly\n          suffix-icon=\"el-icon-info\"\n        />\n      </el-form-item>\n      \n      <!-- 档位设置区域（仅在选中卷烟后显示） -->\n      <div v-if=\"selectedRecord && selectedRecord.cigCode\" class=\"position-settings-section\">\n        <div class=\"position-header\">\n        <el-divider content-position=\"left\">\n          <el-icon><Setting /></el-icon>\n          档位设置\n        </el-divider>\n        \n          <div class=\"position-view-toggle\">\n            <el-button-group>\n              <el-button \n                :type=\"positionViewMode === 'grid' ? 'primary' : ''\"\n                size=\"small\"\n                @click=\"switchPositionView('grid')\"\n              >\n                <el-icon><DataBoard /></el-icon>\n                表格视图\n              </el-button>\n              <el-button \n                :type=\"positionViewMode === 'encoding' ? 'primary' : ''\"\n                size=\"small\"\n                @click=\"switchPositionView('encoding')\"\n              >\n                <el-icon><Document /></el-icon>\n                编码视图\n              </el-button>\n              <el-button \n                size=\"small\"\n                @click=\"switchPositionView('3d')\"\n                :disabled=\"!hasChartData\"\n              >\n                <el-icon><TrendCharts /></el-icon>\n                三维图表\n              </el-button>\n            </el-button-group>\n          </div>\n        </div>\n        \n        <!-- 表格视图 -->\n        <div v-if=\"positionViewMode === 'grid'\" class=\"position-grid\">\n          <div v-for=\"(position, index) in positionData\" :key=\"`d${30 - index}`\" class=\"position-item\">\n            <span class=\"position-label\">D{{ 30 - index }}:</span>\n            <el-input-number\n              v-model=\"positionData[index]\"\n              :min=\"0\"\n              :precision=\"0\"\n              :step=\"1\"\n              size=\"small\"\n              style=\"width: 90px\"\n              :disabled=\"isFormDisabled\"\n              @change=\"handlePositionChange\"\n            />\n          </div>\n        </div>\n        \n        <!-- 三维图表弹窗 -->\n        <el-dialog\n          v-model=\"show3DChart\"\n          :title=\"`${(selectedRecord && selectedRecord.cigName) || '卷烟'} - 各区域档位投放分布`\"\n          width=\"95%\"\n          height=\"85vh\"\n          :destroy-on-close=\"true\"\n          :close-on-click-modal=\"false\"\n          :close-on-press-escape=\"true\"\n          :show-close=\"true\"\n          draggable\n          class=\"chart-dialog\"\n          @opened=\"handleDialogOpened\"\n        >\n          <Position3DChart \n            ref=\"position3DChart\"\n            :selectedRecord=\"selectedRecord\"\n            :tableData=\"tableData\"\n            style=\"height: 1125px;\"\n          />\n          <template #footer>\n            <div class=\"dialog-footer\">\n              <el-button @click=\"show3DChart = false\">关闭</el-button>\n              <el-button \n                type=\"primary\" \n                @click=\"exportChart\"\n                :disabled=\"!hasChartData\"\n              >\n                导出图表\n              </el-button>\n            </div>\n          </template>\n        </el-dialog>\n        \n        <!-- 编码化表达输入区域 (仅编码视图时显示) -->\n        <div v-if=\"positionViewMode === 'encoding'\" class=\"encoded-expression-section\">\n          <el-divider content-position=\"left\">\n            <el-icon><Document /></el-icon>\n            编码化表达\n          </el-divider>\n          \n          <div class=\"encoded-expression-input-container\">\n            <el-form-item label=\"编码表达\" class=\"encoded-expression-form-item\">\n              <el-input\n                v-model=\"encodedExpressionInput\"\n                type=\"textarea\"\n                :rows=\"6\"\n                placeholder=\"显示选中卷烟的所有区域聚合编码表达，每行一个不同的档位设置组合\"\n                style=\"width: 600px\"\n                :readonly=\"!selectedRecord || !selectedRecord.cigCode || isEncodingDisabled\"\n                :disabled=\"isEncodingDisabled\"\n                @input=\"handleEncodedExpressionInput\"\n                @change=\"handleEncodedExpressionChange\"\n                resize=\"vertical\"\n              />\n              \n              <el-button \n                type=\"primary\" \n                size=\"small\"\n                @click=\"handleUpdateFromEncodedExpression\"\n                :loading=\"updatingFromEncoded\"\n                :disabled=\"!isEncodedExpressionChanged || !selectedRecord || !encodedExpressionValidation.isValid\"\n                style=\"margin-left: 10px\"\n              >\n                <el-icon><Check /></el-icon>\n                更新记录\n              </el-button>\n              \n              <el-button \n                v-if=\"hasAnyChanges\"\n                size=\"small\"\n                @click=\"resetEditMode\"\n                style=\"margin-left: 10px\"\n              >\n                <el-icon><RefreshLeft /></el-icon>\n                重置修改\n              </el-button>\n            </el-form-item>\n            \n            <!-- 解码信息显示 -->\n            <div v-if=\"decodedExpressionDisplay\" class=\"decoded-expression-display\">\n              <el-alert\n                title=\"解码表达式\"\n                type=\"info\"\n                :closable=\"false\"\n                show-icon\n                :description=\"decodedExpressionDisplay\"\n              />\n            </div>\n            \n            <!-- 编码表达式实时验证状态 -->\n            <div class=\"encoded-expression-validation\">\n              <el-alert\n                :title=\"encodedExpressionValidation.title\"\n                :type=\"encodedExpressionValidation.type\"\n                :description=\"encodedExpressionValidation.message\"\n                :closable=\"false\"\n                show-icon\n              />\n            </div>\n            \n            <!-- 编码表达提示信息 -->\n            <div v-if=\"encodedExpressionHint\" class=\"encoded-expression-hint\">\n              <el-alert\n                :title=\"encodedExpressionHint\"\n                type=\"info\"\n                :closable=\"false\"\n                show-icon\n              />\n            </div>\n            \n            <!-- 编辑模式状态显示 -->\n            <div v-if=\"editMode !== 'none'\" class=\"edit-mode-status\">\n              <el-alert\n                v-if=\"editMode === 'encoding'\"\n                title=\"编码修改模式\"\n                type=\"info\"\n                :closable=\"false\"\n                show-icon\n              >\n                <template #default>\n                  <p>当前正在修改编码表达式，其他表单字段已被锁定</p>\n                  <p>要修改其他字段，请先点击\"重置修改\"按钮</p>\n                </template>\n              </el-alert>\n              \n              <el-alert\n                v-if=\"editMode === 'form'\"\n                title=\"表单修改模式\"\n                type=\"warning\"\n                :closable=\"false\"\n                show-icon\n              >\n                <template #default>\n                  <p>当前正在修改表单设置，编码表达式字段已被锁定</p>\n                  <p>要修改编码表达式，请先点击\"重置修改\"按钮</p>\n                </template>\n              </el-alert>\n            </div>\n            \n          </div>\n        </div>\n        \n        <div class=\"position-actions\">\n          <el-button \n            type=\"primary\" \n            size=\"small\"\n            @click=\"handleSavePositions\"\n            :loading=\"savingPositions\"\n            :disabled=\"!isPositionDataValid\"\n          >\n            <el-icon><Check /></el-icon>\n            保存档位设置\n          </el-button>\n          <el-button \n            type=\"info\" \n            size=\"small\"\n            @click=\"handleResetPositions\"\n          >\n            <el-icon><RefreshLeft /></el-icon>\n            重置档位\n          </el-button>\n          <el-button \n            v-if=\"positionViewMode === 'grid'\"\n            type=\"success\" \n            size=\"small\"\n            @click=\"handleAddNewArea\"\n            :disabled=\"!canAddNewArea\"\n          >\n            <el-icon><Plus /></el-icon>\n            新增投放区域\n          </el-button>\n          <el-button \n            v-if=\"positionViewMode === 'grid'\"\n            type=\"danger\" \n            size=\"small\"\n            @click=\"handleDeleteAreas\"\n            :disabled=\"!canDeleteAreas\"\n          >\n            <el-icon><Delete /></el-icon>\n            删除投放区域\n          </el-button>\n        </div>\n        \n        <!-- 删除投放区域选择框（仅在表格视图且有现有区域时显示） -->\n        <div v-if=\"positionViewMode === 'grid' && selectedRecord && selectedRecord.allAreas && selectedRecord.allAreas.length > 0\" class=\"delete-area-section\">\n          <el-divider content-position=\"left\">\n            <el-icon><Delete /></el-icon>\n            选择要删除的投放区域\n          </el-divider>\n          <el-checkbox-group v-model=\"areasToDelete\" class=\"delete-area-checkboxes\">\n            <el-checkbox \n              v-for=\"area in selectedRecord.allAreas\" \n              :key=\"area\" \n              :value=\"area\"\n              :disabled=\"selectedRecord.allAreas.length <= 1\"\n            >\n              {{ area }}\n            </el-checkbox>\n          </el-checkbox-group>\n          <div class=\"delete-area-tips\">\n            <el-alert\n              v-if=\"selectedRecord.allAreas.length <= 1\"\n              title=\"无法删除：该卷烟至少需要保留一个投放区域\"\n              type=\"warning\"\n              :closable=\"false\"\n              show-icon\n            />\n            <el-alert\n              v-else-if=\"areasToDelete.length === 0\"\n              title=\"请选择要删除的投放区域\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n            <el-alert\n              v-else\n              :title=\"`已选择 ${areasToDelete.length} 个区域进行删除`\"\n              type=\"success\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n        </div>\n      </div>\n      \n      <el-form-item>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSearch\"\n          :disabled=\"!searchForm.year || !searchForm.month || !searchForm.week\"\n        >\n          <el-icon><Search /></el-icon>\n          查询\n        </el-button>\n        <el-button \n          type=\"info\" \n          @click=\"handleSearchNext\"\n          :disabled=\"!searchForm.cigaretteName\"\n        >\n          <el-icon><ArrowDown /></el-icon>\n          下一个\n        </el-button>\n        <el-button \n          type=\"warning\" \n          @click=\"handleFilterLargeDeviation\"\n          :disabled=\"!tableData || tableData.length === 0\"\n          :loading=\"filteringDeviation\"\n        >\n          <el-icon><Filter /></el-icon>\n          筛选误差>200\n          <span v-if=\"largeDeviationRecords.length > 0\" style=\"margin-left: 5px;\">\n            ({{ currentDeviationIndex + 1 }}/{{ largeDeviationRecords.length }})\n          </span>\n        </el-button>\n        <el-button @click=\"handleReset\">\n          <el-icon><RefreshLeft /></el-icon>\n          重置\n        </el-button>\n        <el-button type=\"success\" @click=\"handleExport\">\n          <el-icon><Download /></el-icon>\n          导出\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { Search, RefreshLeft, Download, ArrowDown, LocationInformation, Setting, Check, Plus, Delete, Document, DataBoard, TrendCharts, Filter } from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { cigaretteDistributionAPI } from '@/services/api'\nimport Position3DChart from './Position3DChart.vue'\n\nexport default {\n  name: 'SearchForm',\n  props: {\n    selectedRecord: {\n      type: Object,\n      default: null\n    },\n    tableData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  components: {\n    Search,\n    RefreshLeft,\n    Download,\n    ArrowDown,\n    LocationInformation,\n    Setting,\n    Check,\n    Plus,\n    Delete,\n    Document,\n    DataBoard,\n    TrendCharts,\n    Filter,\n    Position3DChart\n  },\n  data() {\n    return {\n      searchForm: {\n        year: null,\n        month: null,\n        week: null,\n        cigaretteName: '',\n        distributionType: '',\n        extendedType: '',\n        distributionArea: []\n      },\n      // 不同扩展类型对应的区域选项\n      areaOptions: {\n        '按档位统一投放': [\n          { label: '全市', value: '全市' }\n        ],\n        '档位+区县': [\n          { label: '丹江', value: '丹江' },\n          { label: '房县', value: '房县' },\n          { label: '郧西', value: '郧西' },\n          { label: '郧阳', value: '郧阳' },\n          { label: '竹山', value: '竹山' },\n          { label: '竹溪', value: '竹溪' },\n          { label: '城区', value: '城区' }\n        ],\n        '档位+城乡分类代码': [\n          { label: '主城区', value: '主城区' },\n          { label: '城乡结合区', value: '城乡结合区' },\n          { label: '镇中心区', value: '镇中心区' },\n          { label: '镇乡结合区', value: '镇乡结合区' },\n          { label: '特殊区域', value: '特殊区域' },\n          { label: '乡中心区', value: '乡中心区' },\n          { label: '村庄', value: '村庄' }\n        ],\n        '档位+市场类型': [\n          { label: '城网', value: '城网' },\n          { label: '农网', value: '农网' }\n        ],\n        '档位+业态': [\n          { label: '便利店', value: '便利店' },\n          { label: '超市', value: '超市' },\n          { label: '商场', value: '商场' },\n          { label: '烟草专卖店', value: '烟草专卖店' },\n          { label: '娱乐服务类', value: '娱乐服务类' },\n          { label: '其他', value: '其他' }\n        ]\n      },\n      // 档位数据（D30到D1，30个档位）\n      positionData: new Array(30).fill(0),\n      // 保存状态\n      savingPositions: false,\n      // 要删除的投放区域\n      areasToDelete: [],\n      // 编码化表达相关\n      encodedExpressionInput: '',\n      originalEncodedExpression: '',\n      updatingFromEncoded: false,\n      // 一致性检查相关\n      originalFormState: null,\n      isConsistencyCheckEnabled: true,\n      // 编辑模式：'none'(无修改)、'encoding'(只能修改编码)、'form'(只能修改表单)\n      editMode: 'none',\n      // 档位设置显示模式：'grid'(表格视图)、'encoding'(编码视图)、'3d'(三维图视图)\n      positionViewMode: 'grid',\n      // 三维图表弹窗显示状态\n      show3DChart: false,\n      // 误差筛选相关\n      largeDeviationRecords: [],  // 绝对误差>200的记录列表\n      currentDeviationIndex: -1,  // 当前选中的误差记录索引\n      filteringDeviation: false   // 筛选加载状态\n    }\n  },\n  computed: {\n    // 年份选项（当前年份往前2年，往后10年）\n    yearOptions() {\n      const currentYear = new Date().getFullYear()\n      const years = []\n      for (let year = currentYear - 2; year <= currentYear + 10; year++) {\n        years.push(year)\n      }\n      return years\n    },\n    isDateComplete() {\n      return this.searchForm.year && this.searchForm.month && this.searchForm.week\n    },\n    cigaretteNamePlaceholder() {\n      if (!this.isDateComplete) {\n        return '请先填充年份、月份和周序号'\n      }\n      return '请输入卷烟名称'\n    },\n    deliveryAreaOptions() {\n      // 根据投放类型和扩展投放类型确定可选的投放区域\n      if (this.searchForm.distributionType === '按档位统一投放') {\n        return this.areaOptions['按档位统一投放'] || []\n      } else if (this.searchForm.distributionType === '按档位扩展投放') {\n        if (this.searchForm.extendedType) {\n          return this.areaOptions[this.searchForm.extendedType] || []\n        } else {\n          return []\n        }\n      }\n      return []\n    },\n    areaPlaceholder() {\n      if (this.searchForm.distributionType === '按档位统一投放') {\n        return '请选择投放区域（统一投放）'\n      } else if (this.searchForm.distributionType === '按档位扩展投放' && !this.searchForm.extendedType) {\n        return '请先选择扩展投放类型'\n      } else if (this.deliveryAreaOptions.length > 0) {\n        return '请选择投放区域'\n      }\n      return '请先选择投放类型'\n    },\n    // 验证档位数据是否有效\n    isPositionDataValid() {\n      if (!this.positionData || this.positionData.length !== 30) {\n        return false\n      }\n      \n      // 只检查是否有数值，不再检查约束条件\n      return this.positionData.some(val => val > 0)\n    },\n    // 检查是否可以新增投放区域\n    canAddNewArea() {\n      return this.selectedRecord && \n             this.selectedRecord.cigCode && \n             this.searchForm.distributionArea && \n             this.searchForm.distributionArea.length > 0 &&\n             this.isPositionDataValid\n    },\n    // 检查是否可以删除投放区域\n    canDeleteAreas() {\n      return this.selectedRecord && \n             this.selectedRecord.cigCode && \n             this.selectedRecord.allAreas && \n             this.selectedRecord.allAreas.length > 1 && // 至少要保留一个区域\n             this.areasToDelete && \n             this.areasToDelete.length > 0\n    },\n    // 检查编码表达是否已变更\n    isEncodedExpressionChanged() {\n      return this.encodedExpressionInput.trim() !== this.originalEncodedExpression.trim()\n    },\n    // 解码表达显示（显示每个记录的独立解码）\n    decodedExpressionDisplay() {\n      if (!this.selectedRecord) {\n        return ''\n      }\n      \n      // 获取选中卷烟的所有相关记录\n      const relatedRecords = this.getRelatedRecords(this.selectedRecord)\n      \n      if (relatedRecords.length === 0) {\n        return ''\n      }\n      \n      // 为每个记录生成解码表达式\n      const decodedExpressions = []\n      \n      relatedRecords.forEach((record, index) => {\n        let decodedExpression = ''\n        \n        // 优先使用后端提供的解码表达式\n        if (record.decodedExpression) {\n          decodedExpression = record.decodedExpression\n        } else {\n          // 生成该记录的解码表达式\n          decodedExpression = this.generateRecordDecodedExpression(record)\n        }\n        \n        decodedExpressions.push(`${index + 1}. ${decodedExpression}`)\n      })\n      \n      return decodedExpressions.join('\\n')\n    },\n    \n    // 生成单个记录的解码表达式\n    generateRecordDecodedExpression(record) {\n      try {\n        let decoded = ''\n        \n        // 投放方式\n        decoded += record.deliveryMethod || '未知投放方式'\n        \n        // 扩展投放类型\n        if (record.deliveryEtype && record.deliveryEtype !== 'NULL') {\n          decoded += `、${record.deliveryEtype}`\n        }\n        \n        // 投放区域\n        if (record.deliveryArea) {\n          decoded += `、${record.deliveryArea}`\n        }\n        \n        // 档位设置摘要\n        const positionSummary = this.getPositionSummary(record)\n        if (positionSummary) {\n          decoded += `、${positionSummary}`\n        }\n        \n        return decoded\n      } catch (error) {\n        console.warn('生成解码表达式失败:', error)\n        return '解码失败'\n      }\n    },\n    \n    // 获取档位设置摘要\n    getPositionSummary(record) {\n      const positions = []\n      for (let i = 30; i >= 1; i--) {\n        const value = record[`d${i}`] || 0\n        if (value > 0) {\n          positions.push(`D${i}=${value}`)\n        }\n      }\n      \n      if (positions.length === 0) {\n        return '无档位设置'\n      }\n      \n      // 简化显示\n      if (positions.length > 3) {\n        return `档位设置：${positions.slice(0, 3).join('、')}等${positions.length}个档位`\n      } else {\n        return `档位设置：${positions.join('、')}`\n      }\n    },\n    // 编码表达式实时验证状态\n    encodedExpressionValidation() {\n      if (!this.encodedExpressionInput || !this.encodedExpressionInput.trim()) {\n        return {\n          isValid: true,\n          type: 'info',\n          title: '请输入编码表达式',\n          message: '支持多行输入，每行一个编码表达式'\n        }\n      }\n      \n      // 执行实时验证\n      const validation = this.validateEncodedExpressions(this.encodedExpressionInput)\n      \n      if (validation.isValid) {\n        return {\n          isValid: true,\n          type: 'success',\n          title: '编码表达式验证通过',\n          message: validation.warnings.join(', ')\n        }\n      } else {\n        return {\n          isValid: false,\n          type: 'error',\n          title: '编码表达式验证失败',\n          message: validation.errors.join('; ')\n        }\n      }\n    },\n    \n    // 编码表达提示信息\n    encodedExpressionHint() {\n      if (!this.encodedExpressionInput) {\n        return '请选中卷烟记录以显示编码表达'\n      }\n      if (this.isEncodedExpressionChanged) {\n        if (this.hasOtherFormChanges) {\n          return '编码表达和其他设置均已修改，需要通过一致性验证'\n        }\n        return '编码表达已修改，点击\"更新记录\"按钮保存更改'\n      }\n      \n      // 统计显示的编码表达数量\n      const lines = this.encodedExpressionInput.split('\\n').filter(line => line.trim())\n      const lineCount = lines.length\n      \n      if (lineCount > 1) {\n        return `当前显示 ${lineCount} 条不同档位设置的区域聚合编码表达式`\n      } else {\n        return '编码格式：投放类型+扩展类型（区域编码）（档位投放量编码）'\n      }\n    },\n    \n    // 检查是否有其他表单变更（档位、投放类型、区域等）\n    hasOtherFormChanges() {\n      return this.hasPositionChanges || this.hasDeliverySettingsChanges\n    },\n    \n    // 检查档位数据是否发生变更\n    hasPositionChanges() {\n      if (!this.originalFormState || !this.selectedRecord) return false\n      \n      return this.positionData.some((val, index) => \n        val !== (this.originalFormState.positionData[index] || 0)\n      )\n    },\n    \n    // 检查投放设置是否发生变更（投放类型、扩展类型、投放区域）\n    hasDeliverySettingsChanges() {\n      if (!this.originalFormState || !this.selectedRecord) return false\n      \n      // 检查投放类型变更\n      const hasDeliveryMethodChange = this.searchForm.distributionType !== this.originalFormState.distributionType\n      \n      // 检查扩展投放类型变更\n      const hasExtendedTypeChange = this.searchForm.extendedType !== this.originalFormState.extendedType\n      \n      // 检查投放区域变更\n      const currentAreas = (this.searchForm.distributionArea || []).sort()\n      const originalAreas = (this.originalFormState.distributionArea || []).sort()\n      const hasAreaChanges = JSON.stringify(currentAreas) !== JSON.stringify(originalAreas)\n      \n      return hasDeliveryMethodChange || hasExtendedTypeChange || hasAreaChanges\n    },\n    \n    // 是否需要一致性验证\n    needsConsistencyCheck() {\n      return this.isEncodedExpressionChanged && this.hasOtherFormChanges && this.isConsistencyCheckEnabled\n    },\n    \n    // 获取变更摘要\n    changesSummary() {\n      const changes = []\n      \n      if (this.isEncodedExpressionChanged) {\n        changes.push('编码表达')\n      }\n      \n      if (this.hasPositionChanges) {\n        changes.push('档位设置')\n      }\n      \n      if (this.hasDeliverySettingsChanges) {\n        const deliveryChanges = []\n        if (this.originalFormState && this.searchForm.distributionType !== this.originalFormState.distributionType) {\n          deliveryChanges.push('投放类型')\n        }\n        if (this.originalFormState && this.searchForm.extendedType !== this.originalFormState.extendedType) {\n          deliveryChanges.push('扩展投放类型')  \n        }\n        if (this.originalFormState && JSON.stringify((this.searchForm.distributionArea || []).sort()) !== JSON.stringify((this.originalFormState.distributionArea || []).sort())) {\n          deliveryChanges.push('投放区域')\n        }\n        changes.push(...deliveryChanges)\n      }\n      \n      return changes\n    },\n    \n    // 编码表达字段是否禁用（当处于表单修改模式时禁用）\n    isEncodingDisabled() {\n      return this.editMode === 'form'\n    },\n    \n    // 表单字段是否禁用（当处于编码修改模式时禁用）\n    isFormDisabled() {\n      return this.editMode === 'encoding'\n    },\n    \n    // 是否有任何修改\n    hasAnyChanges() {\n      return this.editMode !== 'none'\n    },\n    \n    // 是否有图表数据\n    hasChartData() {\n      return this.selectedRecord && this.selectedRecord.cigCode && this.tableData.length > 0\n    }\n  },\n  watch: {\n    selectedRecord: {\n      handler(newRecord) {\n        if (newRecord) {\n          // 当选中记录变化时，自动填充表单\n          this.searchForm.year = newRecord.year\n          this.searchForm.month = newRecord.month\n          this.searchForm.week = newRecord.weekSeq || newRecord.week\n          this.searchForm.cigaretteName = newRecord.cigName || newRecord.cigaretteName\n          \n          // 自动填充投放类型信息\n          if (newRecord.deliveryMethod) {\n            this.searchForm.distributionType = newRecord.deliveryMethod\n          }\n          \n          // 自动填充扩展投放类型\n          if (newRecord.deliveryEtype) {\n            this.searchForm.extendedType = newRecord.deliveryEtype\n          }\n          \n          // 自动填充投放区域\n          if (newRecord.allAreas && Array.isArray(newRecord.allAreas)) {\n            // 如果传入的是多个记录（通过搜索选中），则自动勾选所有投放区域\n            this.searchForm.distributionArea = [...newRecord.allAreas]\n          } else if (newRecord.deliveryArea) {\n            // 如果是单个记录，则勾选该记录的投放区域\n            this.searchForm.distributionArea = [newRecord.deliveryArea]\n          }\n          \n          // 加载档位数据\n          this.loadPositionData(newRecord)\n          \n          // 加载编码化表达\n          this.loadEncodedExpression(newRecord)\n          \n          // 保存原始表单状态用于一致性检查\n          this.saveOriginalFormState()\n          \n          // 重置编辑模式\n          this.editMode = 'none'\n          \n          console.log('选中记录更新并自动填充:', {\n            record: newRecord,\n            form: this.searchForm\n          })\n        } else {\n          // 清空档位数据和删除选择\n          this.positionData = new Array(30).fill(0)\n          this.areasToDelete = []\n          // 清空编码化表达\n          this.encodedExpressionInput = ''\n          this.originalEncodedExpression = ''\n          // 清空原始状态\n          this.originalFormState = null\n          // 重置编辑模式\n          this.editMode = 'none'\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handleDistributionTypeChange(value) {\n      // 投放类型变化时重置相关字段（仅当非自动填充时）\n      if (!this.selectedRecord) {\n        this.searchForm.extendedType = ''\n        this.searchForm.distributionArea = []\n      } else {\n        // 当有选中记录时，设置为表单修改模式\n        this.setEditMode('form')\n      }\n    },\n    handleExtendedTypeChange() {\n      // 扩展投放类型变化时重置区域选择（仅当非自动填充时）\n      if (!this.selectedRecord) {\n        this.searchForm.distributionArea = []\n      } else {\n        // 当有选中记录时，设置为表单修改模式\n        this.setEditMode('form')\n      }\n    },\n    \n    // 处理投放区域变化\n    handleDistributionAreaChange() {\n      if (this.selectedRecord && this.selectedRecord.cigCode) {\n        this.setEditMode('form')\n      }\n    },\n    \n    // 处理档位数据变化\n    handlePositionChange() {\n      if (this.selectedRecord && this.selectedRecord.cigCode) {\n        this.setEditMode('form')\n      }\n    },\n    \n    // 设置编辑模式\n    setEditMode(mode) {\n      if (this.editMode === 'none') {\n        this.editMode = mode\n        console.log(`切换到${mode === 'encoding' ? '编码修改' : '表单修改'}模式`)\n      }\n    },\n    \n    // 重置编辑模式\n    resetEditMode() {\n      this.editMode = 'none'\n      \n      // 重置编码表达\n      this.loadEncodedExpression(this.selectedRecord)\n      \n      // 重置表单数据\n      if (this.selectedRecord) {\n        // 重新填充投放类型信息\n        if (this.selectedRecord.deliveryMethod) {\n          this.searchForm.distributionType = this.selectedRecord.deliveryMethod\n        }\n        \n        // 重新填充扩展投放类型\n        if (this.selectedRecord.deliveryEtype) {\n          this.searchForm.extendedType = this.selectedRecord.deliveryEtype\n        }\n        \n        // 重新填充投放区域\n        if (this.selectedRecord.allAreas && Array.isArray(this.selectedRecord.allAreas)) {\n          this.searchForm.distributionArea = [...this.selectedRecord.allAreas]\n        } else if (this.selectedRecord.deliveryArea) {\n          this.searchForm.distributionArea = [this.selectedRecord.deliveryArea]\n        }\n        \n        // 重新加载档位数据\n        this.loadPositionData(this.selectedRecord)\n        \n        // 重新保存原始表单状态\n        this.saveOriginalFormState()\n      }\n      \n      ElMessage.success('已重置修改状态')\n      console.log('重置编辑模式')\n    },\n    \n    // 切换档位显示视图\n    switchPositionView(mode) {\n      if (mode === '3d') {\n        // 如果选择三维图表，直接打开弹窗\n        this.open3DChart()\n      } else {\n        // 其他模式正常切换\n        this.positionViewMode = mode\n        console.log(`切换档位显示模式: ${mode}`)\n      }\n    },\n    \n    // 打开三维图表弹窗\n    open3DChart() {\n      if (!this.hasChartData) {\n        ElMessage.warning('请先选择一个卷烟记录')\n        return\n      }\n      this.show3DChart = true\n      console.log('打开三维图表弹窗')\n    },\n    \n    // 对话框打开完成事件\n    handleDialogOpened() {\n      console.log('Dialog opened, reinitializing chart...')\n      // 对话框完全打开后重新初始化图表\n      if (this.$refs.position3DChart) {\n        this.$refs.position3DChart.reinitChart()\n      }\n    },\n    \n    // 导出图表功能\n    exportChart() {\n      ElMessage.info('图表导出功能正在开发中...')\n    },\n    handleSearch() {\n      // 至少需要选择一个时间条件或卷烟名称\n      if (!this.searchForm.year || !this.searchForm.month || !this.searchForm.week) {\n        ElMessage.warning('请至少选择一个时间条件')\n        return\n      }\n      \n      // 如果选择了投放类型，需要完整填写相关信息\n      if (this.searchForm.distributionType) {\n        if (this.searchForm.distributionType === '按档位扩展投放' && !this.searchForm.extendedType) {\n          ElMessage.warning('请选择扩展投放类型')\n          return\n        }\n        \n        if (!this.searchForm.distributionArea) {\n          ElMessage.warning('请选择投放区域')\n          return\n        }\n      }\n      \n      console.log('搜索条件:', this.searchForm)\n      \n      let message = '查询条件：'\n      if (this.searchForm.year) message += `${this.searchForm.year}年 `\n      if (this.searchForm.month) message += `${this.searchForm.month}月 `\n      if (this.searchForm.week) message += `第${this.searchForm.week}周 `\n      if (this.searchForm.cigaretteName) message += `卷烟：${this.searchForm.cigaretteName}`\n      \n      ElMessage.success(message)\n      this.$emit('search', this.searchForm)\n    },\n    handleSearchNext() {\n      if (!this.searchForm.cigaretteName.trim()) {\n        ElMessage.warning('请先输入卷烟名称')\n        return\n      }\n      \n      this.$emit('search-next')\n    },\n    \n    // 筛选绝对误差大于200的卷烟\n    async handleFilterLargeDeviation() {\n      if (!this.tableData || this.tableData.length === 0) {\n        ElMessage.warning('暂无数据可筛选')\n        return\n      }\n      \n      this.filteringDeviation = true\n      \n      try {\n        // 1. 先触发数据刷新，确保获取最新数据（用户可能修改了档位）\n        console.log('刷新表格数据以获取最新的投放量信息...')\n        this.$emit('refresh-before-filter')\n        \n        // 等待数据刷新完成（给一点时间让表格刷新）\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        // 2. 筛选出绝对误差大于200的记录\n        const deviationRecords = this.tableData.filter(record => {\n          const advAmount = parseFloat(record.advAmount) || 0\n          const actualDelivery = parseFloat(record.actualDelivery) || 0\n          const deviation = Math.abs(actualDelivery - advAmount)\n          return deviation > 200\n        })\n        \n        console.log('筛选出的误差>200记录:', deviationRecords)\n        \n        // 3. 如果没有符合条件的记录\n        if (deviationRecords.length === 0) {\n          ElMessage.info('没有找到绝对误差大于200的卷烟')\n          this.largeDeviationRecords = []\n          this.currentDeviationIndex = -1\n          return\n        }\n        \n        // 4. 第一次筛选或者记录列表已改变，重置索引\n        if (this.largeDeviationRecords.length === 0 || \n            this.largeDeviationRecords.length !== deviationRecords.length) {\n          this.largeDeviationRecords = deviationRecords\n          this.currentDeviationIndex = 0\n        } else {\n          // 5. 循环选择下一个\n          this.currentDeviationIndex = (this.currentDeviationIndex + 1) % deviationRecords.length\n          this.largeDeviationRecords = deviationRecords\n        }\n        \n        // 6. 获取当前要选中的记录\n        const currentRecord = this.largeDeviationRecords[this.currentDeviationIndex]\n        \n        // 7. 计算误差信息\n        const advAmount = parseFloat(currentRecord.advAmount) || 0\n        const actualDelivery = parseFloat(currentRecord.actualDelivery) || 0\n        const deviation = Math.abs(actualDelivery - advAmount)\n        \n        // 8. 触发选中事件（通过父组件）\n        this.$emit('cigarette-name-matched', [currentRecord])\n        \n        // 9. 显示提示信息\n        ElMessage.success({\n          message: `已选中第 ${this.currentDeviationIndex + 1}/${this.largeDeviationRecords.length} 个误差记录\\n卷烟：${currentRecord.cigName}\\n预投放量：${advAmount.toFixed(2)}\\n实际投放量：${actualDelivery.toFixed(2)}\\n绝对误差：${deviation.toFixed(2)}`,\n          duration: 3000,\n          dangerouslyUseHTMLString: false\n        })\n        \n        console.log('已选中误差记录:', {\n          index: this.currentDeviationIndex + 1,\n          total: this.largeDeviationRecords.length,\n          record: currentRecord,\n          deviation: deviation\n        })\n        \n      } catch (error) {\n        console.error('筛选误差记录失败:', error)\n        ElMessage.error('筛选失败，请重试')\n      } finally {\n        this.filteringDeviation = false\n      }\n    },\n    handleReset() {\n      this.searchForm = {\n        year: null,\n        month: null,\n        week: null,\n        cigaretteName: '',\n        distributionType: '',\n        extendedType: '',\n        distributionArea: ''\n      }\n      // 重置误差筛选状态\n      this.largeDeviationRecords = []\n      this.currentDeviationIndex = -1\n      \n      ElMessage.info('已重置搜索条件')\n      this.$emit('reset')\n    },\n    handleExport() {\n      ElMessage.success('正在导出数据...')\n      this.$emit('export', this.searchForm)\n    },\n    handleCigaretteNameInput(value) {\n      // 实时搜索时去除前后空格\n      this.searchForm.cigaretteName = value.trim()\n    },\n    handleCigaretteNameChange() {\n      // 检查是否已填充日期表单\n      if (!this.searchForm.year || !this.searchForm.month || !this.searchForm.week) {\n        ElMessage.warning('请先填充年份、月份和周序号，然后再搜索卷烟名称')\n        return\n      }\n      \n      // 当卷烟名称输入完成时，尝试匹配表格中的记录\n      if (this.searchForm.cigaretteName && this.tableData.length > 0) {\n        // 找到该卷烟在当前日期的所有投放记录\n        const matchedRecords = this.tableData.filter(record => \n          record.cigName && \n          record.cigName.includes(this.searchForm.cigaretteName) &&\n          record.year === this.searchForm.year &&\n          record.month === this.searchForm.month &&\n          record.weekSeq === this.searchForm.week\n        )\n        \n        if (matchedRecords.length > 0) {\n          // 找到匹配记录，触发选中事件（传递所有匹配的记录）\n          this.$emit('cigarette-name-matched', matchedRecords)\n          ElMessage.success(`已自动选中匹配的卷烟：${matchedRecords[0].cigName}，共找到 ${matchedRecords.length} 个投放区域`)\n        } else {\n          ElMessage.info('未找到匹配的卷烟记录')\n        }\n      }\n    },\n    formatQuantity(value) {\n      if (value === null || value === undefined || value === '') {\n        return '未设置'\n      }\n      \n      // 如果是数字，格式化为带小数点的形式\n      const numValue = parseFloat(value)\n      if (!isNaN(numValue)) {\n        return numValue.toFixed(2)\n      }\n      \n      return value\n    },\n    \n    // 加载档位数据\n    loadPositionData(record) {\n      if (!record) {\n        this.positionData = new Array(30).fill(0)\n        return\n      }\n      \n      // 从记录中提取D30到D1的数据\n      const positions = []\n      for (let i = 30; i >= 1; i--) {\n        const key = `d${i}`\n        const value = record[key] || 0\n        positions.push(Number(value))\n      }\n      \n      this.positionData = positions.length === 30 ? positions : new Array(30).fill(0)\n      \n      // 详细的调试信息\n      console.log('=== 档位数据加载调试 ===')\n      console.log('从后端接收的原始数据字段:', Object.keys(record).filter(key => key.startsWith('d')).sort())\n      console.log('转换后的positionData数组:', this.positionData)\n      console.log('界面将显示的顺序:', this.positionData.map((val, idx) => `D${30-idx}=${val}`).join(', '))\n      console.log('数组第一个值 (对应D30):', this.positionData[0])\n      console.log('数组最后一个值 (对应D1):', this.positionData[29])\n    },\n    \n    // 档位数据验证（已移除约束检查）\n    validatePositionConstraints() {\n      // 不再进行约束条件检查，允许任意档位值\n      console.log('档位数据已更新，不再检查约束条件')\n    },\n    \n    // 保存档位设置\n    async handleSavePositions() {\n      if (!this.selectedRecord || !this.selectedRecord.cigCode) {\n        ElMessage.error('请先选中一个卷烟记录')\n        return\n      }\n      \n      if (!this.isPositionDataValid) {\n        ElMessage.error('请检查档位数据，至少设置一个档位值')\n        return\n      }\n      \n      // 一致性检查：如果同时修改了编码表达和档位设置\n      if (this.needsConsistencyCheck) {\n        const checkResult = await this.performConsistencyCheck()\n        if (!checkResult.passed) {\n          return // 一致性检查未通过，终止操作\n        }\n      }\n      \n      try {\n        this.savingPositions = true\n        \n        // 构建更新请求数据\n        const updateData = {\n          cigCode: this.selectedRecord.cigCode,\n          cigName: this.selectedRecord.cigName,\n          year: this.selectedRecord.year,\n          month: this.selectedRecord.month,\n          weekSeq: this.selectedRecord.weekSeq,\n          deliveryMethod: this.searchForm.distributionType,\n          deliveryEtype: this.searchForm.extendedType,\n          deliveryArea: this.searchForm.distributionArea.join(','),\n          distribution: [...this.positionData], // D30到D1的分配值数组\n          remark: this.selectedRecord.remark || '档位设置更新'\n        }\n        \n        // 详细的调试信息\n        console.log('=== 档位设置数据传输调试 ===')\n        console.log('界面显示顺序:', this.positionData.map((val, idx) => `D${30-idx}=${val}`).join(', '))\n        console.log('发送给后端的distribution数组:', updateData.distribution)\n        console.log('数组长度:', updateData.distribution.length)\n        console.log('数组第一个值 (应该是D30):', updateData.distribution[0])\n        console.log('数组最后一个值 (应该是D1):', updateData.distribution[29])\n        console.log('完整请求数据:', updateData)\n        \n        const response = await cigaretteDistributionAPI.updateCigaretteInfo(updateData)\n        \n        if (response.data.success) {\n          ElMessage.success({\n            message: `档位设置保存成功！更新了${response.data.updatedRecords || 1}条记录`,\n            duration: 2000\n          })\n          \n          // 触发数据刷新\n          this.$emit('position-updated', {\n            cigCode: updateData.cigCode,\n            updateData: updateData\n          })\n        } else {\n          throw new Error(response.data.message || '保存失败')\n        }\n      } catch (error) {\n        console.error('保存档位设置失败:', error)\n        ElMessage.error(`保存失败: ${error.message}`)\n      } finally {\n        this.savingPositions = false\n      }\n    },\n    \n    // 重置档位数据\n    handleResetPositions() {\n      if (this.selectedRecord) {\n        this.loadPositionData(this.selectedRecord)\n        ElMessage.info('已重置档位数据')\n      } else {\n        this.positionData = new Array(30).fill(0)\n        ElMessage.info('已清空档位数据')\n      }\n    },\n    \n    // 新增投放区域\n    async handleAddNewArea() {\n      if (!this.canAddNewArea) {\n        ElMessage.warning('请确保已选中卷烟并设置了有效的档位数据')\n        return\n      }\n      \n      try {\n        // 获取当前选中的投放区域中，不在原记录中的新区域\n        const originalAreas = this.selectedRecord.allAreas || [this.selectedRecord.deliveryArea]\n        const selectedAreas = this.searchForm.distributionArea\n        const newAreas = selectedAreas.filter(area => !originalAreas.includes(area))\n        \n        if (newAreas.length === 0) {\n          ElMessage.warning('没有选择新的投放区域')\n          return\n        }\n        \n        const result = await ElMessageBox.confirm(\n          `确定要为卷烟 \"${this.selectedRecord.cigName}\" 新增投放区域：${newAreas.join(', ')} 吗？`,\n          '确认新增投放区域',\n          {\n            confirmButtonText: '确定新增',\n            cancelButtonText: '取消',\n            type: 'info'\n          }\n        )\n        \n        if (result === 'confirm') {\n          // 为每个新区域创建记录\n          const addPromises = newAreas.map(area => {\n            const addData = {\n              cigCode: this.selectedRecord.cigCode,\n              cigName: this.selectedRecord.cigName,\n              year: this.selectedRecord.year,\n              month: this.selectedRecord.month,\n              weekSeq: this.selectedRecord.weekSeq,\n              deliveryMethod: this.searchForm.distributionType,\n              deliveryEtype: this.searchForm.extendedType,\n              deliveryArea: area,\n              distribution: [...this.positionData], // 使用当前的档位设置\n              remark: `新增投放区域: ${area}`\n            }\n            \n            // 新增区域的调试信息\n            console.log(`=== 新增区域 ${area} 数据传输调试 ===`)\n            console.log('界面显示顺序:', this.positionData.map((val, idx) => `D${30-idx}=${val}`).join(', '))\n            console.log('发送给后端的distribution数组:', addData.distribution)\n            console.log('数组第一个值 (应该是D30):', addData.distribution[0])\n            console.log('数组最后一个值 (应该是D1):', addData.distribution[29])\n            \n            return cigaretteDistributionAPI.updateCigaretteInfo(addData)\n          })\n          \n          const responses = await Promise.all(addPromises)\n          const successCount = responses.filter(res => res.data.success).length\n          \n          if (successCount === newAreas.length) {\n            ElMessage.success({\n              message: `成功新增 ${successCount} 个投放区域记录`,\n              duration: 2000\n            })\n            \n            // 触发数据刷新\n            this.$emit('area-added', {\n              cigCode: this.selectedRecord.cigCode,\n              newAreas: newAreas,\n              positionData: this.positionData\n            })\n          } else {\n            ElMessage.warning(`部分新增成功：${successCount}/${newAreas.length}`)\n          }\n        }\n      } catch (error) {\n        if (error === 'cancel') {\n          return // 用户取消操作\n        }\n        console.error('新增投放区域失败:', error)\n        ElMessage.error(`新增失败: ${error.message}`)\n      }\n    },\n    \n    // 删除投放区域\n    async handleDeleteAreas() {\n      if (!this.canDeleteAreas) {\n        ElMessage.warning('请选择要删除的投放区域')\n        return\n      }\n      \n      try {\n        const areasToDeleteList = [...this.areasToDelete]\n        const remainingAreas = this.selectedRecord.allAreas.filter(area => !areasToDeleteList.includes(area))\n        \n        if (remainingAreas.length === 0) {\n          ElMessage.error('不能删除所有投放区域，至少需要保留一个')\n          return\n        }\n        \n        const result = await ElMessageBox.confirm(\n          `确定要删除卷烟 \"${this.selectedRecord.cigName}\" 的以下投放区域吗？\\n\\n${areasToDeleteList.join(', ')}\\n\\n删除后剩余区域：${remainingAreas.join(', ')}`,\n          '确认删除投放区域',\n          {\n            confirmButtonText: '确定删除',\n            cancelButtonText: '取消',\n            type: 'warning',\n            dangerouslyUseHTMLString: false\n          }\n        )\n        \n        if (result === 'confirm') {\n          // 构建删除请求数据\n          const deleteData = {\n            cigCode: this.selectedRecord.cigCode,\n            cigName: this.selectedRecord.cigName,\n            year: this.selectedRecord.year,\n            month: this.selectedRecord.month,\n            weekSeq: this.selectedRecord.weekSeq,\n            areasToDelete: areasToDeleteList\n          }\n          \n          console.log('删除投放区域请求数据:', deleteData)\n          \n          // 调用后端删除接口\n          const response = await cigaretteDistributionAPI.deleteDeliveryAreas(deleteData)\n          \n          if (response.data.success) {\n            ElMessage.success({\n              message: `成功删除 ${areasToDeleteList.length} 个投放区域记录`,\n              duration: 2000\n            })\n            \n            // 清空删除选择\n            this.areasToDelete = []\n            \n            // 触发数据刷新\n            this.$emit('areas-deleted', {\n              cigCode: this.selectedRecord.cigCode,\n              deletedAreas: areasToDeleteList,\n              remainingAreas: remainingAreas\n            })\n          } else {\n            throw new Error(response.data.message || '删除失败')\n          }\n        }\n      } catch (error) {\n        if (error === 'cancel') {\n          return // 用户取消操作\n        }\n        console.error('删除投放区域失败:', error)\n        ElMessage.error(`删除失败: ${error.message}`)\n      }\n    },\n    \n    // =================== 编码化表达功能方法 ===================\n    \n    // 保存原始表单状态\n    saveOriginalFormState() {\n      this.originalFormState = {\n        distributionType: this.searchForm.distributionType,\n        extendedType: this.searchForm.extendedType,\n        distributionArea: [...(this.searchForm.distributionArea || [])],\n        positionData: [...this.positionData],\n        encodedExpression: this.encodedExpressionInput\n      }\n      \n      console.log('保存原始表单状态:', this.originalFormState)\n    },\n    \n    // 加载编码化表达（支持多记录聚合显示）\n    loadEncodedExpression(record) {\n      if (!record) {\n        this.encodedExpressionInput = ''\n        this.originalEncodedExpression = ''\n        return\n      }\n      \n      // 获取选中卷烟的所有相关记录\n      const relatedRecords = this.getRelatedRecords(record)\n      \n      // 按档位设置分组，生成聚合编码表达\n      const groupedExpressions = this.generateAggregatedExpressions(relatedRecords)\n      \n      // 将多个编码表达式按行显示\n      const multiLineExpressions = groupedExpressions.join('\\n')\n      \n      this.encodedExpressionInput = multiLineExpressions\n      this.originalEncodedExpression = multiLineExpressions\n      \n      console.log('加载编码化表达:', {\n        cigName: record.cigName,\n        relatedRecordsCount: relatedRecords.length,\n        groupedExpressionsCount: groupedExpressions.length,\n        multiLineExpressions: multiLineExpressions\n      })\n    },\n    \n    // 获取选中卷烟的所有相关记录\n    getRelatedRecords(selectedRecord) {\n      if (!this.tableData || !selectedRecord) {\n        return [selectedRecord].filter(Boolean)\n      }\n      \n      // 查找同一卷烟同一时间的所有记录\n      const relatedRecords = this.tableData.filter(record => \n        record.cigCode === selectedRecord.cigCode &&\n        record.cigName === selectedRecord.cigName &&\n        record.year === selectedRecord.year &&\n        record.month === selectedRecord.month &&\n        record.weekSeq === selectedRecord.weekSeq\n      )\n      \n      return relatedRecords.length > 0 ? relatedRecords : [selectedRecord]\n    },\n    \n    // 生成每个记录的独立编码表达式\n    generateAggregatedExpressions(records) {\n      if (!records || records.length === 0) {\n        return []\n      }\n      \n      // 为每个记录生成独立的编码表达式\n      const expressions = []\n      \n      records.forEach(record => {\n        let expression = ''\n        \n        // 优先使用后端提供的编码表达式\n        if (record.encodedExpression) {\n          expression = record.encodedExpression\n        } else {\n          // 生成该记录的编码表达式\n          expression = this.generateRecordEncodedExpression(record)\n        }\n        \n        expressions.push(expression)\n      })\n      \n      return expressions\n    },\n    \n    // 生成单个记录的编码表达式\n    generateRecordEncodedExpression(record) {\n      try {\n        // 1. 生成投放类型编码\n        let typeCode = this.getDeliveryTypeCode(record)\n        \n        // 2. 生成区域编码\n        let areaCode = this.getAreaCode(record.deliveryArea, record.deliveryEtype)\n        \n        // 3. 生成档位投放量编码\n        const positionCode = this.generatePositionCode(record)\n        \n        // 4. 组合完整编码\n        if (record.deliveryMethod === '按档位统一投放') {\n          return `${typeCode}（${positionCode}）`\n        } else {\n          return `${typeCode}（${areaCode}）（${positionCode}）`\n        }\n      } catch (error) {\n        console.warn('生成编码表达式失败:', error)\n        return ''\n      }\n    },\n    \n    // 获取投放类型编码\n    getDeliveryTypeCode(record) {\n      if (record.deliveryMethod === '按档位统一投放') {\n        return 'A'\n      } else if (record.deliveryMethod === '按档位扩展投放') {\n        let code = 'B'\n        // 添加扩展类型编码\n        if (record.deliveryEtype === '档位+区县') {\n          code += '1'\n        } else if (record.deliveryEtype === '档位+市场类型') {\n          code += '2'\n        } else if (record.deliveryEtype === '档位+城乡分类代码') {\n          code += '4'\n        } else if (record.deliveryEtype === '档位+业态') {\n          code += '5'\n        }\n        return code\n      }\n      return 'A' // 默认\n    },\n    \n    // 获取区域编码\n    getAreaCode(deliveryArea, deliveryEtype) {\n      if (!deliveryArea) return ''\n      \n      // 根据扩展投放类型映射区域编码\n      const areaMapping = {\n        '档位+区县': {\n          '城区': '1',\n          '丹江': '2', \n          '房县': '3',\n          '郧西': '4',\n          '郧阳': '5',\n          '竹山': '6',\n          '竹溪': '7'\n        },\n        '档位+市场类型': {\n          '城网': 'C',\n          '农网': 'N'\n        },\n        '档位+城乡分类代码': {\n          '主城区': '①',\n          '城乡结合区': '②', \n          '镇中心区': '③',\n          '镇乡结合区': '④',\n          '特殊区域': '⑤',\n          '乡中心区': '⑥',\n          '村庄': '⑦'\n        },\n        '档位+业态': {\n          '便利店': 'a',\n          '超市': 'b',\n          '商场': 'c',\n          '烟草专卖店': 'd',\n          '娱乐服务类': 'e',\n          '其他': 'f'\n        }\n      }\n      \n      const mapping = areaMapping[deliveryEtype]\n      if (mapping && mapping[deliveryArea]) {\n        return mapping[deliveryArea]\n      }\n      \n      // 如果没有找到映射，返回区域名称首字母或简化表示\n      return deliveryArea.charAt(0)\n    },\n    \n    // 生成档位投放量编码\n    generatePositionCode(record) {\n      const positionGroups = []\n      let currentValue = null\n      let currentCount = 0\n      \n      // 从D30到D1遍历，统计连续相同值的档位数量\n      for (let i = 30; i >= 1; i--) {\n        const value = record[`d${i}`] || 0\n        \n        if (value === currentValue) {\n          currentCount++\n        } else {\n          // 处理前一组\n          if (currentValue !== null && currentCount > 0) {\n            positionGroups.push(`${currentCount}×${currentValue}`)\n          }\n          \n          // 开始新的一组\n          currentValue = value\n          currentCount = 1\n        }\n      }\n      \n      // 处理最后一组\n      if (currentValue !== null && currentCount > 0) {\n        positionGroups.push(`${currentCount}×${currentValue}`)\n      }\n      \n      return positionGroups.filter(group => !group.endsWith('×0')).join('+') || '无档位设置'\n    },\n    \n    // 按档位设置分组记录\n    groupRecordsByPositions(records) {\n      const grouped = {}\n      \n      records.forEach(record => {\n        // 生成档位设置的唯一标识\n        const positionValues = []\n        for (let i = 30; i >= 1; i--) {\n          const value = record[`d${i}`] || 0\n          if (value > 0) {\n            positionValues.push(`D${i}:${value}`)\n          }\n        }\n        \n        const positionKey = positionValues.length > 0 ? positionValues.join(',') : '无档位设置'\n        \n        if (!grouped[positionKey]) {\n          grouped[positionKey] = []\n        }\n        grouped[positionKey].push(record)\n      })\n      \n      return grouped\n    },\n    \n    // 处理编码表达输入\n    handleEncodedExpressionInput(value) {\n      // 输入过程中的实时处理\n      if (this.selectedRecord && this.selectedRecord.cigCode) {\n        this.setEditMode('encoding')\n      }\n      console.log('编码表达输入变化:', value)\n    },\n    \n    // 处理编码表达变化\n    handleEncodedExpressionChange() {\n      // 输入完成后的处理\n      if (this.isEncodedExpressionChanged) {\n        ElMessage.info('编码表达已修改，可点击\"更新记录\"按钮保存')\n      }\n    },\n    \n    // 从编码表达更新记录（基于新的批量更新接口）\n    async handleUpdateFromEncodedExpression() {\n      if (!this.selectedRecord || !this.selectedRecord.cigCode) {\n        ElMessage.error('请先选中一个卷烟记录')\n        return\n      }\n      \n      if (!this.isEncodedExpressionChanged) {\n        ElMessage.warning('编码表达未发生变化')\n        return\n      }\n      \n      if (!this.encodedExpressionInput.trim()) {\n        ElMessage.error('编码表达不能为空')\n        return\n      }\n      \n      try {\n        this.updatingFromEncoded = true\n        \n        // 步骤1：验证编码表达式\n        console.log('开始验证编码表达式...')\n        const validation = this.validateEncodedExpressions(this.encodedExpressionInput)\n        \n        if (!validation.isValid) {\n          // 显示验证错误\n          const errorMessage = validation.errors.join('\\n')\n          ElMessage.error({\n            dangerouslyUseHTMLString: false,\n            message: `编码表达式验证失败:\\n${errorMessage}`,\n            duration: 5000\n          })\n          return\n        }\n        \n        // 显示验证信息\n        if (validation.warnings.length > 0) {\n          ElMessage.success({\n            message: validation.warnings.join(', '),\n            duration: 3000\n          })\n        }\n        \n        // 步骤2：准备编码表达式列表\n        const expressions = this.encodedExpressionInput.split('\\n')\n          .map(line => line.trim())\n          .filter(line => line.length > 0)\n        \n        console.log('准备批量更新，编码表达式列表:', expressions)\n        \n        // 步骤3：构建批量更新请求数据\n        const batchUpdateData = {\n          cigCode: this.selectedRecord.cigCode,\n          cigName: this.selectedRecord.cigName,\n          year: this.selectedRecord.year,\n          month: this.selectedRecord.month,\n          weekSeq: this.selectedRecord.weekSeq,\n          encodedExpressions: expressions,\n          remark: `基于编码表达式的批量更新，共${expressions.length}条表达式`\n        }\n        \n        console.log('批量更新请求数据:', batchUpdateData)\n        \n        // 步骤4：调用新的批量更新接口\n        const response = await cigaretteDistributionAPI.batchUpdateFromExpressions(batchUpdateData)\n        \n        if (response.data.success) {\n          // 根据操作类型显示不同的成功消息\n          let successMessage = response.data.message\n          \n          if (response.data.operation === '投放类型变更') {\n            successMessage += `\\n删除了${response.data.deletedRecords}条记录，创建了${response.data.createdRecords}条记录`\n          } else if (response.data.operation === '增量更新') {\n            successMessage += `\\n新增${response.data.newAreas}个区域，更新${response.data.updatedAreas}个区域，删除${response.data.deletedAreas}个区域`\n          }\n          \n          ElMessage.success({\n            message: successMessage,\n            duration: 4000\n          })\n          \n          // 更新本地状态\n          this.originalEncodedExpression = this.encodedExpressionInput\n          \n          // 触发数据刷新\n          this.$emit('position-updated', {\n            cigCode: batchUpdateData.cigCode,\n            updateData: batchUpdateData,\n            updateType: 'batchEncodedExpression',\n            operationType: response.data.operation,\n            result: response.data\n          })\n          \n          // 重置编辑模式\n          this.editMode = 'none'\n          \n        } else {\n          throw new Error(response.data.message || '批量更新失败')\n        }\n        \n      } catch (error) {\n        console.error('编码表达式批量更新失败:', error)\n        \n        // 根据错误类型显示不同的错误消息\n        let errorMessage = error.message\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage\n        }\n        \n        ElMessage.error({\n          message: `批量更新失败: ${errorMessage}`,\n          duration: 5000\n        })\n      } finally {\n        this.updatingFromEncoded = false\n      }\n    },\n    \n    // 公开方法：外部更新搜索表单（供Home组件调用）\n    updateSearchForm(searchParams) {\n      if (searchParams) {\n        this.searchForm.year = searchParams.year\n        this.searchForm.month = searchParams.month\n        this.searchForm.week = searchParams.week\n        console.log('外部更新搜索表单:', searchParams)\n      }\n    },\n    \n    // =================== 一致性检查方法 ===================\n    \n    // 执行一致性检查\n    async performConsistencyCheck() {\n      try {\n        console.log('开始执行一致性检查...')\n        \n        // 解析编码表达\n        const parsedEncoding = this.parseEncodedExpression(this.encodedExpressionInput)\n        \n        // 检查一致性\n        const inconsistencies = this.checkConsistency(parsedEncoding)\n        \n        if (inconsistencies.length === 0) {\n          console.log('一致性检查通过')\n          return { passed: true }\n        }\n        \n        // 显示一致性冲突对话框\n        const result = await this.showConsistencyDialog(inconsistencies)\n        return result\n        \n      } catch (error) {\n        console.error('一致性检查过程中发生错误:', error)\n        ElMessage.warning('一致性检查失败，建议分别保存各项设置')\n        return { passed: false }\n      }\n    },\n    \n    // 解析编码表达式（基于编码规则表的完整实现）\n    parseEncodedExpression(encoded) {\n      const parsed = {\n        deliveryType: '',\n        extendedType: '',\n        deliveryTypeCode: '',\n        extendedTypeCode: '',\n        areaCodes: [],\n        areaNames: [],\n        positionCoding: '',\n        positionData: new Array(30).fill(0),\n        isValid: false,\n        error: ''\n      }\n      \n      try {\n        // 基本格式：B1（2+3+4）（5×9+5×8+10×7+10×6）\n        const trimmed = encoded.trim()\n        if (!trimmed) {\n          parsed.error = '编码表达式不能为空'\n          return parsed\n        }\n        \n        // 第一步：解析投放类型\n        const firstChar = trimmed.charAt(0).toUpperCase()\n        if (!['A', 'B', 'C'].includes(firstChar)) {\n          parsed.error = '投放类型编码错误，必须以A、B或C开头'\n          return parsed\n        }\n        \n        parsed.deliveryTypeCode = firstChar\n        switch (firstChar) {\n          case 'A':\n            parsed.deliveryType = '按档位统一投放'\n            break\n          case 'B':\n            parsed.deliveryType = '按档位扩展投放'\n            break\n          case 'C':\n            parsed.deliveryType = '按需投放'\n            break\n        }\n        \n        // 第二步：解析扩展投放类型（仅B类型需要）\n        if (firstChar === 'B') {\n          const secondChar = trimmed.charAt(1)\n          if (!['1', '2', '3', '4', '5'].includes(secondChar)) {\n            parsed.error = 'B类型投放必须指定扩展类型编码（1-5）'\n            return parsed\n          }\n          \n          parsed.extendedTypeCode = secondChar\n          switch (secondChar) {\n            case '1':\n              parsed.extendedType = '档位+区县'\n              break\n            case '2':\n              parsed.extendedType = '档位+市场类型'\n              break\n            case '3':\n              parsed.extendedType = '档位+区县+市场类型'\n              break\n            case '4':\n              parsed.extendedType = '档位+城乡分类代码'\n              break\n            case '5':\n              parsed.extendedType = '档位+业态'\n              break\n          }\n        }\n        \n        // 第三步：解析区域编码和投放量编码\n        const regex = /（([^）]+)）（([^）]+)）/\n        const match = trimmed.match(regex)\n        if (!match) {\n          parsed.error = '编码格式错误，应为：类型+扩展类型（区域编码）（投放量编码）'\n          return parsed\n        }\n        \n        const areaCodeStr = match[1]\n        const positionCodeStr = match[2]\n        \n        // 解析区域编码\n        const areaResult = this.parseAreaCodes(areaCodeStr, parsed.extendedTypeCode)\n        if (!areaResult.isValid) {\n          parsed.error = areaResult.error\n          return parsed\n        }\n        parsed.areaCodes = areaResult.areaCodes\n        parsed.areaNames = areaResult.areaNames\n        \n        // 解析投放量编码\n        const positionResult = this.parsePositionCoding(positionCodeStr)\n        if (!positionResult.isValid) {\n          parsed.error = positionResult.error\n          return parsed\n        }\n        parsed.positionCoding = positionCodeStr\n        parsed.positionData = positionResult.positionData\n        \n        parsed.isValid = true\n        \n      } catch (error) {\n        console.warn('编码表达解析失败:', error)\n        parsed.error = `解析异常: ${error.message}`\n      }\n      \n      return parsed\n    },\n    \n    // 解析区域编码\n    parseAreaCodes(areaCodeStr, extendedTypeCode) {\n      const result = {\n        areaCodes: [],\n        areaNames: [],\n        isValid: false,\n        error: ''\n      }\n      \n      try {\n        // 区域编码映射表\n        const areaMapping = {\n          '1': { // 档位+区县\n            '1': '城区', '2': '丹江', '3': '房县', '4': '郧西',\n            '5': '郧阳', '6': '竹山', '7': '竹溪'\n          },\n          '2': { // 档位+市场类型\n            'C': '城网', 'N': '农网'\n          },\n          '3': { // 档位+区县+市场类型（使用区县编码）\n            '1': '城区', '2': '丹江', '3': '房县', '4': '郧西',\n            '5': '郧阳', '6': '竹山', '7': '竹溪'\n          },\n          '4': { // 档位+城乡分类代码\n            '①': '主城区', '②': '城乡结合区', '③': '镇中心区', '④': '镇乡接合区',\n            '⑤': '特殊区域', '⑥': '乡中心区', '⑦': '村庄'\n          },\n          '5': { // 档位+业态\n            'a': '便利店', 'b': '超市', 'c': '商场', 'd': '烟草专业店',\n            'e': '娱乐服务类', 'f': '其他'\n          }\n        }\n        \n        const mapping = areaMapping[extendedTypeCode] || areaMapping['1'] // 默认使用区县编码\n        \n        // 拆分区域编码（用+分隔）\n        const codes = areaCodeStr.split('+').map(code => code.trim()).filter(code => code)\n        \n        if (codes.length === 0) {\n          result.error = '区域编码不能为空'\n          return result\n        }\n        \n        // 验证每个区域编码\n        for (const code of codes) {\n          if (!mapping[code]) {\n            result.error = `无效的区域编码: ${code}`\n            return result\n          }\n          result.areaCodes.push(code)\n          result.areaNames.push(mapping[code])\n        }\n        \n        result.isValid = true\n        \n      } catch (error) {\n        result.error = `区域编码解析异常: ${error.message}`\n      }\n      \n      return result\n    },\n    \n    // 解析投放量编码\n    parsePositionCoding(positionCodeStr) {\n      const result = {\n        positionData: new Array(30).fill(0),\n        isValid: false,\n        error: ''\n      }\n      \n      try {\n        // 投放量编码格式：5×9+5×8+10×7+10×6\n        // 表示：5个档位投放量9，5个档位投放量8，10个档位投放量7，10个档位投放量6\n        \n        const segments = positionCodeStr.split('+').map(seg => seg.trim()).filter(seg => seg)\n        \n        if (segments.length === 0) {\n          result.error = '投放量编码不能为空'\n          return result\n        }\n        \n        let totalPositions = 0\n        \n        // 解析每个分段\n        for (const segment of segments) {\n          const match = segment.match(/^(\\d+)×(\\d+)$/)\n          if (!match) {\n            result.error = `投放量编码格式错误: ${segment}，应为\"档位数×投放量\"格式`\n            return result\n          }\n          \n          const positionCount = parseInt(match[1])\n          const deliveryAmount = parseInt(match[2])\n          \n          if (positionCount <= 0 || positionCount > 30) {\n            result.error = `档位数量错误: ${positionCount}，应在1-30之间`\n            return result\n          }\n          \n          if (deliveryAmount < 0) {\n            result.error = `投放量不能为负数: ${deliveryAmount}`\n            return result\n          }\n          \n          totalPositions += positionCount\n        }\n        \n        // 验证总档位数必须为30\n        if (totalPositions !== 30) {\n          result.error = `总档位数必须为30，当前为: ${totalPositions}`\n          return result\n        }\n        \n        // 填充档位数据（从D30开始往下填）\n        let currentIndex = 0\n        for (const segment of segments) {\n          const match = segment.match(/^(\\d+)×(\\d+)$/)\n          const positionCount = parseInt(match[1])\n          const deliveryAmount = parseInt(match[2])\n          \n          for (let i = 0; i < positionCount; i++) {\n            result.positionData[currentIndex + i] = deliveryAmount\n          }\n          currentIndex += positionCount\n        }\n        \n        result.isValid = true\n        \n      } catch (error) {\n        result.error = `投放量编码解析异常: ${error.message}`\n      }\n      \n      return result\n    },\n    \n    // 验证编码表达式列表（用户要求的三个验证规则）\n    validateEncodedExpressions(expressions) {\n      const validation = {\n        isValid: false,\n        errors: [],\n        warnings: []\n      }\n      \n      try {\n        // 处理输入：按行分割并过滤空行\n        const lines = expressions.split('\\n')\n          .map(line => line.trim())\n          .filter(line => line.length > 0)\n        \n        if (lines.length === 0) {\n          validation.errors.push('编码表达式列表不能为空')\n          return validation\n        }\n        \n        // 解析所有编码表达式\n        const parsedExpressions = []\n        for (const line of lines) {\n          const parsed = this.parseEncodedExpression(line)\n          if (!parsed.isValid) {\n            validation.errors.push(`编码表达式\"${line}\"解析失败: ${parsed.error}`)\n            return validation\n          }\n          parsedExpressions.push(parsed)\n        }\n        \n        // 验证规则1：仅允许存在一种投放类型（第一个字母一致）\n        const deliveryTypes = [...new Set(parsedExpressions.map(p => p.deliveryTypeCode))]\n        if (deliveryTypes.length > 1) {\n          validation.errors.push(`不允许存在多种投放类型，当前包含: ${deliveryTypes.join(', ')}`)\n          return validation\n        }\n        \n        // 验证规则2：不允许存在重复的投放区域编号\n        const allAreaCodes = []\n        for (const parsed of parsedExpressions) {\n          for (const areaCode of parsed.areaCodes) {\n            if (allAreaCodes.includes(areaCode)) {\n              validation.errors.push(`投放区域编号重复: ${areaCode}`)\n              return validation\n            }\n            allAreaCodes.push(areaCode)\n          }\n        }\n        \n        // 验证规则3：编码表达式的投放量部分必须为30个完整档位（这个在parsePositionCoding中已经验证）\n        // 这里再次检查以确保所有表达式都符合要求\n        for (const parsed of parsedExpressions) {\n          const totalPositions = parsed.positionData.length\n          if (totalPositions !== 30) {\n            validation.errors.push(`编码表达式的投放量部分必须包含30个完整档位，当前为: ${totalPositions}`)\n            return validation\n          }\n        }\n        \n        // 所有验证通过\n        validation.isValid = true\n        validation.parsedExpressions = parsedExpressions\n        \n        // 添加一些有用的信息\n        validation.warnings.push(`共验证了 ${lines.length} 条编码表达式`)\n        validation.warnings.push(`投放类型: ${parsedExpressions[0].deliveryType}`)\n        if (parsedExpressions[0].extendedType) {\n          validation.warnings.push(`扩展类型: ${parsedExpressions[0].extendedType}`)\n        }\n        validation.warnings.push(`涉及区域: ${allAreaCodes.length} 个`)\n        \n      } catch (error) {\n        validation.errors.push(`验证过程异常: ${error.message}`)\n      }\n      \n      return validation\n    },\n    \n    // 检查一致性\n    checkConsistency(parsedEncoding) {\n      const inconsistencies = []\n      \n      // 检查投放类型一致性\n      if (parsedEncoding.deliveryType && \n          this.searchForm.distributionType && \n          parsedEncoding.deliveryType !== this.searchForm.distributionType) {\n        inconsistencies.push({\n          type: '投放类型',\n          encoded: parsedEncoding.deliveryType,\n          current: this.searchForm.distributionType\n        })\n      }\n      \n      // 检查扩展投放类型一致性\n      if (parsedEncoding.extendedType && \n          this.searchForm.extendedType && \n          parsedEncoding.extendedType !== this.searchForm.extendedType) {\n        inconsistencies.push({\n          type: '扩展投放类型',\n          encoded: parsedEncoding.extendedType,\n          current: this.searchForm.extendedType\n        })\n      }\n      \n      // 这里可以添加更多的一致性检查逻辑\n      // 如档位数据一致性、区域一致性等\n      \n      return inconsistencies\n    },\n    \n    // 显示一致性检查对话框\n    async showConsistencyDialog(inconsistencies) {\n      const inconsistencyText = inconsistencies.map(item => \n        `• ${item.type}: 编码表达为\"${item.encoded}\"，当前设置为\"${item.current}\"`\n      ).join('\\n')\n      \n      const message = `检测到以下不一致项：\\n\\n${inconsistencyText}\\n\\n请选择处理方式：`\n      \n      try {\n        const result = await ElMessageBox.confirm(\n          message,\n          '数据一致性检查',\n          {\n            confirmButtonText: '强制更新（忽略冲突）',\n            cancelButtonText: '取消操作',\n            type: 'warning',\n            dangerouslyUseHTMLString: false,\n            customClass: 'consistency-check-dialog',\n            beforeClose: (action, instance, done) => {\n              if (action === 'confirm') {\n                instance.confirmButtonText = '强制更新中...'\n                instance.confirmButtonLoading = true\n                setTimeout(() => {\n                  done()\n                }, 300)\n              } else {\n                done()\n              }\n            }\n          }\n        )\n        \n        if (result === 'confirm') {\n          ElMessage.warning('已选择强制更新，将忽略一致性冲突')\n          return { passed: true, forced: true }\n        }\n        \n      } catch (error) {\n        if (error === 'cancel') {\n          ElMessage.info('已取消更新操作')\n        }\n      }\n      \n      return { passed: false }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.search-form-container {\n  background: #fafbfc;\n  padding: 15px;\n  border-radius: 6px;\n  border: 1px solid #e4e7ed;\n}\n\n.search-form {\n  margin: 0;\n}\n\n:deep(.el-form-item) {\n  margin-bottom: 15px;\n  margin-right: 15px;\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n  color: #606266;\n  font-size: 13px;\n}\n\n:deep(.el-input__wrapper) {\n  box-shadow: 0 0 0 1px #dcdfe6 inset;\n}\n\n:deep(.el-input__wrapper:hover) {\n  box-shadow: 0 0 0 1px #c0c4cc inset;\n}\n\n:deep(.el-input__wrapper.is-focus) {\n  box-shadow: 0 0 0 1px #409eff inset;\n}\n\n:deep(.el-select .el-input__wrapper) {\n  box-shadow: 0 0 0 1px #dcdfe6 inset;\n}\n\n:deep(.el-select .el-input__wrapper:hover) {\n  box-shadow: 0 0 0 1px #c0c4cc inset;\n}\n\n:deep(.el-select .el-input__wrapper.is-focus) {\n  box-shadow: 0 0 0 1px #409eff inset;\n}\n\n:deep(.el-select .el-input__wrapper.is-disabled) {\n  background: #f5f7fa;\n  color: #c0c4cc;\n}\n\n/* 档位设置区域样式 */\n.position-settings-section {\n  margin: 20px 0;\n  padding: 20px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e4e7ed;\n}\n\n.position-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.position-header .el-divider {\n  margin: 0;\n  flex: 1;\n}\n\n.position-view-toggle {\n  margin-left: 20px;\n}\n\n.position-view-toggle .el-button-group .el-button {\n  font-size: 12px;\n  padding: 6px 12px;\n}\n\n/* 三维图表弹窗样式 */\n.chart-dialog :deep(.el-dialog__header) {\n  background: linear-gradient(90deg, #409eff, #67c23a);\n  color: white;\n  padding: 20px 24px;\n  border-radius: 8px 8px 0 0;\n}\n\n.chart-dialog :deep(.el-dialog__title) {\n  color: white;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.chart-dialog :deep(.el-dialog__close) {\n  color: white;\n  font-size: 18px;\n}\n\n.chart-dialog :deep(.el-dialog__close:hover) {\n  color: #f0f0f0;\n}\n\n.chart-dialog :deep(.el-dialog__body) {\n  padding: 0;\n  background: #f8f9fa;\n  min-height: 1125px;\n}\n\n.chart-dialog :deep(.el-dialog) {\n  border-radius: 8px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n  max-height: 95vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.chart-dialog :deep(.el-dialog__footer) {\n  border-top: 1px solid #e4e7ed;\n  background: white;\n  padding: 16px 24px;\n  border-radius: 0 0 8px 8px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n}\n\n.position-grid {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 12px;\n  margin: 15px 0;\n}\n\n.position-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px;\n  background: #ffffff;\n  border-radius: 6px;\n  border: 1px solid #dcdfe6;\n  transition: all 0.2s ease;\n}\n\n.position-item:hover {\n  border-color: #409eff;\n  box-shadow: 0 2px 4px rgba(64, 158, 255, 0.1);\n}\n\n.position-label {\n  font-weight: 600;\n  color: #409eff;\n  min-width: 32px;\n  font-size: 12px;\n  text-align: center;\n}\n\n.position-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px solid #e4e7ed;\n}\n\n/* 档位输入框样式优化 */\n:deep(.position-item .el-input-number) {\n  width: 90px !important;\n}\n\n:deep(.position-item .el-input-number .el-input__wrapper) {\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n:deep(.position-item .el-input-number--small .el-input__wrapper) {\n  padding: 4px 8px;\n}\n\n/* 档位约束错误提示 */\n.position-item.error {\n  border-color: #f56c6c;\n  background: #fef0f0;\n}\n\n.position-item.error .position-label {\n  color: #f56c6c;\n}\n\n/* 删除投放区域样式 */\n.delete-area-section {\n  margin: 20px 0;\n  padding: 15px;\n  background: #fef9f9;\n  border-radius: 6px;\n  border: 1px solid #f5c6cb;\n}\n\n.delete-area-checkboxes {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin: 15px 0;\n}\n\n.delete-area-checkboxes .el-checkbox {\n  margin: 0;\n  padding: 8px 12px;\n  background: #ffffff;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.delete-area-checkboxes .el-checkbox:hover {\n  border-color: #f56c6c;\n  box-shadow: 0 2px 4px rgba(245, 108, 108, 0.1);\n}\n\n.delete-area-checkboxes .el-checkbox.is-checked {\n  background: #fef0f0;\n  border-color: #f56c6c;\n}\n\n.delete-area-checkboxes .el-checkbox.is-disabled {\n  background: #f5f7fa;\n  color: #c0c4cc;\n  cursor: not-allowed;\n}\n\n.delete-area-tips {\n  margin-top: 10px;\n}\n\n.delete-area-tips .el-alert {\n  margin: 8px 0;\n}\n\n/* 编码化表达区域样式 */\n.encoded-expression-section {\n  margin: 20px 0;\n  padding: 20px;\n  background: #f0f7ff;\n  border-radius: 8px;\n  border: 1px solid #409eff;\n}\n\n.encoded-expression-input-container {\n  margin-top: 15px;\n}\n\n.encoded-expression-form-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.encoded-expression-form-item :deep(.el-form-item__label) {\n  font-weight: 600;\n  color: #409eff;\n}\n\n.encoded-expression-form-item :deep(.el-input-group__prepend) {\n  background: #409eff;\n  color: white;\n  border-color: #409eff;\n}\n\n.encoded-expression-form-item :deep(.el-textarea__inner) {\n  font-family: 'Consolas', 'Monaco', 'Menlo', monospace;\n  font-size: 13px;\n  line-height: 1.6;\n  background: #fafbfc;\n  border: 1px solid #409eff;\n}\n\n.encoded-expression-form-item :deep(.el-textarea__inner:focus) {\n  border-color: #1976d2;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\n}\n\n.encoded-expression-form-item :deep(.el-textarea__inner[readonly]) {\n  background: #f5f7fa;\n  color: #c0c4cc;\n  cursor: not-allowed;\n}\n\n.decoded-expression-display {\n  margin-top: 15px;\n}\n\n.decoded-expression-display :deep(.el-alert__title) {\n  font-family: 'Microsoft YaHei', Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.decoded-expression-display :deep(.el-alert__description) {\n  font-size: 12px;\n  color: #606266;\n  margin-top: 8px;\n  white-space: pre-line;\n  line-height: 1.6;\n}\n\n/* 编码表达式实时验证状态样式 */\n.encoded-expression-validation {\n  margin-top: 15px;\n}\n\n.encoded-expression-validation :deep(.el-alert__title) {\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.encoded-expression-validation :deep(.el-alert__description) {\n  white-space: pre-line;\n  line-height: 1.6;\n  font-size: 13px;\n}\n\n/* 成功状态 */\n.encoded-expression-validation :deep(.el-alert--success) {\n  border-color: #67c23a;\n  background-color: #f0f9ff;\n}\n\n/* 错误状态 */\n.encoded-expression-validation :deep(.el-alert--error) {\n  border-color: #f56c6c;\n  background-color: #fef0f0;\n}\n\n/* 信息状态 */\n.encoded-expression-validation :deep(.el-alert--info) {\n  border-color: #909399;\n  background-color: #f4f4f5;\n}\n\n/* 编码表达提示信息样式 */\n.encoded-expression-hint {\n  margin-top: 15px;\n}\n\n.encoded-expression-hint :deep(.el-alert__title) {\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.encoded-expression-hint :deep(.el-alert) {\n  border-color: #67c23a;\n  background-color: #f0f9ff;\n}\n\n/* 编辑模式状态样式 */\n.edit-mode-status {\n  margin-top: 15px;\n}\n\n.edit-mode-status :deep(.el-alert__description) {\n  font-size: 12px;\n  line-height: 1.6;\n  color: #606266;\n  margin-top: 5px;\n}\n\n.edit-mode-status :deep(.el-alert__title) {\n  font-weight: 600;\n  font-size: 14px;\n}\n\n/* 一致性检查警告样式 */\n.consistency-warning {\n  margin-top: 15px;\n}\n\n.consistency-warning :deep(.el-alert) {\n  border-color: #e6a23c;\n}\n\n.consistency-warning :deep(.el-alert__title) {\n  font-weight: 600;\n  color: #e6a23c;\n}\n\n.consistency-warning :deep(.el-alert__description) p {\n  margin: 8px 0;\n  line-height: 1.5;\n}\n\n/* 一致性检查对话框样式 */\n:deep(.consistency-check-dialog) {\n  .el-message-box {\n    width: 500px;\n    border-radius: 12px;\n  }\n  \n  .el-message-box__title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #e6a23c;\n  }\n  \n  .el-message-box__content {\n    padding: 20px 20px 30px;\n  }\n  \n  .el-message-box__message {\n    font-size: 14px;\n    line-height: 1.6;\n    white-space: pre-line;\n  }\n}\n\n</style>","<template>\n  <div class=\"position-3d-chart-container\">\n    <div v-if=\"!hasData\" class=\"no-data-message\">\n      <el-empty description=\"暂无数据可显示\" />\n    </div>\n    <div v-else class=\"chart-wrapper\">\n      <div ref=\"chartContainer\" class=\"chart-container\"></div>\n      <div v-if=\"uniqueAmounts.length > 1\" class=\"chart-legend\">\n        <div class=\"legend-title\">投放量颜色映射</div>\n        <div class=\"legend-items\">\n          <div \n            v-for=\"(amount, index) in uniqueAmounts\" \n            :key=\"amount\"\n            class=\"legend-item\"\n          >\n            <span \n              class=\"legend-color-box\"\n              :style=\"{ backgroundColor: colorMap.get(amount) }\"\n            ></span>\n            <span class=\"legend-text\">{{ amount }}</span>\n            <span class=\"legend-type\">{{ index % 2 === 0 ? '(暖)' : '(冷)' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport 'echarts-gl'\n\nexport default {\n  name: 'Position3DChart',\n  props: {\n    selectedRecord: {\n      type: Object,\n      default: () => null\n    },\n    tableData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      chartData: [],\n      uniqueAmounts: [],\n      colorMap: new Map()\n    }\n  },\n  computed: {\n    hasData() {\n      return this.chartData && this.chartData.length > 0\n    },\n    \n    // 获取选中卷烟在所有区域的投放数据\n    cigaretteData() {\n      if (!this.selectedRecord || !this.selectedRecord.cigCode) {\n        return []\n      }\n      \n      // 筛选出选中卷烟的所有记录\n      return this.tableData.filter(item => \n        item.cigCode === this.selectedRecord.cigCode &&\n        item.year === this.selectedRecord.year &&\n        item.month === this.selectedRecord.month &&\n        item.weekSeq === this.selectedRecord.weekSeq\n      )\n    }\n  },\n  watch: {\n    selectedRecord: {\n      handler() {\n        this.updateChartData()\n      },\n      immediate: true\n    },\n    tableData: {\n      handler() {\n        this.updateChartData()\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    // 延迟初始化，确保DOM完全渲染\n    this.$nextTick(() => {\n      setTimeout(() => {\n        this.initChart()\n      }, 100)\n    })\n  },\n  beforeUnmount() {\n    if (this.chart) {\n      this.chart.dispose()\n    }\n  },\n  methods: {\n    initChart() {\n      if (!this.$refs.chartContainer) {\n        console.warn('Chart container not found')\n        return\n      }\n      \n      // 检查DOM元素是否有尺寸\n      const container = this.$refs.chartContainer\n      if (container.clientWidth === 0 || container.clientHeight === 0) {\n        console.warn('Chart container has no width or height, retrying...')\n        // 如果没有尺寸，延迟重试\n        setTimeout(() => {\n          this.initChart()\n        }, 200)\n        return\n      }\n      \n      console.log('Initializing chart with container size:', {\n        width: container.clientWidth,\n        height: container.clientHeight\n      })\n      \n      try {\n        this.chart = echarts.init(this.$refs.chartContainer)\n        this.updateChartData()\n        \n        // 监听窗口大小变化\n        window.addEventListener('resize', this.handleResize)\n      } catch (error) {\n        console.error('Error initializing chart:', error)\n      }\n    },\n    \n    // 重新初始化图表 - 当弹窗完全打开后调用\n    reinitChart() {\n      console.log('Reinitializing chart...')\n      if (this.chart) {\n        this.chart.dispose()\n        this.chart = null\n      }\n      \n      this.$nextTick(() => {\n        setTimeout(() => {\n          this.initChart()\n        }, 50)\n      })\n    },\n    \n    handleResize() {\n      if (this.chart) {\n        this.chart.resize()\n      }\n    },\n    \n    updateChartData() {\n      this.processData()\n      this.renderChart()\n    },\n    \n    processData() {\n      const data = []\n      const areas = new Set()\n      const amounts = new Set()\n      \n      // 处理每个区域的数据\n      this.cigaretteData.forEach(record => {\n        const area = record.deliveryArea || '未知区域'\n        areas.add(area)\n        \n        // 处理30个档位的数据 (D1-D30)\n        for (let i = 1; i <= 30; i++) {\n          const positionKey = `d${i}`\n          const positionValue = record[positionKey] || 0\n          \n          if (positionValue > 0) {\n            data.push([\n              area,        // x轴：区域\n              `D${i}`,     // y轴：档位\n              positionValue // z轴：投放量\n            ])\n            amounts.add(positionValue)\n          }\n        }\n      })\n      \n      this.chartData = data\n      this.areaList = Array.from(areas)\n      \n      // 处理唯一投放量并生成颜色映射\n      this.uniqueAmounts = Array.from(amounts).sort((a, b) => b - a) // 从高到低排序\n      this.generateColorMap()\n      \n      console.log('处理后的三维图表数据:', {\n        data: this.chartData,\n        areas: this.areaList,\n        uniqueAmounts: this.uniqueAmounts,\n        colorMap: Object.fromEntries(this.colorMap),\n        selectedRecord: this.selectedRecord\n      })\n    },\n    \n    // 生成颜色映射（冷暖色交替，从高到低由深到浅）\n    generateColorMap() {\n      this.colorMap.clear()\n      \n      if (this.uniqueAmounts.length === 0) return\n      \n      // 定义暖色系（红、橙、黄色调）- 从深到浅\n      const warmColors = [\n        '#8B0000', '#B22222', '#DC143C', '#FF0000', '#FF4500', \n        '#FF6347', '#FF7F50', '#FFA500', '#FFB347', '#FFD700'\n      ]\n      \n      // 定义冷色系（蓝、绿、紫色调）- 从深到浅  \n      const coolColors = [\n        '#000080', '#0000CD', '#0000FF', '#1E90FF', '#4169E1',\n        '#6495ED', '#87CEEB', '#87CEFA', '#ADD8E6', '#E0F6FF'\n      ]\n      \n      if (this.uniqueAmounts.length === 1) {\n        // 只有一个投放量时使用深红色\n        this.colorMap.set(this.uniqueAmounts[0], '#8B0000')\n        return\n      }\n      \n      // 为每个投放量分配颜色（冷暖色交替）\n      this.uniqueAmounts.forEach((amount, index) => {\n        let color\n        \n        // 计算在当前颜色系中的位置（深到浅）\n        const colorIndex = Math.floor((index / 2) % 10) // 每个色系有10种深浅\n        \n        if (index % 2 === 0) {\n          // 偶数索引使用暖色系\n          color = warmColors[colorIndex] || warmColors[warmColors.length - 1]\n        } else {\n          // 奇数索引使用冷色系\n          color = coolColors[colorIndex] || coolColors[coolColors.length - 1]\n        }\n        \n        this.colorMap.set(amount, color)\n      })\n      \n      console.log('生成的颜色映射:', Object.fromEntries(this.colorMap))\n    },\n    \n    renderChart() {\n      if (!this.chart || !this.hasData) {\n        console.warn('Chart not initialized or no data available')\n        return\n      }\n      \n      // 生成档位列表 (D1-D30)\n      const positions = []\n      for (let i = 1; i <= 30; i++) {\n        positions.push(`D${i}`)\n      }\n      \n      const option = {\n        title: {\n          text: `${(this.selectedRecord && this.selectedRecord.cigName) || '卷烟'} - 各区域档位投放分布`,\n          left: 'center',\n          top: 10,\n          textStyle: {\n            fontSize: 16,\n            fontWeight: 'bold',\n            color: '#333'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: ((colorMap) => {\n            return function(params) {\n              const [area, position, amount] = params.data\n              const color = colorMap.get(amount) || '#8B0000'\n              return `区域: ${area}<br/>档位: ${position}<br/>投放量: ${amount}<br/><span style=\"color: ${color};\">■</span> 颜色: ${color}`\n            }\n          })(this.colorMap)\n        },\n        legend: {\n          show: false\n        },\n        xAxis3D: {\n          type: 'category',\n          name: '投放区域',\n          data: this.areaList,\n          nameTextStyle: {\n            fontSize: 12,\n            color: '#666'\n          },\n          axisLabel: {\n            fontSize: 10,\n            color: '#666',\n            interval: 0,\n            rotate: 45\n          }\n        },\n        yAxis3D: {\n          type: 'category',\n          name: '档位',\n          data: positions,\n          nameTextStyle: {\n            fontSize: 12,\n            color: '#666'\n          },\n          axisLabel: {\n            fontSize: 10,\n            color: '#666'\n          }\n        },\n        zAxis3D: {\n          type: 'value',\n          name: '投放量',\n          nameTextStyle: {\n            fontSize: 12,\n            color: '#666'\n          },\n          axisLabel: {\n            fontSize: 10,\n            color: '#666'\n          }\n        },\n        grid3D: {\n          boxWidth: 120,   // 增大3D网格宽度，提供更多空间\n          boxDepth: 120,   // 增大3D网格深度，提供更多空间\n          boxHeight: 60,\n          alpha: 25,\n          beta: 40,\n          viewControl: {\n            projection: 'orthographic',\n            autoRotate: false,\n            rotateSensitivity: 1,\n            zoomSensitivity: 1,\n            panSensitivity: 1,\n            alpha: 25,\n            beta: 40,\n            distance: 250   // 增加观察距离，避免柱子显得过于密集\n          },\n          light: {\n            main: {\n              intensity: 1.5,\n              alpha: 30,\n              beta: 40\n            },\n            ambient: {\n              intensity: 0.3\n            }\n          },\n          environment: '#f8f9fa'\n        },\n        series: [{\n          type: 'bar3D',\n          data: this.chartData,\n          shading: 'lambert',\n          // 增加柱子间距配置，解决重叠问题\n          barGap: 0.4,                // 同一类目下不同柱子的间距（40%间距）\n          barCategoryGap: 0.5,        // 不同类目间柱子的间距（50%间距）\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 12,\n              fontWeight: 'bold'\n            },\n            itemStyle: {\n              color: '#FFD700' // 强调时使用金色\n            }\n          },\n          itemStyle: {\n            color: ((colorMap) => {\n              return (params) => {\n                // 根据投放量从颜色映射中获取对应颜色\n                const amount = params.data[2]\n                return colorMap.get(amount) || '#8B0000' // 默认深红色\n              }\n            })(this.colorMap),\n            opacity: 0.8,\n            // 增加边框，进一步区分不同颜色的柱子\n            borderWidth: 1,\n            borderColor: 'rgba(255,255,255,0.3)'\n          },\n          label: {\n            show: false,\n            fontSize: 10\n          }\n        }]\n      }\n      \n      this.chart.setOption(option, true)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.position-3d-chart-container {\n  width: 100%;\n  height: 100%;\n  min-height: 1125px;\n}\n\n.chart-wrapper {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  min-height: 1125px;\n}\n\n.chart-container {\n  flex: 1;\n  height: 100%;\n  min-height: 1125px;\n}\n\n.chart-legend {\n  width: 160px;\n  padding: 15px;\n  background: #f8f9fa;\n  border-left: 1px solid #e4e7ed;\n  border-radius: 0 6px 6px 0;\n  overflow-y: auto;\n}\n\n.legend-title {\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 12px;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 8px;\n}\n\n.legend-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 6px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.legend-item:hover {\n  background-color: #e8f4fd;\n}\n\n.legend-color-box {\n  width: 16px;\n  height: 16px;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  flex-shrink: 0;\n}\n\n.legend-text {\n  font-size: 13px;\n  color: #333;\n  font-weight: 500;\n  min-width: 30px;\n}\n\n.legend-type {\n  font-size: 11px;\n  color: #666;\n  font-style: italic;\n}\n\n.no-data-message {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 1125px;\n  background: #fafafa;\n  border-radius: 6px;\n}\n\n:deep(.el-empty__description) {\n  color: #999;\n  font-size: 14px;\n}\n</style>\n","import { render } from \"./Position3DChart.vue?vue&type=template&id=209232d4&scoped=true\"\nimport script from \"./Position3DChart.vue?vue&type=script&lang=js\"\nexport * from \"./Position3DChart.vue?vue&type=script&lang=js\"\n\nimport \"./Position3DChart.vue?vue&type=style&index=0&id=209232d4&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-209232d4\"]])\n\nexport default __exports__","import { render } from \"./SearchForm.vue?vue&type=template&id=a26b7134&scoped=true\"\nimport script from \"./SearchForm.vue?vue&type=script&lang=js\"\nexport * from \"./SearchForm.vue?vue&type=script&lang=js\"\n\nimport \"./SearchForm.vue?vue&type=style&index=0&id=a26b7134&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a26b7134\"]])\n\nexport default __exports__","<template>\n  <div class=\"import-table-component\">\n    <!-- 导入功能按钮区域 -->\n    <div class=\"import-buttons-row\">\n      <el-button \n        type=\"primary\" \n        size=\"default\"\n        @click=\"showBasicInfoImportDialog\"\n      >\n        <el-icon><DocumentAdd /></el-icon>\n        导入卷烟投放基本信息\n      </el-button>\n      <el-button \n        type=\"success\" \n        size=\"default\"\n        @click=\"showCustomerDataImportDialog\"\n      >\n        <el-icon><DataAnalysis /></el-icon>\n        导入区域客户数\n      </el-button>\n      <el-button \n        type=\"warning\" \n        size=\"default\"\n        @click=\"showGeneratePlanDialog\"\n      >\n        <el-icon><Cpu /></el-icon>\n        生成分配方案\n      </el-button>\n    </div>\n\n    <!-- 卷烟投放基本信息导入对话框 -->\n    <el-dialog\n      v-model=\"basicInfoImportDialogVisible\"\n      title=\"导入卷烟投放基本信息\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"basicInfoTimeForm\" label-width=\"80px\">\n        <el-form-item label=\"年份\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.year\" \n            placeholder=\"选择年份\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"year in yearOptions\" \n              :key=\"year\" \n              :label=\"year\" \n              :value=\"year\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"月份\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.month\" \n            placeholder=\"选择月份\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"month in monthOptions\" \n              :key=\"month\" \n              :label=\"`${month}月`\" \n              :value=\"month\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"周序号\" required>\n          <el-select \n            v-model=\"basicInfoTimeForm.weekSeq\" \n            placeholder=\"选择周序号\"\n            style=\"width: 100%\"\n          >\n            <el-option \n              v-for=\"week in weekOptions\" \n              :key=\"week\" \n              :label=\"`第${week}周`\" \n              :value=\"week\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"选择文件\" required>\n          <el-upload\n            ref=\"basicInfoUpload\"\n            class=\"basic-info-upload\"\n            :auto-upload=\"false\"\n            :show-file-list=\"true\"\n            accept=\".xlsx,.xls\"\n            :limit=\"1\"\n            :file-list=\"basicInfoFileList\"\n            :before-upload=\"handleBasicInfoBeforeUpload\"\n            :on-change=\"handleBasicInfoChange\"\n            :on-remove=\"handleBasicInfoRemove\"\n          >\n            <el-button type=\"primary\">\n              <el-icon><Plus /></el-icon>\n              选择Excel文件\n            </el-button>\n          </el-upload>\n          <div class=\"upload-tip\">支持Excel格式(.xlsx, .xls)，文件大小不超过10MB</div>\n        </el-form-item>\n        \n        <!-- 表结构说明 -->\n        <el-form-item label=\"表结构要求\">\n          <el-alert\n            title=\"Excel文件必须包含以下列（大小写敏感）\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n          >\n            <template #default>\n              <div class=\"structure-requirements\">\n                <p><strong>基本信息列：</strong></p>\n                <ul>\n                  <li><code>CIG_CODE</code> - 卷烟代码</li>\n                  <li><code>CIG_NAME</code> - 卷烟名称</li>\n                  <li><code>YEAR</code> - 年份</li>\n                  <li><code>MONTH</code> - 月份</li>\n                  <li><code>WEEK_SEQ</code> - 周序号</li>\n                  <li><code>URS</code> - URS</li>\n                  <li><code>ADV</code> - ADV</li>\n                  <li><code>DELIVERY_METHOD</code> - 档位投放方式</li>\n                  <li><code>DELIVERY_ETYPE</code> - 扩展投放方式</li>\n                  <li><code>DELIVERY_AREA</code> - 投放区域</li>\n                  <li><code>remark</code> - 备注</li>\n                </ul>\n                <p><strong>可选列：</strong></p>\n                <ul>\n                  <li><code>id</code> - 主键ID（可选，系统会自动生成）</li>\n                </ul>\n              </div>\n            </template>\n          </el-alert>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"basicInfoImportDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleBasicInfoImport\"\n            :loading=\"basicInfoImporting\"\n            :disabled=\"!canImportBasicInfo\"\n          >\n            确定导入\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 区域客户数导入对话框 -->\n    <el-dialog\n      v-model=\"customerDataImportDialogVisible\"\n      title=\"导入区域客户数\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"customerImportForm\" label-width=\"120px\">\n        <el-form-item label=\"投放方法\" required>\n          <el-select\n            v-model=\"customerImportForm.deliveryMethod\"\n            placeholder=\"请选择投放方法\"\n            style=\"width: 100%\"\n            @change=\"handleCustomerImportTypeChange\"\n          >\n            <el-option label=\"按档位统一投放\" value=\"按档位统一投放\" />\n            <el-option label=\"按档位扩展投放\" value=\"按档位扩展投放\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item \n          v-if=\"customerImportForm.deliveryMethod === '按档位扩展投放'\" \n          label=\"扩展投放类型\" \n          required\n        >\n          <el-select\n            v-model=\"customerImportForm.deliveryEtype\"\n            placeholder=\"请选择扩展投放类型\"\n            style=\"width: 100%\"\n          >\n            <el-option label=\"档位+区县\" value=\"档位+区县\" />\n            <el-option label=\"档位+城乡分类代码\" value=\"档位+城乡分类代码\" />\n            <el-option label=\"档位+市场类型\" value=\"档位+市场类型\" />\n            <el-option label=\"档位+业态\" value=\"档位+业态\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"年份\" required>\n          <el-select\n            v-model=\"customerImportForm.year\"\n            placeholder=\"请选择年份\"\n            style=\"width: 100%\"\n            :disabled=\"customerDataImporting\"\n          >\n            <el-option\n              v-for=\"year in yearOptions\"\n              :key=\"year\"\n              :label=\"year\"\n              :value=\"year\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"月份\" required>\n          <el-select\n            v-model=\"customerImportForm.month\"\n            placeholder=\"请选择月份\"\n            style=\"width: 100%\"\n            :disabled=\"customerDataImporting\"\n          >\n            <el-option\n              v-for=\"month in monthOptions\"\n              :key=\"month\"\n              :label=\"month\"\n              :value=\"month\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"双周上浮\">\n          <el-checkbox \n            v-model=\"customerImportForm.isBiWeeklyFloat\"\n            :disabled=\"customerDataImporting\"\n          >\n          </el-checkbox>\n        </el-form-item>\n        \n        \n        <el-form-item label=\"选择文件\" required>\n          <el-upload\n            ref=\"customerDataUpload\"\n            class=\"customer-data-upload\"\n            :auto-upload=\"false\"\n            :show-file-list=\"true\"\n            accept=\".xlsx,.xls\"\n            :limit=\"1\"\n            :file-list=\"customerDataFileList\"\n            :before-upload=\"handleCustomerDataBeforeUpload\"\n            :on-change=\"handleCustomerDataChange\"\n            :on-remove=\"handleCustomerDataRemove\"\n          >\n            <el-button type=\"primary\">\n              <el-icon><Plus /></el-icon>\n              选择Excel文件\n            </el-button>\n          </el-upload>\n          <div class=\"upload-tip\">支持Excel格式(.xlsx, .xls)，文件大小不超过10MB</div>\n        </el-form-item>\n        \n        <!-- 表结构说明 -->\n        <el-form-item label=\"表结构要求\">\n          <el-alert\n            title=\"Excel文件必须包含以下列（大小写敏感）\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n          >\n            <template #default>\n              <div class=\"structure-requirements\">\n                <p><strong>客户数据列：</strong></p>\n                <ul>\n                  <li><code>region</code> - 区域标识</li>\n                  <li><code>D30</code> 到 <code>D1</code> - 30个档位客户数列</li>\n                  <li><code>TOTAL</code> - 总客户数</li>\n                </ul>\n                <p><strong>注意：</strong>必须包含D30到D1共30个档位列，不能缺少任何一个</p>\n              </div>\n            </template>\n          </el-alert>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"customerDataImportDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleCustomerDataImport\"\n            :loading=\"customerDataImporting\"\n            :disabled=\"!canImportCustomerData\"\n          >\n            确定导入\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 生成分配方案对话框 -->\n    <el-dialog\n      v-model=\"generatePlanDialogVisible\"\n      title=\"生成分配方案\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"generate-plan-content\">\n        <div class=\"plan-description\">\n          <el-alert\n            title=\"分配方案生成说明\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n          >\n            <template #default>\n              <p>系统将根据选定时间的卷烟投放基本信息和区域客户数据，自动计算生成各卷烟的档位分配方案。</p>\n              <p>请选择需要生成分配方案的时间范围：</p>\n            </template>\n          </el-alert>\n        </div>\n        \n        <el-divider />\n        \n        <el-form :model=\"generatePlanForm\" label-width=\"80px\">\n          <el-form-item label=\"年份\" required>\n            <el-select \n              v-model=\"generatePlanForm.year\" \n              placeholder=\"选择年份\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"year in yearOptions\" \n                :key=\"year\" \n                :label=\"year\" \n                :value=\"year\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"月份\" required>\n            <el-select \n              v-model=\"generatePlanForm.month\" \n              placeholder=\"选择月份\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"month in monthOptions\" \n                :key=\"month\" \n                :label=\"`${month}月`\" \n                :value=\"month\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"周序号\" required>\n            <el-select \n              v-model=\"generatePlanForm.weekSeq\" \n              placeholder=\"选择周序号\"\n              style=\"width: 100%\"\n            >\n              <el-option \n                v-for=\"week in weekOptions\" \n                :key=\"week\" \n                :label=\"`第${week}周`\" \n                :value=\"week\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <el-divider content-position=\"left\">\n            <span style=\"font-size: 13px; color: #606266;\">\n              档位+市场类型分配比例\n              <el-tooltip content=\"仅用于投放方式为'档位+市场类型'的卷烟\" placement=\"top\">\n                <el-icon style=\"margin-left: 5px; cursor: help;\"><QuestionFilled /></el-icon>\n              </el-tooltip>\n            </span>\n          </el-divider>\n          \n          <el-alert\n            title=\"比例参数说明\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n            style=\"margin-bottom: 15px;\"\n          >\n            <template #default>\n              <div style=\"font-size: 12px; line-height: 1.6;\">\n                <p style=\"margin: 4px 0;\">• 仅用于投放方式为\"档位+市场类型\"的卷烟</p>\n                <p style=\"margin: 4px 0;\">• 其他投放方式（档位+区县、档位+城乡分类代码等）不受影响</p>\n                <p style=\"margin: 4px 0;\">• 比例总和必须为100%</p>\n                <p style=\"margin: 4px 0;\">• 不设置时使用默认值：城网40%，农网60%</p>\n              </div>\n            </template>\n          </el-alert>\n          \n          <el-form-item label=\"城网比例\" required>\n            <el-input-number\n              v-model=\"generatePlanForm.urbanRatio\"\n              :min=\"0\"\n              :max=\"100\"\n              :precision=\"0\"\n              :step=\"5\"\n              style=\"width: 100%\"\n              @change=\"handleUrbanRatioChange\"\n            >\n              <template #suffix>%</template>\n            </el-input-number>\n          </el-form-item>\n          \n          <el-form-item label=\"农网比例\" required>\n            <el-input-number\n              v-model=\"generatePlanForm.ruralRatio\"\n              :min=\"0\"\n              :max=\"100\"\n              :precision=\"0\"\n              :step=\"5\"\n              style=\"width: 100%\"\n              @change=\"handleRuralRatioChange\"\n            >\n              <template #suffix>%</template>\n            </el-input-number>\n          </el-form-item>\n          \n          <el-form-item>\n            <el-alert\n              :title=\"ratioValidationMessage\"\n              :type=\"ratioValidationType\"\n              :closable=\"false\"\n              show-icon\n            />\n          </el-form-item>\n        </el-form>\n        \n        <div class=\"generate-tips\">\n          <el-alert\n            v-if=\"!isGeneratePlanTimeComplete\"\n            title=\"请选择完整的时间信息后再生成分配方案\"\n            type=\"warning\"\n            :closable=\"false\"\n            show-icon\n          />\n          <el-alert\n            v-else\n            :title=\"`将为 ${generatePlanForm.year}年${generatePlanForm.month}月第${generatePlanForm.weekSeq}周 生成分配方案`\"\n            type=\"success\"\n            :closable=\"false\"\n            show-icon\n          />\n        </div>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"generatePlanDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleGeneratePlan\"\n            :loading=\"generatingPlan\"\n            :disabled=\"!canGeneratePlan\"\n          >\n            {{ generatingPlan ? '生成中...' : '确定生成' }}\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { DocumentAdd, DataAnalysis, Plus, Cpu, QuestionFilled } from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { cigaretteDistributionAPI } from '../services/api'\n\nexport default {\n  name: 'ImportTable',\n  components: {\n    DocumentAdd,\n    DataAnalysis,\n    Plus,\n    Cpu,\n    QuestionFilled\n  },\n  emits: ['import-success', 'data-refresh'],\n  data() {\n    return {\n      // 卷烟投放基本信息导入\n      basicInfoImportDialogVisible: false,\n      basicInfoFileList: [],\n      basicInfoImporting: false,\n      basicInfoTimeForm: {\n        year: null,\n        month: null,\n        weekSeq: null\n      },\n      \n      // 区域客户数导入\n      customerDataImportDialogVisible: false,\n      customerDataFileList: [],\n      customerDataImporting: false,\n      customerImportForm: {\n        deliveryMethod: '',\n        deliveryEtype: '',\n        year: null,\n        month: null,\n        isBiWeeklyFloat: false\n      },\n      \n      // 生成分配方案\n      generatePlanDialogVisible: false,\n      generatePlanForm: {\n        year: null,\n        month: null,\n        weekSeq: null,\n        urbanRatio: 40,  // 城网比例，默认40%\n        ruralRatio: 60   // 农网比例，默认60%\n      },\n      generatingPlan: false\n    }\n  },\n  computed: {\n    // 年份选项\n    yearOptions() {\n      const currentYear = new Date().getFullYear()\n      const years = []\n      for (let year = currentYear - 2; year <= currentYear + 2; year++) {\n        years.push(year)\n      }\n      return years\n    },\n    \n    // 月份选项\n    monthOptions() {\n      return Array.from({ length: 12 }, (_, i) => i + 1)\n    },\n    \n    // 周序号选项\n    weekOptions() {\n      return [1, 2, 3, 4, 5]\n    },\n    \n    // 基本信息时间表单是否完整\n    isBasicInfoTimeComplete() {\n      return this.basicInfoTimeForm.year && \n             this.basicInfoTimeForm.month && \n             this.basicInfoTimeForm.weekSeq\n    },\n    \n    // 是否可以导入基本信息\n    canImportBasicInfo() {\n      return this.basicInfoFileList.length > 0 && \n             this.isBasicInfoTimeComplete &&\n             !this.basicInfoImporting\n    },\n    \n    // 是否可以导入客户数据\n    canImportCustomerData() {\n      const hasFile = this.customerDataFileList.length > 0\n      const hasDeliveryMethod = this.customerImportForm.deliveryMethod\n      const hasYear = this.customerImportForm.year\n      const hasMonth = this.customerImportForm.month\n      \n      // 如果是按档位统一投放，不需要扩展投放类型\n      // 如果是按档位扩展投放，需要选择扩展投放类型\n      let hasValidDeliveryType = false\n      if (this.customerImportForm.deliveryMethod === '按档位统一投放') {\n        hasValidDeliveryType = true\n      } else if (this.customerImportForm.deliveryMethod === '按档位扩展投放') {\n        hasValidDeliveryType = !!this.customerImportForm.deliveryEtype\n      }\n      \n      return hasFile && hasDeliveryMethod && hasYear && hasMonth && hasValidDeliveryType && !this.customerDataImporting\n    },\n    \n    // 生成分配方案时间表单是否完整\n    isGeneratePlanTimeComplete() {\n      return this.generatePlanForm.year && \n             this.generatePlanForm.month && \n             this.generatePlanForm.weekSeq\n    },\n    \n    // 是否可以生成分配方案\n    canGeneratePlan() {\n      return this.isGeneratePlanTimeComplete && \n             this.isRatioValid && \n             !this.generatingPlan\n    },\n    \n    // 比例是否有效（城网+农网=100%）\n    isRatioValid() {\n      const total = this.generatePlanForm.urbanRatio + this.generatePlanForm.ruralRatio\n      return total === 100\n    },\n    \n    // 比例验证消息\n    ratioValidationMessage() {\n      const total = this.generatePlanForm.urbanRatio + this.generatePlanForm.ruralRatio\n      if (total === 100) {\n        return `比例设置正确：城网 ${this.generatePlanForm.urbanRatio}% + 农网 ${this.generatePlanForm.ruralRatio}% = 100%`\n      } else if (total > 100) {\n        return `比例总和超过100%，当前为 ${total}%，请调整`\n      } else {\n        return `比例总和不足100%，当前为 ${total}%，请调整`\n      }\n    },\n    \n    // 比例验证类型\n    ratioValidationType() {\n      const total = this.generatePlanForm.urbanRatio + this.generatePlanForm.ruralRatio\n      return total === 100 ? 'success' : 'warning'\n    }\n  },\n  methods: {\n    // =================== 基本信息导入方法 ===================\n    \n    // 显示基本信息导入对话框\n    showBasicInfoImportDialog() {\n      this.basicInfoImportDialogVisible = true\n    },\n    \n    // 基本信息文件上传前检查\n    handleBasicInfoBeforeUpload(file) {\n      // 扩展Excel文件类型支持\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                      file.type === 'application/vnd.ms-excel' ||\n                      file.type === 'application/excel' ||\n                      file.type === 'application/x-excel' ||\n                      file.type === 'application/x-msexcel' ||\n                      file.name.toLowerCase().endsWith('.xlsx') ||\n                      file.name.toLowerCase().endsWith('.xls')\n      const isLt10M = file.size / 1024 / 1024 < 10\n      \n      if (!isExcel) {\n        ElMessage.error(`只能上传Excel文件! 当前文件类型: ${file.type}`)\n        return false\n      }\n      if (!isLt10M) {\n        ElMessage.error('文件大小不能超过10MB!')\n        return false\n      }\n      \n      // 保存原始文件对象\n      this.basicInfoFileList = [file]\n      console.log('基本信息文件上传前检查:', {\n        file: file,\n        isFile: file instanceof File,\n        fileName: file.name,\n        fileType: file.type,\n        fileSize: file.size\n      })\n      return false // 阻止自动上传\n    },\n    \n    // 基本信息文件变化\n    handleBasicInfoChange(file, fileList) {\n      // 确保文件对象被正确保存，保持原始File对象\n      if (fileList && fileList.length > 0) {\n        // 使用原始文件对象，而不是Element Plus处理后的对象\n        const originalFile = file.raw || file\n        this.basicInfoFileList = [originalFile]\n        console.log('基本信息文件变化处理:', {\n          originalFile: originalFile,\n          isFile: originalFile instanceof File,\n          fileName: originalFile.name,\n          fileType: originalFile.type\n        })\n      } else {\n        this.basicInfoFileList = []\n      }\n    },\n    \n    // 移除基本信息文件\n    handleBasicInfoRemove() {\n      this.basicInfoFileList = []\n    },\n    \n    // 检查基本信息Excel表结构\n    async checkBasicInfoStructure(file) {\n      try {\n        // 根据文档v3.0要求，检查必需列名（大小写敏感，与init.sql表结构完全一致，除了自动生成的id字段）\n        const requiredColumns = [\n          'CIG_CODE',      // 卷烟代码\n          'CIG_NAME',      // 卷烟名称  \n          'YEAR',          // 年份\n          'MONTH',         // 月份\n          'WEEK_SEQ',      // 周序号\n          'URS',           // URS\n          'ADV',           // ADV\n          'DELIVERY_METHOD', // 档位投放方式\n          'DELIVERY_ETYPE',  // 扩展投放方式\n          'DELIVERY_AREA',  // 投放区域\n          'remark'         // 备注\n        ]\n        \n        // 可选列（Excel中可以包含，但系统会自动处理）\n        const optionalColumns = ['id'] // 自动生成的ID字段，Excel中可以包含但会被忽略\n        \n        // 文件大小检查（≤10MB）\n        const maxSize = 10 * 1024 * 1024 // 10MB\n        if (file.size > maxSize) {\n          return {\n            valid: false,\n            message: '文件大小超过限制（最大10MB）'\n          }\n        }\n        \n        // 文件类型检查 - 扩展支持更多Excel文件类型\n        const validTypes = [\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // .xlsx\n          'application/vnd.ms-excel', // .xls\n          'application/excel',\n          'application/x-excel',\n          'application/x-msexcel'\n        ]\n        \n        // 也支持通过文件扩展名检查\n        const fileName = file.name.toLowerCase()\n        const hasValidExtension = fileName.endsWith('.xlsx') || fileName.endsWith('.xls')\n        const hasValidMimeType = validTypes.includes(file.type)\n        \n        if (!hasValidMimeType && !hasValidExtension) {\n          return {\n            valid: false,\n            message: `文件格式不正确，请上传Excel文件(.xlsx或.xls)。当前文件类型: ${file.type}`\n          }\n        }\n        \n        // 记录检查信息\n        console.log('检查基本信息Excel表结构...', {\n          fileName: file.name,\n          fileSize: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n          fileType: file.type,\n          requiredColumns: requiredColumns,\n          optionalColumns: optionalColumns,\n          totalRequiredColumns: requiredColumns.length,\n          note: 'id列是可选的，系统会自动生成新的ID'\n        })\n        \n        return {\n          valid: true,\n          message: '表结构检查通过，包含所有必需列名',\n          requiredColumns: requiredColumns\n        }\n      } catch (error) {\n        return {\n          valid: false,\n          message: `表结构检查失败: ${error.message}`\n        }\n      }\n    },\n\n    // 导入基本信息\n    async handleBasicInfoImport() {\n      if (!this.canImportBasicInfo) {\n        ElMessage.warning('请检查文件和时间选择')\n        return\n      }\n      \n      // 额外验证时间表单数据\n      if (!this.basicInfoTimeForm.year || !this.basicInfoTimeForm.month || !this.basicInfoTimeForm.weekSeq) {\n        ElMessage.error('请选择完整的时间信息（年份、月份、周序号）')\n        return\n      }\n      \n      this.basicInfoImporting = true\n      \n      try {\n        // 验证文件对象\n        const file = this.basicInfoFileList[0]\n        if (!file) {\n          ElMessage.error('请先选择文件')\n          return\n        }\n        \n        if (!(file instanceof File)) {\n          ElMessage.error('文件对象无效，请重新选择文件')\n          return\n        }\n        \n        console.log('基本信息导入文件对象:', {\n          file: file,\n          isFile: file instanceof File,\n          fileName: file.name,\n          fileType: file.type\n        })\n        \n        // 先进行表结构检查\n        const structureCheck = await this.checkBasicInfoStructure(file)\n        if (!structureCheck.valid) {\n          ElMessage.error(structureCheck.message)\n          return\n        }\n        \n        // 调试信息：显示表单数据\n        console.log('基本信息导入表单数据:', {\n          year: this.basicInfoTimeForm.year,\n          month: this.basicInfoTimeForm.month,\n          weekSeq: this.basicInfoTimeForm.weekSeq,\n          file: file\n        })\n        \n        const formData = new FormData()\n        formData.append('file', file)\n        formData.append('year', this.basicInfoTimeForm.year.toString())\n        formData.append('month', this.basicInfoTimeForm.month.toString())\n        formData.append('weekSeq', this.basicInfoTimeForm.weekSeq.toString())\n        \n        // 调试信息：显示FormData内容\n        console.log('FormData内容:')\n        for (let [key, value] of formData.entries()) {\n          console.log(`${key}:`, value, typeof value)\n        }\n        \n        // 调用后端导入接口\n        const response = await cigaretteDistributionAPI.importBasicInfo(formData)\n        \n        if (response.data.success) {\n          ElMessage.success(`基本信息导入成功！共导入 ${response.data.insertedCount || response.data.importCount} 条记录`)\n          \n          // 关闭对话框并清理文件\n          this.basicInfoImportDialogVisible = false\n          this.basicInfoFileList = []\n          this.basicInfoTimeForm = { year: null, month: null, weekSeq: null }\n          \n          // 触发数据刷新事件\n          this.$emit('data-refresh')\n          this.$emit('import-success', {\n            type: 'basic-info',\n            result: response.data\n          })\n        } else {\n          throw new Error(response.data.message || '导入失败')\n        }\n      } catch (error) {\n        console.error('导入基本信息失败:', error)\n        ElMessage.error(`导入失败: ${error.message}`)\n      } finally {\n        this.basicInfoImporting = false\n      }\n    },\n    \n    // =================== 客户数据导入方法 ===================\n    \n    // 显示客户数据导入对话框\n    showCustomerDataImportDialog() {\n      this.customerDataImportDialogVisible = true\n    },\n    \n    // 客户数据投放类型变化\n    handleCustomerImportTypeChange(value) {\n      if (value === '按档位统一投放') {\n        this.customerImportForm.deliveryEtype = '按档位统一投放'\n      } else {\n        this.customerImportForm.deliveryEtype = ''\n      }\n    },\n    \n    // 客户数据文件上传前检查\n    handleCustomerDataBeforeUpload(file) {\n      \n      // 扩展Excel文件类型支持\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                      file.type === 'application/vnd.ms-excel' ||\n                      file.type === 'application/excel' ||\n                      file.type === 'application/x-excel' ||\n                      file.type === 'application/x-msexcel' ||\n                      file.name.toLowerCase().endsWith('.xlsx') ||\n                      file.name.toLowerCase().endsWith('.xls')\n      const isLt10M = file.size / 1024 / 1024 < 10\n      \n      if (!isExcel) {\n        ElMessage.error(`只能上传Excel文件! 当前文件类型: ${file.type}`)\n        return false\n      }\n      if (!isLt10M) {\n        ElMessage.error('文件大小不能超过10MB!')\n        return false\n      }\n      \n      // 保存原始文件对象\n      this.customerDataFileList = [file]\n      console.log('文件上传前检查:', {\n        file: file,\n        isFile: file instanceof File,\n        fileName: file.name,\n        fileType: file.type,\n        fileSize: file.size\n      })\n      return false // 阻止自动上传\n    },\n    \n    // 客户数据文件变化\n    handleCustomerDataChange(file, fileList) {\n      // 确保文件对象被正确保存，保持原始File对象\n      if (fileList && fileList.length > 0) {\n        // 使用原始文件对象，而不是Element Plus处理后的对象\n        const originalFile = file.raw || file\n        this.customerDataFileList = [originalFile]\n        console.log('文件变化处理:', {\n          originalFile: originalFile,\n          isFile: originalFile instanceof File,\n          fileName: originalFile.name,\n          fileType: originalFile.type\n        })\n      } else {\n        this.customerDataFileList = []\n      }\n    },\n    \n    // 移除客户数据文件\n    handleCustomerDataRemove() {\n      this.customerDataFileList = []\n    },\n    \n    \n    // 检查客户数据Excel表结构\n    async checkCustomerDataStructure(file) {\n      try {\n        // 根据文档v3.0要求，检查区域客户数表结构\n        const requiredColumns = ['region', 'TOTAL']\n        \n        // 添加D30到D1的档位列（必须包含30个档位列）\n        for (let i = 30; i >= 1; i--) {\n          requiredColumns.push(`D${i}`)\n        }\n        \n        // 文件大小检查（≤10MB）\n        const maxSize = 10 * 1024 * 1024 // 10MB\n        if (file.size > maxSize) {\n          return {\n            valid: false,\n            message: '文件大小超过限制（最大10MB）'\n          }\n        }\n        \n        // 文件类型检查 - 扩展支持更多Excel文件类型\n        const validTypes = [\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // .xlsx\n          'application/vnd.ms-excel', // .xls\n          'application/excel',\n          'application/x-excel',\n          'application/x-msexcel'\n        ]\n        \n        // 也支持通过文件扩展名检查\n        const fileName = file.name.toLowerCase()\n        const hasValidExtension = fileName.endsWith('.xlsx') || fileName.endsWith('.xls')\n        const hasValidMimeType = validTypes.includes(file.type)\n        \n        if (!hasValidMimeType && !hasValidExtension) {\n          return {\n            valid: false,\n            message: `文件格式不正确，请上传Excel文件(.xlsx或.xls)。当前文件类型: ${file.type}`\n          }\n        }\n        \n        // 记录检查信息\n        console.log('检查客户数据Excel表结构...', {\n          fileName: file.name,\n          fileSize: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n          fileType: file.type,\n          requiredColumns: requiredColumns,\n          totalColumns: requiredColumns.length,\n          dColumns: `D30到D1共30个档位列`,\n          note: '必须包含D30到D1共30个档位列，不能缺少任何一个'\n        })\n        \n        return {\n          valid: true,\n          message: '表结构检查通过，包含所有必需列名（包括30个档位列）',\n          requiredColumns: requiredColumns\n        }\n      } catch (error) {\n        return {\n          valid: false,\n          message: `表结构检查失败: ${error.message}`\n        }\n      }\n    },\n\n    // 导入客户数据\n    async handleCustomerDataImport() {\n      if (!this.canImportCustomerData) {\n        ElMessage.warning('请检查文件和投放类型选择')\n        return\n      }\n      \n      this.customerDataImporting = true\n      \n      try {\n        // 先进行表结构检查\n        const fileForCheck = this.customerDataFileList[0]\n        console.log('表结构检查文件对象:', {\n          file: fileForCheck,\n          isFile: fileForCheck instanceof File,\n          fileName: fileForCheck.name,\n          fileType: fileForCheck.type\n        })\n        const structureCheck = await this.checkCustomerDataStructure(fileForCheck)\n        if (!structureCheck.valid) {\n          ElMessage.error(structureCheck.message)\n          return\n        }\n        \n        // 验证文件对象\n        const file = this.customerDataFileList[0]\n        if (!file) {\n          ElMessage.error('请先选择文件')\n          return\n        }\n        \n        if (!(file instanceof File)) {\n          ElMessage.error('文件对象无效，请重新选择文件')\n          return\n        }\n        \n        const formData = new FormData()\n        formData.append('file', file)\n        formData.append('year', this.customerImportForm.year.toString())\n        formData.append('month', this.customerImportForm.month.toString())\n        formData.append('deliveryMethod', this.customerImportForm.deliveryMethod)\n        // 根据投放方法设置扩展投放类型\n        // 当选择\"按档位统一投放\"时，deliveryEtype设置为\"按档位统一投放\"\n        // 当选择\"按档位扩展投放\"时，deliveryEtype设置为具体值\n        const deliveryEtype = this.customerImportForm.deliveryMethod === '按档位统一投放' \n          ? '按档位统一投放' \n          : (this.customerImportForm.deliveryEtype || '')\n        formData.append('deliveryEtype', deliveryEtype)\n        formData.append('isBiWeeklyFloat', this.customerImportForm.isBiWeeklyFloat.toString())\n        \n        // 调试信息：显示传递的参数\n        console.log('客户数据导入参数:', {\n          deliveryMethod: this.customerImportForm.deliveryMethod,\n          deliveryEtype: this.customerImportForm.deliveryEtype,\n          year: this.customerImportForm.year,\n          month: this.customerImportForm.month,\n          isBiWeeklyFloat: this.customerImportForm.isBiWeeklyFloat\n        })\n        \n        // 调试信息：显示FormData内容\n        console.log('FormData内容:')\n        for (let [key, value] of formData.entries()) {\n          console.log(`${key}:`, value, typeof value)\n          if (key === 'file') {\n            console.log('文件对象验证:', {\n              isFile: value instanceof File,\n              fileName: value.name,\n              fileSize: value.size,\n              fileType: value.type\n            })\n          }\n        }\n        \n        // 特别检查文件对象\n        console.log('文件对象详情:', {\n          file: file,\n          fileName: file.name,\n          fileSize: file.size,\n          fileType: file.type,\n          isFile: file instanceof File\n        })\n        \n        // 调用后端导入接口\n        const response = await cigaretteDistributionAPI.importCustomerData(formData)\n        \n        if (response.data.success) {\n          ElMessage.success(`客户数据导入成功！共导入 ${response.data.insertedCount || response.data.importCount} 条记录`)\n          \n          // 关闭对话框并清理文件\n          this.customerDataImportDialogVisible = false\n          this.customerDataFileList = []\n          this.customerImportForm.deliveryMethod = ''\n          this.customerImportForm.deliveryEtype = ''\n          this.customerImportForm.year = null\n          this.customerImportForm.month = null\n          this.customerImportForm.isBiWeeklyFloat = false\n          \n          // 触发数据刷新事件\n          this.$emit('data-refresh')\n          this.$emit('import-success', {\n            type: 'customer-data',\n            result: response.data\n          })\n        } else {\n          throw new Error(response.data.message || '导入失败')\n        }\n      } catch (error) {\n        console.error('导入客户数据失败:', error)\n        \n        // 显示详细的错误信息\n        let errorMessage = '导入失败'\n        if (error.response && error.response.data) {\n          console.error('后端错误响应:', error.response.data)\n          if (error.response.data.message) {\n            errorMessage = error.response.data.message\n          } else if (error.response.data.errors) {\n            // 处理验证错误\n            const errors = error.response.data.errors\n            const errorMessages = Object.values(errors).join(', ')\n            errorMessage = `参数验证失败: ${errorMessages}`\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n      } finally {\n        this.customerDataImporting = false\n      }\n    },\n    \n    // =================== 生成分配方案方法 ===================\n    \n    // 显示生成分配方案对话框\n    showGeneratePlanDialog() {\n      // 重置为默认值\n      this.generatePlanForm.urbanRatio = 40\n      this.generatePlanForm.ruralRatio = 60\n      this.generatePlanDialogVisible = true\n    },\n    \n    // 城网比例变化时自动调整农网比例\n    handleUrbanRatioChange(value) {\n      if (value === null || value === undefined) {\n        this.generatePlanForm.urbanRatio = 0\n        value = 0\n      }\n      \n      // 确保在0-100范围内\n      if (value < 0) {\n        this.generatePlanForm.urbanRatio = 0\n        value = 0\n      } else if (value > 100) {\n        this.generatePlanForm.urbanRatio = 100\n        value = 100\n      }\n      \n      // 自动调整农网比例\n      this.generatePlanForm.ruralRatio = 100 - value\n    },\n    \n    // 农网比例变化时自动调整城网比例\n    handleRuralRatioChange(value) {\n      if (value === null || value === undefined) {\n        this.generatePlanForm.ruralRatio = 0\n        value = 0\n      }\n      \n      // 确保在0-100范围内\n      if (value < 0) {\n        this.generatePlanForm.ruralRatio = 0\n        value = 0\n      } else if (value > 100) {\n        this.generatePlanForm.ruralRatio = 100\n        value = 100\n      }\n      \n      // 自动调整城网比例\n      this.generatePlanForm.urbanRatio = 100 - value\n    },\n    \n    // 生成分配方案\n    async handleGeneratePlan() {\n      if (!this.canGeneratePlan) {\n        if (!this.isGeneratePlanTimeComplete) {\n          ElMessage.warning('请选择完整的时间信息')\n        } else if (!this.isRatioValid) {\n          ElMessage.warning('请确保城网和农网比例总和为100%')\n        }\n        return\n      }\n      \n      this.generatingPlan = true\n      \n      try {\n        const requestData = {\n          year: this.generatePlanForm.year,\n          month: this.generatePlanForm.month,\n          weekSeq: this.generatePlanForm.weekSeq,\n          urbanRatio: this.generatePlanForm.urbanRatio,  // 前端存储：百分比整数（如40）\n          ruralRatio: this.generatePlanForm.ruralRatio   // 前端存储：百分比整数（如60）\n        }\n        \n        console.log('生成分配方案请求数据（前端格式）:', requestData)\n        console.log('发送给后端的格式（小数）:', {\n          ...requestData,\n          urbanRatio: requestData.urbanRatio / 100,  // 转换：40 -> 0.4\n          ruralRatio: requestData.ruralRatio / 100   // 转换：60 -> 0.6\n        })\n        \n        // 调用后端生成分配方案接口\n        const response = await cigaretteDistributionAPI.generateDistributionPlan(requestData)\n        \n        console.log('生成分配方案响应数据:', response.data)\n        \n        if (response.data.success) {\n          // 显示简短的成功消息\n          ElMessage.success({\n            message: '分配方案生成成功！',\n            duration: 3000\n          })\n          \n          // 显示详细统计信息的弹窗\n          const statisticsDetails = []\n          \n          if (response.data.totalCigarettes !== undefined && response.data.totalCigarettes !== null) {\n            statisticsDetails.push(`📊 共处理卷烟种类：${response.data.totalCigarettes} 种`)\n          }\n          \n          if (response.data.successfulAllocations !== undefined && response.data.successfulAllocations !== null) {\n            statisticsDetails.push(`✅ 成功分配卷烟：${response.data.successfulAllocations} 种`)\n          }\n          \n          if (response.data.deletedRecords !== undefined && response.data.deletedRecords !== null) {\n            statisticsDetails.push(`🗑️ 删除旧记录：${response.data.deletedRecords} 条`)\n          }\n          \n          if (response.data.processedCount !== undefined && response.data.processedCount !== null) {\n            statisticsDetails.push(`📝 生成新记录：${response.data.processedCount} 条`)\n          }\n          \n          if (response.data.processingTime) {\n            statisticsDetails.push(`⏱️ 处理耗时：${response.data.processingTime}`)\n          }\n          \n          const messageHtml = `\n            <div style=\"text-align: center; line-height: 1.6;\">\n              <p style=\"margin: 10px 0; font-weight: bold; color: #409EFF; font-size: 16px;\">✅ 操作执行成功</p>\n              <hr style=\"margin: 15px 0; border: none; border-top: 1px solid #EBEEF5;\">\n              <div style=\"text-align: left; line-height: 1.8;\">\n                ${statisticsDetails.map(detail => `<p style=\"margin: 8px 0;\">${detail}</p>`).join('')}\n              </div>\n            </div>\n          `\n          \n          await ElMessageBox({\n            title: '生成分配方案完成',\n            message: messageHtml,\n            confirmButtonText: '确定',\n            type: 'success',\n            customClass: 'generation-result-dialog',\n            dangerouslyUseHTMLString: true\n          })\n          \n          // 关闭对话框并清理表单\n          this.generatePlanDialogVisible = false\n          this.generatePlanForm = { \n            year: null, \n            month: null, \n            weekSeq: null,\n            urbanRatio: 40,  // 重置为默认值\n            ruralRatio: 60   // 重置为默认值\n          }\n          \n          // 触发数据刷新事件\n          this.$emit('data-refresh')\n          this.$emit('import-success', {\n            type: 'generate-plan',\n            result: response.data,\n            searchParams: requestData\n          })\n        } else {\n          throw new Error(response.data.message || '生成分配方案失败')\n        }\n      } catch (error) {\n        console.error('生成分配方案失败:', error)\n        ElMessage.error(`生成失败: ${error.message}`)\n      } finally {\n        this.generatingPlan = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.import-table-component {\n  width: 100%;\n}\n\n/* 导入功能区域样式 */\n.import-buttons-row {\n  display: flex;\n  gap: 15px;\n  padding: 15px;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-left: 4px solid #409eff;\n}\n\n.import-buttons-row .el-button {\n  height: 40px;\n  padding: 0 20px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n/* 对话框样式 */\n.upload-tip {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n/* 生成分配方案对话框样式 */\n.generate-plan-content {\n  padding: 0;\n}\n\n.plan-description {\n  margin-bottom: 15px;\n}\n\n.plan-description p {\n  margin: 8px 0;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.generate-tips {\n  margin-top: 15px;\n}\n\n.generate-tips .el-alert {\n  margin: 10px 0;\n}\n\n/* 表单提示样式 */\n.form-tip {\n  margin-top: 4px;\n  font-size: 12px;\n  color: #909399;\n  line-height: 1.4;\n}\n\n/* 表结构说明样式 */\n.structure-requirements {\n  font-size: 13px;\n  line-height: 1.5;\n}\n\n.structure-requirements p {\n  margin: 8px 0 4px 0;\n  font-weight: 500;\n}\n\n.structure-requirements ul {\n  margin: 4px 0;\n  padding-left: 20px;\n}\n\n.structure-requirements li {\n  margin: 2px 0;\n}\n\n.structure-requirements code {\n  background-color: #f1f2f3;\n  padding: 2px 4px;\n  border-radius: 3px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 12px;\n  color: #e6a23c;\n}\n\n/* 表名预览样式 */\n.el-form-item:has(.el-input[readonly]) {\n  .el-input__inner {\n    background-color: #f5f7fa;\n    color: #606266;\n    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  }\n}\n\n/* 生成分配方案结果弹窗样式 */\n:deep(.generation-result-dialog) {\n  .el-message-box {\n    width: 480px;\n    border-radius: 12px;\n  }\n  \n  .el-message-box__title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #303133;\n  }\n  \n  .el-message-box__content {\n    padding: 20px 20px 30px;\n  }\n  \n  .el-message-box__message {\n    font-size: 14px;\n    line-height: 1.6;\n    \n    p {\n      margin: 8px 0;\n      display: flex;\n      align-items: center;\n      \n      &:first-child {\n        font-size: 16px;\n        justify-content: center;\n      }\n    }\n  }\n  \n  .el-message-box__btns {\n    padding: 10px 20px 20px;\n    \n    .el-button--primary {\n      padding: 10px 24px;\n      border-radius: 6px;\n      font-weight: 500;\n    }\n  }\n}\n</style>\n","import { render } from \"./ImportTable.vue?vue&type=template&id=5d9fde14&scoped=true\"\nimport script from \"./ImportTable.vue?vue&type=script&lang=js\"\nexport * from \"./ImportTable.vue?vue&type=script&lang=js\"\n\nimport \"./ImportTable.vue?vue&type=style&index=0&id=5d9fde14&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d9fde14\"]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=20e38774&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=20e38774&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/robin/Desktop/CigaretteDistributionSystem/CigaretteDistributionSystem-vue-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20e38774\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\n\nconst app = createApp(App)\n\n// 注册Element Plus图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\napp.use(ElementPlus)\napp.use(router)\napp.mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=318347f8&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Position3DChart.vue?vue&type=style&index=0&id=209232d4&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Home.vue?vue&type=style&index=0&id=20e38774&scoped=true&lang=css\""],"sourceRoot":""}